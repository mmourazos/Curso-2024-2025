{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Sobre este sitio","text":"<p>Este sitio est\u00e1 hospedado en GitHub Pages. Puedes acceder a \u00e9l a trav\u00e9s de la siguiente URL: mmourazos.github.io/Curso-2024-2025.</p> <p>Para quien pueda estar interesado se utiliz\u00f3 el framework mkdocs.org. En concreto el theme mkdocs-material.</p> <p>Para realizar el renderizado de las p\u00e1ginas se utiliz\u00f3 la herramienta de GitHub actions (siguiendo las indicaciones del la documentaci\u00f3n de mkdocs).</p> <p>Para la edici\u00f3n de los ficheros markdown se utiliz\u00f3 el editor de texto en consola Neovim con la distribuci\u00f3n LazyVim de Folke Lemaitre.</p> <p>Finalmente, para gestionar el repositorio de GitHub se utiliz\u00f3 la aplicaci\u00f3n Lazygit de Jesse Duffield.</p> <p>Un saludo Manuel.</p>"},{"location":"Cosas%20interesantes/","title":"Cosas interesantes que me voy encontrando","text":""},{"location":"Cosas%20interesantes/#extraer-texto-de-imagen-o-documento","title":"Extraer texto de imagen o documento","text":"<p>A veces nos encontramos con un pdf o una imagen de la que queremos extraer texto. En principio no deber\u00eda de haber problema en copiar y pegar desde el pdf puesto que es texto, pero hay pdfs que est\u00e1 protegidos para que no se pueda copiar el texto. Obviamente de las im\u00e1genes no se puede copiar pues son eso, im\u00e1genes.</p> <p>Dentro de conjunto de herramientas gratuitas de Microsoft Powertoys existe una llamada text extractor que permite extraer texto de im\u00e1genes. Esta herramienta es muy \u00fatil para extraer texto de im\u00e1genes de documentos, presentaciones, etc.</p> <p>Para aquellos que est\u00e9n m\u00e1s interesados de desarrollo de aplicaciones tambi\u00e9n puede ser interesante DevToys que es una colecci\u00f3n de herramientas similar a PowerToys pero orientada a desarrolladores.</p>"},{"location":"apuntes/","title":"Apuntes de inform\u00e1tica 2024/2025","text":"<p>En esta p\u00e1gina se ir\u00e1n poniendo los apuntes de los siguientes m\u00f3dulos:</p> <ul> <li>Gesti\u00f3n de bases de datos (GBD) del ciclo de administraci\u00f3n de sistemas inform\u00e1ticos en red (1\u00ba curso).</li> <li>Administraci\u00f3n de sistemas gestores de bases de datos (ASGBD) del ciclo de administraci\u00f3n de sistemas inform\u00e1ticos en red (ASIR) (2\u00ba curso).</li> <li>Entornos de desarrollo (ED) del de desarrollo de aplicaciones multiplataforma (DAM) (1\u00ba curso).</li> </ul> <p>Los apuntes se ir\u00e1n actualizando a lo largo del curso.</p> <p>Es posible que los apuntes se modifiquen una vez publicados para corregir errores, a\u00f1adir gr\u00e1ficos, etc.</p> <p>Atentamente Manuel.</p>"},{"location":"ASGBD/Cosas%20de%20interes%20MySQL/","title":"Recopilaci\u00f3n de cosas interesantes de MySQL","text":"<ul> <li>MySQLShell <code>mysqlsh</code></li> <li>Cuentas en MySQL</li> <li>\u00bfC\u00f3mo se ha creado una tabla?</li> <li>No puedo acceder a MySQL como root (Ubuntu)</li> <li>\u00bfPor qu\u00e9 sucede esto?</li> <li>\u00bfCual es la clave del usuario <code>root</code> en Ubuntu?</li> <li>Conclusiones</li> </ul>"},{"location":"ASGBD/Cosas%20de%20interes%20MySQL/#mysqlshell-mysqlsh","title":"MySQLShell <code>mysqlsh</code>","text":"<p>Si record\u00e1is el d\u00eda que tuvisteis que editar el archivo de configuraci\u00f3n del servidor de MySQL para permitir conexiones desde distintas direcciones IP recordar\u00e9is esto:</p> <pre><code># Instead of skip-networking the default is now to listen only on\n# localhost which is more compatible and is not less secure.\nbind-address            = 127.0.0.1,192.168.56.115\nmysqlx-bind-address     = 127.0.0.1\n</code></pre> <p>Nosotros modificamos el valor de <code>bind-address</code> a\u00f1adiendo la direcci\u00f3n del interfaz de red de la m\u00e1quina virtual desde el que queremos que escuche MySQL. Ok, pero \u00bfqu\u00e9 hace lo que est\u00e1 debajo: <code>mysqlx-bind-address</code>? \u00bfQui\u00e9n es <code>mysqlx</code>?</p> <p><code>mysqlx</code> es un protocolo que permite la comunicaci\u00f3n con el servidor de MySQL a trav\u00e9s de una API (Application Programming Interface). La aplicaci\u00f3n que hace uso de esta API es MySQLShell.</p> <p>MySQLShell nos permite conectarnos a una base de datos MySQL y ejecutar distintos tipos de scripts de matera remota.</p> <p>Si queremos ejecutar un script SQL haremos lo siguiente:</p> <pre><code>mysqlshell --sql -u usuario -h ip_del_servidor_mysql -f script.sql\n</code></pre> <p>Hemos de tener en cuenta que el usuario ha de poder conectarse desde d\u00f3nde lancemos MySQLShell y ha de tener permisos para ejecutar las sentencias SQL que incluya el script. Adem\u00e1s de ejecutar scripts SQL tambi\u00e9n podemos ejecutar scripts de JavaScript (opci\u00f3n <code>--js</code>) y Python (opci\u00f3n <code>--py</code>).</p> <p>Si usamos la opci\u00f3n <code>-f script</code> se nos abrir\u00e1 una consola interactiva en la que podremos ejecutar sentencias SQL (por defecto), JavaScript o Python.</p>"},{"location":"ASGBD/Cosas%20de%20interes%20MySQL/#cuentas-en-mysql","title":"Cuentas en MySQL","text":"<p>Las cuentas de los usuarios de MySQL se almacenan en la base de datos <code>mysql.user</code>. Esta base de datos los siguientes campos:</p> <ul> <li><code>user</code>: Nombre del usuario.</li> <li><code>host</code>: Host desde el que se puede conectar el usuario.</li> <li><code>plugin</code>: Plugin que se va a usar para autenticar al usuario.</li> <li><code>authentication_string</code>: Contrase\u00f1a cifrada del usuario.</li> <li><code>password_expired</code>: Indica si la contrase\u00f1a ha expirado.</li> <li>Un mont\u00f3n de campos de la forma <code>..._priv</code> que indican los privilegios que tiene el usuario.</li> <li>Otros campos que no nos interesan.</li> </ul> <p>La clave primaria de esta tabla es la combinaci\u00f3n de los campos <code>user</code> y <code>host</code>. Ninguno de ellos puede ser <code>NULL</code> pero s\u00ed se admite que sean vac\u00edos (<code>''</code>).</p> <p>No es normal que un usuario tenga alguno de estos campos vac\u00edos.</p>"},{"location":"ASGBD/Cosas%20de%20interes%20MySQL/#como-se-ha-creado-una-tabla","title":"\u00bfC\u00f3mo se ha creado una tabla?","text":"<p>Para obtener la sentencia <code>CREATE TABLE</code> que dio lugar a una tabla en MySQL podemos ejecutar la siguiente consulta:</p> <pre><code>SHOW CREATE TABLE nombre_tabla;\n</code></pre>"},{"location":"ASGBD/Cosas%20de%20interes%20MySQL/#no-puedo-acceder-a-mysql-como-root-ubuntu","title":"No puedo acceder a MySQL como root (Ubuntu)","text":"<p>Si has instalado MySQL en Ubuntu e intentas acceder como root te encontrar\u00e1s con un problema:</p> <pre><code>$ mysql -u root -p\nEnter password:\nERROR 1698 (28000): Access denied for user 'root'@'localhost'\n</code></pre> <p>Aunque hayas introducido el password correcto para el usuarios <code>root</code> del sistema.</p>"},{"location":"ASGBD/Cosas%20de%20interes%20MySQL/#por-que-sucede-esto","title":"\u00bfPor qu\u00e9 sucede esto?","text":"<p>Si entramos en la base de datos por las bravas <code>sudo mysql</code> y consultamos la tabla con la informaci\u00f3n sobre los usuarios <code>mysql.user</code> veremos que tiene dos campos relacionados con la autenticaci\u00f3n que nos interesan:</p> <ul> <li><code>authentication_string</code>: Aqu\u00ed se almacena la contrase\u00f1a cifrada.</li> <li><code>plugin</code>: Nos indica el plugin que se va a usar para autenticar al usuario.</li> </ul> <p>Si cotilleamos qu\u00e9 valores hay en estos campos para root (adem\u00e1s de host):</p> <pre><code>SELECT user, host, plugin, authentication_string FROM mysql.user WHERE User='root';\n+------+-----------+-------------+-----------------------+\n| user | host      | plugin      | authentication_string |\n+------+-----------+-------------+-----------------------+\n| root | localhost | auth_socket |                       |\n+------+-----------+-------------+-----------------------+\n1 row in set (0.0010 sec)\n</code></pre> <p>Como podemos ver hay dos cosas que nos llaman la atenci\u00f3n:</p> <ul> <li>El campo <code>authentication_string</code> est\u00e1 vac\u00edo. Esto significa que no hay contrase\u00f1a configurada para el usuario <code>root</code>.</li> <li>El campo <code>plugin</code> tiene el valor <code>auth_socket</code>. Esto significa que el usuario <code>root</code> se autentica a trav\u00e9s del socket del sistema.</li> </ul> <p>Es decir, el usuario <code>root</code> que se usa para acceder desde <code>localhost</code> a MySQL ser\u00e1 el usuario <code>root</code> de sistema Ubuntu.</p>"},{"location":"ASGBD/Cosas%20de%20interes%20MySQL/#cual-es-la-clave-del-usuario-root-en-ubuntu","title":"\u00bfCual es la clave del usuario <code>root</code> en Ubuntu?","text":"<p>Ubuntu, por defecto, no tiene una contrase\u00f1a configurada para el usuario <code>root</code>. Lo que hace imposible acceder al sistema como <code>root</code>. Esto se hace por seguridad y para fomentar el uso de <code>sudo</code>. De esta forma el usuario que creamos durante el proceso de instalaci\u00f3n ser\u00e1 del grupo de administradores y podr\u00e1 ejecutar comandos con privilegios de root usando <code>sudo</code>.</p>"},{"location":"ASGBD/Cosas%20de%20interes%20MySQL/#conclusiones","title":"Conclusiones","text":"<p>Puesto que, en principio, no se puede hacer login como <code>root</code> en un sistema Ubuntu y como para hacer login en MySQL como <code>root</code> se usa el usuario del sistema Linux (<code>auth_socket</code>) no se puede hacer login en MySQL como <code>root</code>.</p>"},{"location":"ASGBD/Estructura%20del%20curso/","title":"Estructura del curso","text":""},{"location":"ASGBD/Introducci%C3%B3n/","title":"Introducci\u00f3n","text":"<p>Informaci\u00f3n general sobre la primera Unidad Did\u00e1ctica de ASGBD.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/0%20Introducci%C3%B3n/","title":"Una cosa","text":"<p>Una cosa es una cosa y eso es la verdad.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/","title":"Instalaci\u00f3n y configuraci\u00f3n de un Sistema Gestor de Base de Datos","text":"<ul> <li>Instalaci\u00f3n y configuraci\u00f3n de un Sistema Gestor de Base de Datos<ul> <li>Instalaci\u00f3n de MySQL Server<ul> <li>Instalaci\u00f3n en Windows<ul> <li>Descargando el instalador</li> <li>Usando winget</li> </ul> </li> <li>Instalaci\u00f3n en Linux</li> </ul> </li> <li>Instalaci\u00f3n de MySQL Workbench<ul> <li>Instalaci\u00f3n del WorkBench en Windows</li> <li>Instalaci\u00f3n del WorkBench en Linux</li> </ul> </li> <li>Conexi\u00f3n de MySQL Workbench con MySQL Server<ul> <li>Configuraci\u00f3n de MySQL Server</li> <li>Creaci\u00f3n de un usuario para acceso remoto<ul> <li>Conexi\u00f3n a MySQL Server como root</li> <li>Creaci\u00f3n de un usuario</li> <li>Dar permisos al usuario</li> </ul> </li> <li>Creaci\u00f3n de una conexi\u00f3n en MySQL Workbench</li> </ul> </li> </ul> </li> </ul> <p>En esta actividad vamos a instalar y configurar un Sistema Gestor de Base de Datos. Para ello vamos a utilizar el Sistema Gestor de Base de Datos MySQL.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#instalacion-de-mysql-server","title":"Instalaci\u00f3n de MySQL Server","text":"<p>En primer lugar veremos c\u00f3mo instalar MySQL Server en Windows y en una distribuci\u00f3n de Linux (en concreto Ubuntu Server).</p> <p>Hoy en d\u00eda, a la hora de realizar la instalaci\u00f3n de cualquier software casi siempre nos encontramos con dos opciones: descargar el instalador desde la p\u00e1gina web del fabricante o instalarlo mediante un gestor de paquetes. En el caso de MySQL Server, vamos a ver c\u00f3mo instalarlo mediante un gestor de paquetes en Ubuntu Server y mediante un instalador y un gestor de paquetes en Windows.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#instalacion-en-windows","title":"Instalaci\u00f3n en Windows","text":""},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#descargando-el-instalador","title":"Descargando el instalador","text":"<p>Para descargar el instalador de MySQL server hemos de ir a la p\u00e1gina web de MySQL y buscar la versi\u00f3n que queremos instalar. En nuestro caso vamos a instalar la versi\u00f3n 8.4.2 LTS (Long Time Support) en su versi\u00f3n Community. Para ello iremos a la siguiente URL (4/10/2024): https://dev.mysql.com/downloads/mysql/ y seleccionamos la versi\u00f3n y el S.O. correspondiente. Se nos presentar\u00e1n tres opciones de descarga: MSI Installer y dos ZIP Archive (el segundo con caracter\u00edsticas de desarrollo). Nosotros vamos a descargar el MSI Installer.</p> <p></p> <p>Una vez descargado el instalador seguiremos el conocido proceso de doble clic, siguiente, siguiente, ..., finalizar.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#usando-winget","title":"Usando <code>winget</code>","text":"<p>Desde hace un tiempo el sistema operativo Windows dispone de una herramienta de gesti\u00f3n de paquetes llamada <code>winget</code>. Con esta herramienta podemos instalar, actualizar y desinstalar software de una forma sencilla.</p> <p>Si no recordamos el nombre exacto del paquete que queremos instalar podemos buscarlo con el comando <code>search</code>. Por ejemplo, si queremos buscar el paquete de MySQL Server ejecutar\u00edamos el siguiente comando:</p> <pre><code>winget search mysql\nName                            Id                                 Version      Match      Source\n--------------------------------------------------------------------------------------------------\nMySQL Client Go                 9PMCW63W4G3B                       Unknown                 msstore\nSQLPro for MySQL                9PFHQWV7FCHK                       Unknown                 msstore\nNavicat 17 for MySQL            XP9KGG7DX4NM3R                     Unknown                 msstore\n\u8ba1\u7b97\u673a\u4e8c\u7ea7 MySQL \u6570\u636e\u5e93\u7a0b\u5e8f\u8bbe\u8ba1 9NRBZTD0W1PF                       Unknown                 msstore\nMySQL                           Oracle.MySQL                       8.0.39                  winget\nXAMPP 8.1                       ApacheFriends.Xampp.8.1            8.1.12-0     Tag: mysql winget\n...\n# Se han reducido los resultados para simplificar la lectura.\n...\nTriCo                           ngudbhav.TriCo                     3.1.0        Tag: mysql winget\nMySQL Shell                     Oracle.MySQLShell                  8.4.0                   winget\nMySQL Workbench 8.0 CE          Oracle.MySQLWorkbench              8.0.38                  winget\n</code></pre> <p>El que nos interesa es el paquete <code>Oracle.MySQL</code> que es el servidor de MySQL de Oracle. Para instalarlo ejecutar\u00edamos el siguiente comando:</p> <pre><code>winget install Oracle.MySQL\n</code></pre> <p><code>winget</code> se encargar\u00e1 de descargar el instalador correcto y de instalarlo en nuestro sistema (pidi\u00e9ndonos permisos de administrador si fuera necesario). Una vez terminado el proceso de instalaci\u00f3n <code>winget</code> borrar\u00e1 el instalador descargado y ya podremos usar MySQL Server.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#instalacion-en-linux","title":"Instalaci\u00f3n en Linux","text":"<p>Para instalar MySQL Server en Linux vamos a seguir los siguientes pasos:</p> <pre><code>$ sudo apt update # Actualizamos la lista de paquetes.\nGet:1 http://security.ubuntu.com/ubuntu noble-security InRelease [126 kB]\nHit:2 http://archive.ubuntu.com/ubuntu noble InRelease\n[...]\nBuilding dependency tree... Done\nReading state information... Done\n2 packages can be upgraded. Run 'apt list --upgradable' to see them.\n$ sudo upgrade # Actualizamos los paquetes a sus \u00faltimas versiones.\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nCalculating upgrade... Done\n[...]\nNeed to get 1046 kB of archives.\nAfter this operation, 0 B of additional disk space will be used.\nDo you want to continue? [Y/n]\n$ sudo apt install mysql-server\n</code></pre> <p>Si no supi\u00e9ramos el nombre exacto del paquete que queremos instalar podemos buscarlo con el comando <code>apt search</code>. Por ejemplo, si queremos buscar el paquete de MySQL Server ejecutar\u00edamos el siguiente comando:</p> <pre><code>apt search mysql\n</code></pre>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#instalacion-de-mysql-workbench","title":"Instalaci\u00f3n de MySQL Workbench","text":""},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#instalacion-del-workbench-en-windows","title":"Instalaci\u00f3n del WorkBench en Windows","text":"<p>Esta vez veremos \u00fanicamente la instalaci\u00f3n mediante <code>winget</code>. Para ello ejecutaremos el siguiente comando:</p> <pre><code>wignet install Oracle.MySQLWorkbench\n</code></pre>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#instalacion-del-workbench-en-linux","title":"Instalaci\u00f3n del WorkBench en Linux","text":"<p>De nuevo usando apt (la herramienta de gesti\u00f3n de paquetes de Ubuntu) instalaremos MySQL Workbench con el siguiente comando:</p> <pre><code>sudo apt install mysql-workbench\n</code></pre> <p>Alternativamente podr\u00edamos usar <code>snap</code> para instalar MySQL Workbench. Para ello ejecutar\u00edamos los siguientes comandos:</p> <ol> <li> <p>Buscar el paquete de MySQL Workbench en <code>snap</code>:</p> <pre><code>$ snap search workbench\nName                       Version    Publisher         Notes  Summary\nweka                       3.8.6      james-carroll\u272a    -      The workbench for machine learning\nmysql-workbench-community  8.0.36     tonybolzan        -      MySQL Workbench\nzworkbench                 2.2.220.1  alexei-developer  -      ZWorkbench\n</code></pre> </li> <li> <p>Seleccionamos <code>mysql-workbench-community</code> y lo instalamos:</p> <pre><code>$ sudo snap install mysql-workbench-community\n</code></pre> </li> </ol> <p>Una vez terminado el proceso de instalaci\u00f3n de MySQL Server y MySQL Workbench ya podremos proceder a la configuraci\u00f3n de MySQL Server y a la conexi\u00f3n de MySQL Workbench con MySQL Server. En el siguiente apartado veremos el caso de conectar a MySQL Server desde un MySQL Workbench instalado en otra m\u00e1quina.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#conexion-de-mysql-workbench-con-mysql-server","title":"Conexi\u00f3n de MySQL Workbench con MySQL Server","text":"<p>El caso que vamos a ver es el de conectar un MySQL Workbench instalado en Windows con un MySQL Server instalado en Linux.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#configuracion-de-mysql-server","title":"Configuraci\u00f3n de MySQL Server","text":"<p>El archivo de configuraci\u00f3n de MySQL Server (en Ubuntu Server) es <code>mysqld.cnf</code> y se encuentra en la siguiente ruta: <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>.</p> <p>*En Windows, el archivo de configuraci\u00f3n de MySQL Server puede ser tanto <code>my.cnf</code> como <code>my.ini</code> y, en el momento de arrancar el servidor, \u00e9ste lo buscar\u00e1 en las siguientes localizaciones:`</p> Fichero de configuraci\u00f3n Prop\u00f3sito <code>%WINDIR%\\my.ini, %WINDIR%\\my.cnf</code> Opciones globales <code>C:\\my.ini, C:\\my.cnf</code> Opciones globales <code>BASEDIR\\my.ini, BASEDIR\\my.cnf</code> Opciones globales <p>Volvamos a Ubuntu Server...</p> <p>Dentro del ese archivo buscaremos la l\u00ednea que empieza por <code>bind-address</code>. Esta instrucci\u00f3n indica a MySQL Server en qu\u00e9 direcci\u00f3n IP (interfaz) debe de escuchar las peticiones de conexi\u00f3n. Por defecto, esta l\u00ednea tendr\u00e1 el valor <code>bind-address = 127.0.0.1</code>, lo que significa que s\u00f3lo atender\u00e1 a las peticiones de conexi\u00f3n que vengan del equipo local (<code>127.0.0.1</code> equivale a localhost).</p> <p>Esto no nos sirve para nuestro caso pues vamos a conectarnos desde otro equipo de la red que se conectar\u00e1 al interfaz conectado a dicha red (<code>192.168.56.101</code> generalmente en el caso de VirtualBox). Por tanto hemos de modificar la l\u00ednea <code>bind-address</code> para que atienda a las peticiones de conexi\u00f3n que vengan de dicha red.</p> <p>Para lograr esto a\u00f1adiremos la direcci\u00f3n del interfaz de la m\u00e1quina en que est\u00e1 MySQL Server <code>bind-address = 127.0.0.1,192.168.56.101</code>. As\u00ed, MySQL Server atender\u00e1 a las peticiones de conexi\u00f3n que vengan desde el equipo local y desde la red <code>192.168.56.0/24</code>.</p> <p>Nota: si queremos que atienda a todas las peticiones de conexi\u00f3n que entren desde cualquier interfaz de red podemos poner <code>bind-address = *</code> o <code>bind-address = 0.0.0.0</code> (la diferencia entre ambos se puede consultar aqu\u00ed).</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#creacion-de-un-usuario-para-acceso-remoto","title":"Creaci\u00f3n de un usuario para acceso remoto","text":"<p>A\u00fan no hemos terminado. Para que MySQL Server acepte las conexiones de un usuario que se conecta desde otro equipo hemos de crear un usuario con los permisos adecuados.</p> <p>Para crear dicho usuario en MySQL Server lo primero que hemos de hacer es conectarnos a MySQL Server como <code>root</code> usando MySQL Command-Line Client, aplicaci\u00f3n de l\u00ednea de comandos que ya se ha instalado cuando instalamos MySQL Server.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#conexion-a-mysql-server-como-root","title":"Conexi\u00f3n a MySQL Server como <code>root</code>","text":"<p>El comando con que establecemos una conexi\u00f3n de MySQL Command-Line Cliente a MySQL Server se llama <code>mysql</code> y, como su nombre nos indica, hemos de usarlo desde la l\u00ednea de comandos. Para entrar como el usuario administrador hemos de ejecutar el comando <code>mysql</code> con privilegios de <code>root</code>:</p> <pre><code>~$ sudo mysql\n[sudo] password for manuel:\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 12\nServer version: 8.0.39-0ubuntu0.24.04.2 (Ubuntu)\n\nCopyright (c) 2000, 2024, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt;\n</code></pre>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#creacion-de-un-usuario","title":"Creaci\u00f3n de un usuario","text":"<p>En este momento estar\u00edamos dentro de MySQL server como administradores (usuario <code>root</code>). Ahora vamos a crear un usuario que pueda acceder a MySQL Server desde otro equipo. Para ello ejecutamos la siguiente instrucci\u00f3n:</p> <pre><code>CREATE USER 'usuario'@'ip_desde_donde_conecta' IDENTIFIED BY 'password';\n</code></pre> <p>Donde:</p> <ul> <li><code>usuario</code>: es el nombre del usuario que vamos a crear.</li> <li><code>ip_desde_donde_conecta</code>: es la direcci\u00f3n IP desde la que se va a conectar el usuario.</li> <li><code>password</code>: es la contrase\u00f1a que va a tener el usuario.</li> </ul> <p>Nota: En nuestro ejemplo llam\u00e9 al usuario <code>wb_windows</code> (Work Bench Windows) y la IP del equipo Windows donde est\u00e1 instalado MySQL WorkBench es <code>192.168.56.1</code> por lo que el usuario creado tendr\u00eda que ser: `wb_windows@192.168.56.1'.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#dar-permisos-al-usuario","title":"Dar permisos al usuario","text":"<p>Ahora hemos de darle permisos al usuario para que pueda acceder a la base de datos. Para ello ejecutamos la siguiente instrucci\u00f3n:</p> <pre><code>GRANT CREATE, ALTER, DROP, INSERT, UPDATE, DELETE, SELECT, REFERENCES, RELOAD on *.* TO 'usuario'@'ip_desde_donde_conecta' WITH GRANT OPTION;\n</code></pre> <p>De esta forma el usuario podr\u00e1...:</p> <ul> <li><code>CREATE</code>: crear bases de datos y tablas.</li> <li><code>ALTER</code>: modificar la estructura de las tablas.</li> <li><code>DROP</code>: eliminar bases de datos y tablas.</li> <li><code>INSERT</code>: insertar registros en las tablas.</li> <li><code>UPDATE</code>: modificar registros de las tablas.</li> <li><code>DELETE</code>: eliminar registros de las tablas.</li> <li><code>SELECT</code>: consultar registros de las tablas.</li> <li><code>REFERENCES</code>: crear claves for\u00e1neas.</li> <li><code>RELOAD</code>: recargar los privilegios.</li> </ul> <p>Estos permisos los tendr\u00e1 sobre todas las bases de datos (<code>*.*</code>) y desde la direcci\u00f3n IP que hayamos indicado en <code>ip_desde_donde_conecta</code>.</p> <p>Finalmente hemos de recargar los privilegios para que los cambios surtan efecto:</p> <pre><code>FLUSH PRIVILEGES;\n</code></pre> <p>Ahora ya podemos salir de MySQL Server (<code>exit;</code>) y probar la conexi\u00f3n desde MySQL Workbench. En las siguientes im\u00e1genes veremos como se hace.</p> <p>Nota: en el siguiente ejemplo us\u00e9 como nombre de usuario <code>wb_windows</code> (WorkBench Windows). La direcci\u00f3n IP del servidor MySQL es <code>192.168.56.101</code> (la ip que dar Virtual Box a la m\u00e1quina virtual Ubuntu Server conectada mediante una interfaz host only*).</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/1%20Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20SGBD/#creacion-de-una-conexion-en-mysql-workbench","title":"Creaci\u00f3n de una conexi\u00f3n en MySQL Workbench","text":"<p>Una vez abierto el WorkBench pulsaremos en <code>+</code> para a\u00f1adir una nueva conexi\u00f3n.</p> <p></p> <p>En la ventana que se abre rellenamos los campos de la siguiente forma:</p> <p></p> <p>Cubrimos los campos con los valores correctos y probamos la conexi\u00f3n pulsando en el bot\u00f3n <code>Test Connection</code>.</p> <p></p> <p>Si todo est\u00e1 correcto nos aparecer\u00e1 un mensaje como el siguiente pidi\u00e9ndonos la contrase\u00f1a del usuario que hemos creado en MySQL Server:</p> <p></p> <p>Si todo ha ido bien nos aparecer\u00e1 un mensaje como el siguiente:</p> <p></p> <p>Y creo que con esto ya hemos terminado.</p> <p>P.D.: Si ten\u00e9is alguna duda, como siempre, no dud\u00e9is en consultarme.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/2%20Funciones/","title":"Funciones del SGBD","text":"<p>Las funciones principales de un SGBD son:</p> <ul> <li>Definici\u00f3n de datos: Se encarga de definir la estructura de los datos y las relaciones entre ellos. Se define mediante un lenguaje de definici\u00f3n de datos (DDL).</li> <li>Gesti\u00f3n del almacenamiento: Controla c\u00f3mo se almacenan los datos en ficheros del sistema de archivos para que el acceso a los datos sea eficiente.</li> <li>Manipulaci\u00f3n de datos: Permite la inserci\u00f3n, modificaci\u00f3n y eliminaci\u00f3n de los datos almacenados en la base de datos. Se realiza mediante un lenguaje de manipulaci\u00f3n de datos (DML).</li> <li>Control de la concurrencia: Gestiona el acceso concurrente a los datos para evitar problemas de consistencia.</li> <li>Control de la integridad: Garantiza que los datos almacenados en la base de datos cumplan con las reglas de integridad definidas.</li> <li>Control de la seguridad: Se encarga de controlar el acceso a los datos y proteger la informaci\u00f3n sensible.</li> </ul>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/2%20Funciones/#definicion-de-datos","title":"Definici\u00f3n de datos","text":"<p>Un SGBD permite definir las estructuras de datos y las relaciones entre ellas mediante un lenguaje de definici\u00f3n de datos (DDL). La definici\u00f3n de estas estructuras y relaciones se representa mediante metadatos que se almacenan en el diccionario de datos del SGBD.</p> <p>Las instrucciones del lenguaje SQL que se utilizan para definir las estructuras de datos son: <code>CREATE</code>, <code>ALTER</code> y <code>DROP</code>.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/2%20Funciones/#manipulacion-de-datos","title":"Manipulaci\u00f3n de datos","text":"<p>Tambi\u00e9n permite la manipulaci\u00f3n de los datos almacenados en la base de datos mediante un lenguaje de manipulaci\u00f3n de datos (DML). Las instrucciones del lenguaje SQL que se utilizan para manipular los datos son: <code>SELECT</code>, <code>INSERT</code>, <code>UPDATE</code> y <code>DELETE</code>.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/2%20Funciones/#control-de-la-concurrencia","title":"Control de la concurrencia","text":"<p>En la mayor\u00eda de los sistemas de informaci\u00f3n, varios usuarios acceden a la base de datos de forma simult\u00e1nea y realizan operaciones de lectura y escritura sobre los mismos datos. El SGBD debe asegurar que dichos accesos concurrentes no provoquen problemas de consistencia. Para ello, se utilizan t\u00e9cnicas de control de la concurrencia como bloqueos y transacciones.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/2%20Funciones/#control-de-la-integridad","title":"Control de la integridad","text":"<p>Las relaciones entre los datos, contenidas en el diccionario de datos, deben cumplirse en todo momento para garantizar la integridad de los mismos. El SGBD se encarga de esto mediante la aplicaci\u00f3n de restricciones.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/2%20Funciones/#control-de-la-seguridad","title":"Control de la seguridad","text":"<p>Un SGBD debe garantizar la seguridad de los datos almacenados en la base de datos. Para ello, se utilizan mecanismos de autenticaci\u00f3n y autorizaci\u00f3n que permiten controlar qui\u00e9n puede acceder a los datos y qu\u00e9 operaciones puede realizar sobre ellos. Tambi\u00e9n se utilizan t\u00e9cnicas de cifrado para proteger la informaci\u00f3n sensible.</p> <p>Esto se puede hacer a nivel de permisos de usuario, roles, perfiles, etc.</p> <p>En resumen, un SGBD es una herramienta que permite gestionar de forma eficiente y segura la informaci\u00f3n almacenada en una base de datos. Proporciona funciones para definir, manipular, controlar y proteger los datos, facilitando as\u00ed su acceso y uso por parte de los usuarios.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n    &lt;title&gt;PHP Test&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    Esto es algo.&lt;br/&gt;\n    &lt;?php\n     for ($x = 0; $x &lt;= 10; $x++) {\n        echo \"El n\u00famero pasa a ser: $x.&lt;br&gt;\";\n        }\n        ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre> <pre><code>erDiagram\n    ORDER ||--|{ LINE-ITEM : contains\n    CUSTOMER ||--o{ ORDER : places\n    CUSTOMER {\n        string name\n        string address\n        key name\n    }\n    ORDER {\n        int order-number\n        date order-date\n        key order-number\n    }\n    LINE-ITEM {\n        int quantity\n        float price\n        key quantity\n    }</code></pre>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/3%20Arquitectura/","title":"Arquitectura del SGBD","text":""},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/4%20Interfaces/","title":"Interfaces est\u00e1ndar: ODBC y JDBC","text":""},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/5%20Diccionario%20de%20datos/","title":"El diccionario de datos","text":""},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/","title":"Instalaci\u00f3n y configuraci\u00f3n de un Sistema Gestor de Base de Datos","text":"<ul> <li>Instalaci\u00f3n y configuraci\u00f3n de un Sistema Gestor de Base de Datos<ul> <li>Instalaci\u00f3n de MySQL Server<ul> <li>Instalaci\u00f3n en Windows<ul> <li>Descargando el instalador</li> <li>Usando winget</li> </ul> </li> <li>Instalaci\u00f3n en Linux</li> </ul> </li> <li>Instalaci\u00f3n de MySQL Workbench<ul> <li>Instalaci\u00f3n en Windows</li> <li>Instalaci\u00f3n en Linux</li> </ul> </li> <li>Conexi\u00f3n de MySQL Workbench con MySQL Server<ul> <li>Configuraci\u00f3n de MySQL Server</li> <li>Creaci\u00f3n de un usuario para acceso remoto<ul> <li>Conexi\u00f3n a MySQL Server como root</li> <li>Creaci\u00f3n de un usuario</li> <li>Dar permisos al usuario</li> </ul> </li> <li>Creaci\u00f3n de una conexi\u00f3n en MySQL Workbench</li> </ul> </li> </ul> </li> </ul> <p>En esta actividad vamos a instalar y configurar un Sistema Gestor de Base de Datos. Para ello vamos a utilizar el Sistema Gestor de Base de Datos MySQL.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#instalacion-de-mysql-server","title":"Instalaci\u00f3n de MySQL Server","text":"<p>En primer lugar veremos c\u00f3mo instalar MySQL Server en Windows y en una distribuci\u00f3n de Linux (en concreto Ubuntu Server).</p> <p>Hoy en d\u00eda, a la hora de realizar la instalaci\u00f3n de cualquier software casi siempre nos encontramos con dos opciones: descargar el instalador desde la p\u00e1gina web del fabricante o instalarlo mediante un gestor de paquetes. En el caso de MySQL Server, vamos a ver c\u00f3mo instalarlo mediante un gestor de paquetes en Ubuntu Server y mediante un instalador y un gestor de paquetes en Windows.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#instalacion-en-windows","title":"Instalaci\u00f3n en Windows","text":""},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#descargando-el-instalador","title":"Descargando el instalador","text":"<p>Para descargar el instalador de MySQL server hemos de ir a la p\u00e1gina web de MySQL y buscar la versi\u00f3n que queremos instalar. En nuestro caso vamos a instalar la versi\u00f3n 8.4.2 LTS (Long Time Support) en su versi\u00f3n Community. Para ello iremos a la siguiente URL (4/10/2024): https://dev.mysql.com/downloads/mysql/ y seleccionamos la versi\u00f3n y el S.O. correspondiente. Se nos presentar\u00e1n tres opciones de descarga: MSI Intaller y dos ZIP Archive (el segundo con caracter\u00edsticas de desarrollo). Nosotros vamos a descargar el MSI Installer.</p> <p></p> <p>Una vez descargado el instalador seguiremos el conocido proceso de doble clic, siguiente, siguiente, ..., finalizar.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#usando-winget","title":"Usando <code>winget</code>","text":"<p>Desde hace un tiempo el sistema operativo Windows dispone de una herramienta de gesti\u00f3n de paquetes llamada <code>winget</code>. Con esta herramienta podemos instalar, actualizar y desinstalar software de una forma sencilla.</p> <p>Si no recordamos el nombre exacto del paquete que queremos instalar podemos buscarlo con el comando <code>search</code>. Por ejemplo, si queremos buscar el paquete de MySQL Server ejecutar\u00edamos el siguiente comando:</p> <p><pre><code>winget search mysql\nName                            Id                                 Version      Match      Source\n--------------------------------------------------------------------------------------------------\nMySQL Client Go                 9PMCW63W4G3B                       Unknown                 msstore\nSQLPro for MySQL                9PFHQWV7FCHK                       Unknown                 msstore\nNavicat 17 for MySQL            XP9KGG7DX4NM3R                     Unknown                 msstore\n\u8ba1\u7b97\u673a\u4e8c\u7ea7 MySQL \u6570\u636e\u5e93\u7a0b\u5e8f\u8bbe\u8ba1 9NRBZTD0W1PF                       Unknown                 msstore\nMySQL                           Oracle.MySQL                       8.0.39                  winget\nXAMPP 8.1                       ApacheFriends.Xampp.8.1            8.1.12-0     Tag: mysql winget\n...\n# Se han reducido los resultados para simplificar la lectura.\n...\nTriCo                           ngudbhav.TriCo                     3.1.0        Tag: mysql winget\nMySQL Shell                     Oracle.MySQLShell                  8.4.0                   winget\nMySQL Workbench 8.0 CE          Oracle.MySQLWorkbench              8.0.38                  winget\n</code></pre> El que nos interesa es el paquete <code>Oracle.MySQL</code> que es el servidor de MySQL de Oracle. Para instalarlo ejecutar\u00edamos el siguiente comando:</p> <p><pre><code>winget install Oracle.MySQL\n</code></pre> <code>winget</code> se encargar\u00e1 de descargar el instalador correcto y de instalarlo en nuestro sistema (pidi\u00e9ndonos permisos de administrador si fuera necesario). Una vez terminado el proceso de instalaci\u00f3n <code>winget</code> borrar\u00e1 el instalador descargado y ya podremos usar MySQL Server.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#instalacion-en-linux","title":"Instalaci\u00f3n en Linux","text":"<p>Para instalar MySQL Server en Linux vamos a seguir los siguientes pasos:</p> <pre><code>$ sudo apt update # Actualizamos la lista de paquetes.\n$ sudo upgrade # Actualizamos los paquetes a sus \u00faltimas versiones.\n$ sudo apt install mysql-server\n</code></pre> <p>Si no supi\u00e9ramos el nombre exacto del paquete que queremos instalar podemos buscarlo con el comando <code>apt search</code>. Por ejemplo, si queremos buscar el paquete de MySQL Server ejecutar\u00edamos el siguiente comando:</p> <pre><code>apt search mysql\n</code></pre>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#instalacion-de-mysql-workbench","title":"Instalaci\u00f3n de MySQL Workbench","text":""},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#instalacion-en-windows_1","title":"Instalaci\u00f3n en Windows","text":"<p>Esta vez veremos \u00fanicamente la instalaci\u00f3n mediante <code>winget</code>. Para ello ejecutaremos el siguiente comando:</p> <pre><code>wignet install Oracle.MySQLWorkbench\n</code></pre>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#instalacion-en-linux_1","title":"Instalaci\u00f3n en Linux","text":"<p>De nuevo usando apt (la herramienta de gesti\u00f3n de paquetes de Ubuntu) instalaremos MySQL Workbench con el siguiente comando: <pre><code>sudo apt install mysql-workbench\n</code></pre></p> <p>Alternativamente podr\u00edamos usar <code>snap</code> para instalar MySQL Workbench. Para ello ejecutar\u00edamos los siguientes comandos:</p> <ol> <li> <p>Buscar el paquete de MySQL Workbench en <code>snap</code>:</p> <p><pre><code>$ snap search workbench\nName                       Version    Publisher         Notes  Summary\nweka                       3.8.6      james-carroll\u272a    -      The workbench for machine learning\nmysql-workbench-community  8.0.36     tonybolzan        -      MySQL Workbench\nzworkbench                 2.2.220.1  alexei-developer  -      ZWorkbench\n</code></pre> 1. Seleccionamos <code>mysql-workbench-community</code> y lo instalamos:</p> <p><pre><code>$ sudo snap install mysql-workbench-community\n</code></pre> Una vez terminado el proceso de instalaci\u00f3n de MySQL Server y MySQL Workbench ya podremos proceder a la configuraci\u00f3n de MySQL Server y a la conexi\u00f3n de MySQL Workbench con MySQL Server. En el siguiente apartado veremos el caso de conectar a MySQL Server desde un MySQL Workbench instalado en otra m\u00e1quina.</p> </li> </ol>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#conexion-de-mysql-workbench-con-mysql-server","title":"Conexi\u00f3n de MySQL Workbench con MySQL Server","text":"<p>El caso que vamos a ver es el de conectar un MySQL Workbench instalado en Windows con un MySQL Server instalado en Linux.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#configuracion-de-mysql-server","title":"Configuraci\u00f3n de MySQL Server","text":"<p>El archivo de configuraci\u00f3n de MySQL Server (en Ubuntu Server) es <code>mysqld.cnf</code> y se encuentra en la siguiente ruta: <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>.</p> <p>*En Windows, el archivo de configuraci\u00f3n de MySQL Server puede ser tanto <code>my.cnf</code> como <code>my.ini</code> y, en el momento de arrancar el servidor, \u00e9ste lo buscar\u00e1 en las siguientes localizaciones:`</p> Fichero de configuraci\u00f3n Prop\u00f3sito <code>%WINDIR%\\my.ini, %WINDIR%\\my.cnf</code> Opciones globales <code>C:\\my.ini, C:\\my.cnf</code> Opciones globales <code>BASEDIR\\my.ini, BASEDIR\\my.cnf</code> Opciones globales <p>Volvamos a Ubuntu Server...</p> <p>Dentro del ese archivo buscaremos la l\u00ednea que empieza por <code>bind-address</code>. Esta instrucci\u00f3n indica a MySQL Server en qu\u00e9 direcci\u00f3n IP (interfaz) debe de escuchar las peticiones de conexi\u00f3n. Por defecto, esta l\u00ednea tendr\u00e1 el valor <code>bind-address = 127.0.0.1</code>, lo que significa que s\u00f3lo atender\u00e1 a las peticiones de conexi\u00f3n que vengan del equipo local (<code>127.0.0.1</code> equivale a localhost).</p> <p>Esto no nos sirve para nuestro caso pues vamos a conectarnos desde otro equipo de la red que se conectar\u00e1 al interfaz conectado a dicha red (<code>192.168.56.101</code> generalmente en el caso de VirtualBox). Por tanto hemos de modificar la l\u00ednea <code>bind-address</code> para que atienda a las peticiones de conexi\u00f3n que vengan de dicha red.</p> <p>Para lograr esto a\u00f1adiremos la direcci\u00f3n del interfaz de la m\u00e1quina en que est\u00e1 MySQL Server <code>bind-address = 127.0.0.1,192.168.56.101</code>. As\u00ed, MySQL Server atender\u00e1 a las peticiones de conexi\u00f3n que vengan desde el equipo local y desde la red <code>192.168.56.0/24</code>.</p> <p>Nota: si queremos que atienda a todas las peticiones de conexi\u00f3n que entren desde cualquier interfaz de red podemos poner <code>bind-address = *</code> o <code>bind-address = 0.0.0.0</code> (la diferencia entre ambos se puede consultar aqu\u00ed).</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#creacion-de-un-usuario-para-acceso-remoto","title":"Creaci\u00f3n de un usuario para acceso remoto","text":"<p>A\u00fan no hemos terminado. Para que MySQL Server acepte las conexiones de un usuario que se conecta desde otro equipo hemos de crear un usuario con los permisos adecuados.</p> <p>Para crear dicho usuario en MySQL Server lo primero que hemos de hacer es conectarnos a MySQL Server como <code>root</code> usando MySQL Command-Line Client, aplicaci\u00f3n de l\u00ednea de comandos que ya se ha instalado cuando instalamos MySQL Server.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#conexion-a-mysql-server-como-root","title":"Conexi\u00f3n a MySQL Server como <code>root</code>","text":"<p>El comando con que establecemos una conexi\u00f3n de MySQL Command-Line Cliente a MySQL Server se llama <code>mysql</code> y, como su nombre nos indica, hemos de usarlo desde la l\u00ednea de comandos. Para entrar como el usuario administrador hemos de ejecutar el comando <code>mysql</code> con privilegios de <code>root</code>:</p> <pre><code>~$ sudo mysql\n[sudo] password for manuel:\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 12\nServer version: 8.0.39-0ubuntu0.24.04.2 (Ubuntu)\n\nCopyright (c) 2000, 2024, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt;\n</code></pre>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#creacion-de-un-usuario","title":"Creaci\u00f3n de un usuario","text":"<p>En este momento estar\u00edamos dentro de MySQL server como administradores (usuario <code>root</code>). Ahora vamos a crear un usuario que pueda acceder a MySQL Server desde otro equipo. Para ello ejecutamos la siguiente instrucci\u00f3n:</p> <pre><code>CREATE USER 'usuario'@'ip_desde_donde_conecta' IDENTIFIED BY 'password';\n</code></pre> <p>Donde:</p> <ul> <li><code>usuario</code>: es el nombre del usuario que vamos a crear.</li> <li><code>ip_desde_donde_conecta</code>: es la direcci\u00f3n IP desde la que se va a conectar el usuario.</li> <li><code>password</code>: es la contrase\u00f1a que va a tener el usuario.</li> </ul> <p>Nota: En nuestro ejemplo llam\u00e9 al usuario <code>wb_windows</code> (Work Bench Windows) y la IP del equipo Windows donde est\u00e1 instalado MySQL WorkBench es <code>192.168.56.1</code> por lo que el usuario creado tendr\u00eda que ser: `wb_windows@192.168.56.1'.</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#dar-permisos-al-usuario","title":"Dar permisos al usuario","text":"<p>Ahora hemos de darle permisos al usuario para que pueda acceder a la base de datos. Para ello ejecutamos la siguiente instrucci\u00f3n:</p> <pre><code>GRANT CREATE, ALTER, DROP, INSERT, UPDATE, DELETE, SELECT, REFERENCES, RELOAD on *.* TO 'usuario'@'ip_desde_donde_conecta' WITH GRANT OPTION;\n</code></pre> <p>De esta forma el usuario podr\u00e1...:</p> <ul> <li><code>CREATE</code>: crear bases de datos y tablas.</li> <li><code>ALTER</code>: modificar la estructura de las tablas.</li> <li><code>DROP</code>: eliminar bases de datos y tablas.</li> <li><code>INSERT</code>: insertar registros en las tablas.</li> <li><code>UPDATE</code>: modificar registros de las tablas.</li> <li><code>DELETE</code>: eliminar registros de las tablas.</li> <li><code>SELECT</code>: consultar registros de las tablas.</li> <li><code>REFERENCES</code>: crear claves for\u00e1neas.</li> <li><code>RELOAD</code>: recargar los privilegios.</li> </ul> <p>Estos permisos los tendr\u00e1 sobre todas las bases de datos (<code>*.*</code>) y desde la direcci\u00f3n IP que hayamos indicado en <code>ip_desde_donde_conecta</code>.</p> <p>Finalmente hemos de recargar los privilegios para que los cambios surtan efecto:</p> <pre><code>FLUSH PRIVILEGES;\n</code></pre> <p>Ahora ya podemos salir de MySQL Server (<code>exit;</code>) y probar la conexi\u00f3n desde MySQL Workbench. En las siguientes im\u00e1genes veremos como se hace.</p> <p>Nota: en el siguiente ejemplo us\u00e9 como nombre de usuario <code>wb_windows</code> (WorkBench Windows). La direcci\u00f3n IP del servidor MySQL es <code>192.168.56.101</code> (la ip que dar Virtual Box a la m\u00e1quina virtual Ubuntu Server conectada mediante una interfaz host only*).</p>"},{"location":"ASGBD/UD%201%20-%20Instalaci%C3%B3n%20de%20un%20SGBD/Instalaci%C3%B3n%20y%20configuraci%C3%B3n%20de%20un%20Sistema%20Gestor%20de%20Base%20de%20Datos/#creacion-de-una-conexion-en-mysql-workbench","title":"Creaci\u00f3n de una conexi\u00f3n en MySQL Workbench","text":"<p>Una vez abierto el WorkBench pulsaremos en <code>+</code> para a\u00f1adir una nueva conexi\u00f3n.</p> <p></p> <p>En la ventana que se abre rellenamos los campos de la siguiente forma:</p> <p></p> <p>Cubrimos los campos con los valores correctos y probamos la conexi\u00f3n pulsando en el bot\u00f3n <code>Test Connection</code>.</p> <p></p> <p>Si todo est\u00e1 correcto nos aparecer\u00e1 un mensaje como el siguiente pidi\u00e9ndonos la contrase\u00f1a del usuario que hemos creado en MySQL Server:</p> <p></p> <p>Si todo ha ido bien nos aparecer\u00e1 un mensaje como el siguiente:</p> <p></p> <p>Y creo que con esto ya hemos terminado.</p> <p>P.D.: Si ten\u00e9is alguna duda, como siempre, no dud\u00e9is en consultarme.</p>"},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Introducci%C3%B3n/","title":"Gesti\u00f3n de usuarios","text":""},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Introducci%C3%B3n/#creacion-de-usuarios","title":"Creaci\u00f3n de usuarios","text":""},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Introducci%C3%B3n/#permisos","title":"Permisos","text":""},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Introducci%C3%B3n/#roles","title":"Roles","text":""},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Lock%20tables%20y%20transacciones/","title":"Cosas sobre <code>LOCK TABLES</code>","text":"<p>En este documento ir\u00e9 incluyendo cosas interesantes que vaya viendo sobre el comportamiento de <code>LOCK TABLES</code> en MySQL.</p>"},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Lock%20tables%20y%20transacciones/#bloquear-una-tabla-para-lectura-y-escritura","title":"Bloquear una tabla para lectura y escritura","text":"<p>No se puede usar el nombre de una tabla m\u00e1s de una vez en la misma sentencia <code>LOCK TABLES</code>. Esto hace que si queremos hacer un lock de escritura y otro de lectura sobre la misma tabla hemos de usar un alias:</p> <pre><code>LOCK TABLES tabla1 WRITE, tabla1 AS t READ;\n</code></pre>"},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Lock%20tables%20y%20transacciones/#como-saber-que-tablas-estan-bloqueadas","title":"\u00bfC\u00f3mo saber qu\u00e9 tablas est\u00e1n bloqueadas?","text":"<p>Para saber qu\u00e9 tablas est\u00e1n bloqueadas en MySQL podemos ejecutar la siguiente consulta: <pre><code>SHOW OPEN TABLES WHERE In_use &gt; 0;\n</code></pre></p> <p>El campo <code>In_use</code> nos indica cu\u00e1ntos locks (o peticiones de bloqueo) hay sobre la tabla. Si una sesi\u00f3n obtiene un lock de escritura sobre una tabla y otra sesi\u00f3n intenta realizar otro lock de escritura, esta segunda sesi\u00f3n se quedar\u00e1 esperando a que la primera libere el lock. Si en ese momento ejecutamos la consulta anterior, veremos que la tabla tiene un <code>In_use</code> de 2.</p>"},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Lock%20tables%20y%20transacciones/#comportamiento-de-las-transacciones-y-lock-tables","title":"Comportamiento de las transacciones y lock tables","text":"<p>Cosas que pasan cuando se ejecutan ciertas sentencias en MySQL:</p> <ul> <li>Si ejecutamos un <code>UNLOCK TABLES</code> se ejecutar\u00e1 un <code>COMMIT</code> autom\u00e1ticamente finalizando la transacci\u00f3n activa. S\u00f3LO SI SE HA USADO ANTES UN <code>LOCK TABLES</code> para bloquear la tabla.</li> <li>Si se ejecuta un <code>START TRANSACTION</code> se ejecutar\u00e1 un <code>UNLOCK TABLES</code> autom\u00e1ticamente.</li> <li>Si la variable <code>autocommit</code> est\u00e1 a 1, activa u <code>ON</code> (valor por defecto), se ejecutar\u00e1 un <code>COMMIT</code> con cada operaci\u00f3n <code>INSERT</code>, <code>UPDATE</code> o <code>DELETE</code>.</li> <li>Si la variable <code>autocommit</code> est\u00e1 a 0, desactivada u <code>OFF</code>, no se har\u00e1 un <code>COMMIT</code> hasta que se ejecute un <code>COMMIT</code> expl\u00edcitamente.</li> </ul> <p>Visto lo anterior, si queremos bloquear unas tablas y realizar una serie de operaciones dentro de UNA transacci\u00f3n debemos seguir los siguientes pasos:</p> <pre><code>SET autocommit = 0;\nLOCK TABLES tabla1 WRITE, tabla2 READ, ...;\n-- Operaciones que queramos hacer dentro de la transacci\u00f3n.\n-- Si ejecutamos un UPDATE se iniciar\u00e1 una transacci\u00f3n autom\u00e1ticamente.\n-- esta transacci\u00f3n no se cerrar\u00e1 hasta que se ejecute un COMMIT.\nCOMMIT;\nUNLOCK TABLES;\n</code></pre> <p>Si por el contrario usamos <code>START TRANSACTION</code>.</p> <pre><code>SET autocommit = 0;\nLOCK TABLES tabla1 WRITE, tabla2 READ, ...;\nSTART TRANSACTION; -- Se libera el `LOCK`.\n-- Operaciones que queramos hacer dentro de la transacci\u00f3n.\n-- Si ejecutamos un UPDATE se iniciar\u00e1 una transacci\u00f3n autom\u00e1ticamente.\n-- esta transacci\u00f3n no se cerrar\u00e1 hasta que se ejecute un COMMIT.\nCOMMIT;\nUNLOCK TABLES;\n</code></pre> <p>Si no usamos <code>autocommit = 0</code>:</p> <pre><code>LOCK TABLES tabla1 WRITE, tabla2 READ, ...;\n-- Operaciones que queramos hacer dentro de la transacci\u00f3n.\n-- Si ejecutamos un UPDATE se iniciar\u00e1 una transacci\u00f3n autom\u00e1ticamente.\n-- Como autocommit est\u00e1 activo se ejecuta un commit al finalizar el UPDATE.\n-- El siguiente UPDATE iniciar\u00e1 UNA NUEVA TRANSACCI\u00f3N.\n-- Y as\u00ed para cada operaci\u00f3n debido a que se ejecutan commits impl\u00edcitos.\nCOMMIT;\nUNLOCK TABLES;\n</code></pre> <p>Como podemos ver no lograr\u00edamos realizar multiples operaciones en una \u00fanica transacci\u00f3n.</p>"},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Lock%20tables%20y%20transacciones/#bloquear-filas-de-una-tabla","title":"Bloquear filas de una tabla","text":"<p><pre><code>SELECT * FROM tabla WHERE columna = valor FOR UPDATE;\n</code></pre> ```</p>"},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Vistas/","title":"Vistas","text":""},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Vistas/#que-es-una-vista","title":"\u00bfQu\u00e9 es una vista?","text":"<p>Una vista es una consulta almacenada que devuelve un conjunto de resultados al ser invocada. Funciona como una tabla virtual que contiene datos de una o m\u00e1s tablas. Las vistas se utilizan para restringir el acceso a los datos de una tabla, mostrando s\u00f3lo los datos que el usuario tiene permiso para ver. Adem\u00e1s, las vistas permiten a los usuarios ver los datos de una manera m\u00e1s sencilla y organizada.</p> <p>Como tabla virtual, una vista estar\u00e1 compuesta por filas y columnas que podr\u00e1n pertenecer a diferentes tablas.</p> <p>Si intentamos verlo en el contexto de los lenguajes de programaci\u00f3n, una vista es como una subrutina. La definimos una vez y podremos utilizarla indefinidamente.</p>"},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Vistas/#crear-una-vista","title":"Crear una vista","text":"<p>Para crear una vista se usar\u00e1 la siguiente sentencia:</p> <pre><code>CREATE VIEW &lt;nombre_de_la_vista&gt; AS\nSELECT &lt;columnas&gt; FROM &lt;tabla&gt;\nWHERE &lt;condiciones&gt;;\n</code></pre> <p>Para crear una vista que combine los datos de m\u00faltiples tablas se utilizar\u00e1 una sentencia similar a la siguiente:</p> <pre><code>CREATE VIEW &lt;nombre_de_la_vista&gt; AS\nSELECT &lt;columnas&gt; FROM &lt;tabla A, table B&gt;\nWHERE &lt;condiciones&gt;;\n</code></pre>"},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Vistas/#consultar-una-vista","title":"Consultar una vista","text":"<p>Para consultar una vista se utilizar\u00e1 como cualquier otra tabla. La siguiente sentencia mostrar\u00eda todos los datos de la vista creada anteriormente:</p> <pre><code>SELECT * FROM &lt;nombre_de_la_vista&gt;;\n</code></pre>"},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Vistas/#modificar-una-vista","title":"Modificar una vista","text":"<p>Para modificar valores en una vista se usar\u00e1 la sentencia <code>UPDATE</code>. Cuando se modifica una vista, se modificar\u00e1n los datos de la tabla a la que hace referencia.</p> <p>En general, MySQL permite modificar una vista pero con ciertas restricciones. S\u00f3lo se pueden modificar las vistas que referencien a una sola tabla. Adem\u00e1s, no se pueden modificar las vistas que contengan funciones agregadas como SUM(), COUNT(), AVG(), etc. No es obligatorio usar una cl\u00e1usula <code>WHERE</code> cuando se modifica una vista. Hay que tener en cuenta que si usamos <code>WHERE</code> se modificar\u00e1 s\u00f3lo una selecci\u00f3n de registros mientras que si no incluimos la cl\u00e1usula <code>WHERE</code> se modificar\u00e1n TODOS los registros de la tabla.</p>"},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Vistas/#permisos-de-vista","title":"Permisos de vista","text":"<p>Podemos garantizar que una vista s\u00f3lo sea accesible por un usuario concreto, o por un grupo de usuarios. Esto se hace de la misma forma que con las tablas, mediante la asignaci\u00f3n de permisos. Para ello, debemos escribir el comando:</p> <pre><code>GRANT SELECT ON &lt;nombre_de_la_vista&gt; TO &lt;usuario&gt;;\n</code></pre> <p>Si tuvi\u00e9semos que retirar el permiso de acceso a una vista, deber\u00edamos escribir:</p> <pre><code>REVOKE SELECT ON &lt;nombre_de_la_vista&gt; FOR &lt;usuario&gt;;\n</code></pre>"},{"location":"ASGBD/UD%202%20-%20Gesti%C3%B3n%20de%20usuarios/Vistas/#otras-limitaciones-de-las-vistas","title":"Otras limitaciones de las vistas","text":"<ul> <li>En MySQL una vista s\u00f3lo puede abarcar, como m\u00e1ximo, 61 tablas.</li> <li>No se pueden crear \u00edndices sobre una vista.</li> </ul>"},{"location":"ASGBD/UD%203%20-%20Seguridad/Introducci%C3%B3n/","title":"Introducci\u00f3n","text":""},{"location":"ASGBD/UD%204%20-%20Monitorizaci%C3%B3n%20y%20optimizaci%C3%B3n/Introducci%C3%B3n/","title":"Monitorizaci\u00f3n y optimizaci\u00f3n","text":"<ul> <li>Herramientas de monitorizaci\u00f3n</li> <li>Trazas, logs y alertas<ul> <li>Trazas</li> <li>Logs</li> <li>Alertas</li> </ul> </li> <li>Par\u00e1metros a monitorizar</li> </ul>"},{"location":"ASGBD/UD%204%20-%20Monitorizaci%C3%B3n%20y%20optimizaci%C3%B3n/Introducci%C3%B3n/#herramientas-de-monitorizacion","title":"Herramientas de monitorizaci\u00f3n","text":""},{"location":"ASGBD/UD%204%20-%20Monitorizaci%C3%B3n%20y%20optimizaci%C3%B3n/Introducci%C3%B3n/#trazas-logs-y-alertas","title":"Trazas, logs y alertas","text":""},{"location":"ASGBD/UD%204%20-%20Monitorizaci%C3%B3n%20y%20optimizaci%C3%B3n/Introducci%C3%B3n/#trazas","title":"Trazas","text":""},{"location":"ASGBD/UD%204%20-%20Monitorizaci%C3%B3n%20y%20optimizaci%C3%B3n/Introducci%C3%B3n/#logs","title":"Logs","text":""},{"location":"ASGBD/UD%204%20-%20Monitorizaci%C3%B3n%20y%20optimizaci%C3%B3n/Introducci%C3%B3n/#alertas","title":"Alertas","text":""},{"location":"ASGBD/UD%204%20-%20Monitorizaci%C3%B3n%20y%20optimizaci%C3%B3n/Introducci%C3%B3n/#parametros-a-monitorizar","title":"Par\u00e1metros a monitorizar","text":""},{"location":"ASGBD/tareas/Tarea%20UD2/","title":"Tarea UD2","text":"<ul> <li>Creaci\u00f3n de vistas</li> <li>Creaci\u00f3n de usuarios</li> <li>Privilegios</li> <li>Bloqueo de tablas</li> </ul>"},{"location":"ASGBD/tareas/Tarea%20UD2/#creacion-de-vistas","title":"Creaci\u00f3n de vistas","text":""},{"location":"ASGBD/tareas/Tarea%20UD2/#creacion-de-usuarios","title":"Creaci\u00f3n de usuarios","text":""},{"location":"ASGBD/tareas/Tarea%20UD2/#privilegios","title":"Privilegios","text":""},{"location":"ASGBD/tareas/Tarea%20UD2/#bloqueo-de-tablas","title":"Bloqueo de tablas","text":""},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/","title":"Apuntes de la UD1 - Desarrollo de software","text":"<ul> <li>Apuntes de la UD1 - Desarrollo de software<ul> <li>Fases del desarrollo de software<ul> <li>An\u00e1lisis</li> <li>Dise\u00f1o</li> <li>Implementaci\u00f3n / codificaci\u00f3n</li> <li>Compilaci\u00f3n<ul> <li>Ejecuci\u00f3n del c\u00f3digo fuente</li> <li>Lenguajes semicompilados</li> <li>RPL (Run-Print-Loop)</li> </ul> </li> <li>Pruebas</li> <li>Explotaci\u00f3n</li> <li>Mantenimiento</li> <li>Documentaci\u00f3n</li> </ul> </li> <li>Frameworks<ul> <li>Por qu\u00e9 usar un framework</li> <li>Ejemplos de frameworks</li> </ul> </li> <li>Lenguajes de programaci\u00f3n<ul> <li>Alto y bajo nivel</li> <li>Clasificaci\u00f3n de los lenguajes de programaci\u00f3n</li> </ul> </li> </ul> </li> </ul>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#fases-del-desarrollo-de-software","title":"Fases del desarrollo de software","text":"<p>El ciclo de vida del desarrollo del software (SDLC - Software Development Life Cycle) es un proceso que se sigue para desarrollar software. Este proceso consta de varias fases que se realizan de forma secuencial. El proceso en su conjunto ha de completar las tareas de planificaci\u00f3n, creaci\u00f3n, pruebas, despliegue y mantenimiento del software.</p> <p>No se trata de un proceso estricto sino que existen distintas metodolog\u00edas que se adaptan a las necesidades de cada proyecto. Algunas de las metodolog\u00edas m\u00e1s conocidas son:</p> <ul> <li>Waterfall: Modelo en cascada. El m\u00e1s antiguo y sencillo, pero tambi\u00e9n el menos flexible.</li> <li>Agile: Metodolog\u00eda \u00e1gil. Se basa en el desarrollo iterativo e incremental.</li> <li>Scrum: Metodolog\u00eda \u00e1gil. Se basa en el desarrollo iterativo e incremental, pero con roles y reuniones definidas.</li> <li>...</li> </ul> <p>Aunque var\u00edan seg\u00fan los modelos las fases del ciclo de vida del software se podr\u00edan resumir en las siguientes:</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#analisis","title":"An\u00e1lisis","text":"<p>Tambi\u00e9n se le conoce como an\u00e1lisis de requisitos. En esta fase se recopilan los requisitos del sistema, es decir, se identifican las necesidades que debe satisfacer el software que se va a desarrollar. Los requisitos pueden ser funcionales (lo que el sistema debe hacer) o no funcionales (c\u00f3mo debe hacerlo). Por ejemplo, un requisito funcional podr\u00eda ser que el sistema permita a los usuarios registrarse y un requisito no funcional podr\u00eda ser que el sistema sea f\u00e1cil de usar.</p> <p>Esta es una de las fases m\u00e1s importantes del desarrollo de software ya que si no se recopilan correctamente los requisitos el software resultante no cumplir\u00e1 con las expectativas del cliente. Si se comete un error en esta fase ser\u00e1 muy costoso corregirlo en fases posteriores del desarrollo. Esto se traduce en importantes p\u00e9rdidas de tiempo y dinero.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#diseno","title":"Dise\u00f1o","text":"<p>En esta fase se definen la arquitectura del sistema y los componentes que lo forman. El objetivo es transformar los requisitos recopilados en la fase de an\u00e1lisis en un dise\u00f1o detallado que permita la implementaci\u00f3n del sistema.</p> <p>Se seleccionar\u00e1 la tecnolog\u00eda que se va a utilizar para desarrollar el sistema: lenguaje de programaci\u00f3n, base de datos, entorno de desarrollo, etc.</p> <p>A partir de ah\u00ed se definen las estructuras de datos, los algoritmos y las interfaces de usuario que se van a utilizar en el sistema, las entidades y las relaciones (si procede), etc.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#implementacion-codificacion","title":"Implementaci\u00f3n / codificaci\u00f3n","text":"<p>En esta fase se escribe el c\u00f3digo fuente del sistema. El c\u00f3digo fuente es el conjunto de instrucciones, escritas en uno o m\u00e1s lenguajes de programaci\u00f3n, que le indican al sistema qu\u00e9 operaciones debe realizar. El c\u00f3digo fuente se escribe en el lenguaje de programaci\u00f3n, seleccionado en la fase de dise\u00f1o, y se guarda en archivos de texto plano. Dependiendo del proyecto podr\u00edan utilizarse varios lenguajes de programaci\u00f3n.</p> <p>Es en esta fase donde se usar\u00e1 un IDE (Entorno de Desarrollo Integrado) para escribir el c\u00f3digo fuente, compilarlo y ejecutarlo. Un IDE es una herramienta que facilita el desarrollo de software, ya que proporciona un editor de texto, un compilador, un depurador, etc.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#compilacion","title":"Compilaci\u00f3n","text":"<p>En esta fase obtenemos un programa ejecutable a partir del c\u00f3digo fuente generado en la fase de codificaci\u00f3n. Para ello, el c\u00f3digo fuente se traduce a lenguaje m\u00e1quina espec\u00edfico del procesador. El resultado de esta traducci\u00f3n es un archivo ejecutable que contiene el programa en lenguaje m\u00e1quina. Este archivo se puede ejecutar en cualquier ordenador que tenga el mismo procesador (arquitectura) y el mismo sistema operativo que el que se utiliz\u00f3 para compilar el programa.</p> <p>Veamos esto en algo m\u00e1s de detalle.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#ejecucion-del-codigo-fuente","title":"Ejecuci\u00f3n del c\u00f3digo fuente","text":"<p>Una vez tenemos el c\u00f3digo fuente escrito es necesario ejecutarlo para que el ordenador realice las operaciones que se han programado.</p> <p>Atendiendo a la forma en que se ejecuta el c\u00f3digo podemos distinguir dos tipos de lenguajes de programaci\u00f3n: los lenguajes compilados y los lenguajes interpretados.</p> <ul> <li>Lenguajes compilados: Los lenguajes compilados son aquellos en los que el c\u00f3digo fuente se traduce a un lenguaje m\u00e1quina espec\u00edfico del procesador. El resultado de esta traducci\u00f3n es un archivo ejecutable que contiene el programa en lenguaje m\u00e1quina. Este archivo se puede ejecutar en cualquier ordenador que tenga el mismo procesador (arquitectura) y el mismo sistema operativo que el que se utiliz\u00f3 para compilar el programa. Ejemplos de lenguajes compilados son C, C++, Pascal, etc.</li> <li>Lenguajes interpretados: Los lenguajes interpretados son aquellos en los que el c\u00f3digo fuente se traduce (interpreta) a lenguaje m\u00e1quina en tiempo de ejecuci\u00f3n. El programa que se encarga de realizar esta traducci\u00f3n se llama int\u00e9rprete. El int\u00e9rprete lee el c\u00f3digo fuente, lo traduce a lenguaje m\u00e1quina y lo ejecuta. Ejemplos de lenguajes interpretados son Python, PHP, JavaScript, etc.</li> </ul>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#lenguajes-semicompilados","title":"Lenguajes semicompilados","text":"<p>Existe una tercera categor\u00eda de lenguajes de programaci\u00f3n que son los lenguajes semicompilados. Estos lenguajes son compilados en el sentido de que generan c\u00f3digo m\u00e1quina, pero no para una m\u00e1quina real, sino para una m\u00e1quina virtual.</p> <p>En el caso de Java, por ejemplo, el compilador genera c\u00f3digo m\u00e1quina para la m\u00e1quina virtual de Java (Java Virtual Machine - JVM). Este c\u00f3digo se ejecuta en la JVM, que es un programa que simula un ordenador virtual. La ventaja de este enfoque es que el c\u00f3digo Java es independiente de la plataforma, es decir, se puede ejecutar en cualquier ordenador que tenga una JVM instalada.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#rpl-run-print-loop","title":"RPL (Run-Print-Loop)","text":"<p>En los lenguajes interpretados es muy com\u00fan que se hable de RPL. Un RPL es un int\u00e9rprete que ejecuta el c\u00f3digo que escribe el usuario (run), muestra el resultado de la ejecuci\u00f3n (print) y queda a la espera de que el usuario escriba la siguiente instrucci\u00f3n para repetir el proceso (loop).</p> <p>Por ejemplo, en Python, podemos ejecutar un RPL con el comando <code>python</code> en la consola:</p> <p></p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#pruebas","title":"Pruebas","text":"<p>Las pruebas de software son el proceso de comprobar que una aplicaci\u00f3n hace lo que se espera que haga, es decir, lo que hemos determinado en la fase de an\u00e1lisis. El objetivo de las pruebas es detectar errores en el software antes de que llegue a los usuarios finales. Existen varios tipos de pruebas, entre las que destacan las pruebas unitarias, las pruebas de integraci\u00f3n, las pruebas de sistema y las pruebas de aceptaci\u00f3n.</p> <ul> <li>Pruebas unitarias: Son pruebas que se realizan sobre unidades de c\u00f3digo, es decir, sobre las partes m\u00e1s peque\u00f1as del software. El objetivo de estas pruebas es comprobar que cada unidad de c\u00f3digo funciona correctamente de forma aislada.</li> <li>Pruebas de integraci\u00f3n: Son pruebas que se realizan sobre grupos de unidades de c\u00f3digo que se han probado individualmente. El objetivo de estas pruebas es comprobar que las unidades de c\u00f3digo se integran correctamente y que funcionan bien en conjunto.</li> <li>Pruebas de sistema: Son pruebas que se realizan sobre el sistema completo. El objetivo de estas pruebas es comprobar que el sistema cumple con los requisitos especificados en la fase de an\u00e1lisis.</li> <li>Pruebas de aceptaci\u00f3n: Son pruebas que se realizan en las \u00faltimas etapas antes de sacar la nueva versi\u00f3n. Son realizadas por parte del cliente para comprobar que el sistema cumple con sus expectativas. El objetivo de estas pruebas es validar que el sistema satisface las necesidades del cliente.</li> </ul>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#explotacion","title":"Explotaci\u00f3n","text":"<p>Esta es la \u00faltima fase del ciclo de vida del software. En esta fase se pone en marcha el sistema y se pone a disposici\u00f3n de los usuarios finales. El objetivo de esta fase es que el sistema sea utilizado por los usuarios para los que se ha desarrollado.</p> <p>En esta fase se instalar\u00e1 y configurar\u00e1 el software que hemos desarrollado. Tambi\u00e9n se proporcionar\u00e1 la formaci\u00f3n necesaria a los usuarios para que puedan utilizar el sistema de forma eficiente. Adem\u00e1s, se realizar\u00e1 un seguimiento del sistema para detectar posibles errores y corregirlos.</p> <p>Esta fase tambi\u00e9n incluye las fase o subfase de mantenimiento.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#mantenimiento","title":"Mantenimiento","text":"<p>Esta fase consiste en monitorizar el correcto funcionamiento del software y corregir los errores que se detecten. Tambi\u00e9n se pueden realizar mejoras en el software para a\u00f1adir nuevas funcionalidades o para adaptarlo a nuevos requisitos. El mantenimiento del software es una tarea continua que se realiza a lo largo de toda la vida del software.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#documentacion","title":"Documentaci\u00f3n","text":"<p>La documentaci\u00f3n no es una fase en s\u00ed misma, sino que es un proceso que se lleva a cabo a lo largo de todo el ciclo de vida del software. La documentaci\u00f3n es importante para que otras personas puedan entender c\u00f3mo funciona el software y c\u00f3mo se ha desarrollado. La documentaci\u00f3n puede ser de varios tipos: documentaci\u00f3n de usuario, documentaci\u00f3n t\u00e9cnica, manuales de usuario, manuales de instalaci\u00f3n, etc.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#frameworks","title":"Frameworks","text":"<p>Un framework es una estructura conceptual y tecnol\u00f3gica que sirve de base para el desarrollo de software. Un framework proporciona una serie de herramientas y componentes que facilitan el desarrollo de aplicaciones. Los frameworks permiten a los desarrolladores centrarse en la l\u00f3gica de negocio de la aplicaci\u00f3n, en lugar de tener que preocuparse por cuestiones t\u00e9cnicas.</p> <p>En general los frameworks est\u00e1n ligados a un lenguaje de programaci\u00f3n espec\u00edfico y est\u00e1n dise\u00f1ados con un prop\u00f3sito concreto. Por ejemplo, existen frameworks para el desarrollo de aplicaciones web, para el desarrollo de aplicaciones m\u00f3viles, para el desarrollo de aplicaciones de escritorio, etc.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#por-que-usar-un-framework","title":"Por qu\u00e9 usar un framework","text":"<p>Los frameworks permiten ahorrar tiempo y reducir el riesgo de cometer errores puesto que evitan escribir todo desde cero. Adem\u00e1s, los frameworks suelen seguir buenas pr\u00e1cticas de programaci\u00f3n y proporcionan una estructura y una arquitectura bien definida para el desarrollo de aplicaciones. Otras ventajas de usar un framework son:</p> <ul> <li>C\u00f3digo m\u00e1s seguro: Las piezas que incluye el framework suelen estar probadas y ser seguras.</li> <li>Facilidad para realizar pruebas y depuraci\u00f3n: Los frameworks suelen incluir herramientas para realizar pruebas y depuraci\u00f3n de aplicaciones.</li> <li>Evitar duplicidad de c\u00f3digo: Los frameworks suelen proporcionar componentes reutilizables que permiten evitar la duplicidad de c\u00f3digo.</li> </ul> <p>Por otro lado tambi\u00e9n hay inconvenientes en el uso de frameworks:</p> <ul> <li>Curva de aprendizaje: Los frameworks suelen tener una curva de aprendizaje pronunciada.</li> <li>Limitaciones: Los frameworks pueden imponer limitaciones a la hora de desarrollar aplicaciones.</li> <li>Dependencia: Los frameworks pueden crear dependencia con el framework. Si m\u00e1s adelante se quiere cambiar de framework posiblemente ser\u00e1 necesario reescribir la aplicaci\u00f3n.</li> </ul>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#ejemplos-de-frameworks","title":"Ejemplos de frameworks","text":"<ul> <li>Django: Framework para el desarrollo de aplicaciones web en Python (del lado del servidor).</li> <li>Spring: Framework para el desarrollo de aplicaciones empresariales en Java.</li> <li>Angular: Framework para el desarrollo de aplicaciones web en TypeScript (del lado del cliente).</li> <li>React: Framework para el desarrollo de aplicaciones web en JavaScript (del lado del cliente).</li> <li>Flutter: Framework para el desarrollo de aplicaciones m\u00f3viles en Dart.</li> <li>.NET: Framework para el desarrollo de aplicaciones en C#.NET.</li> <li>Ruby on Rails: Framework para el desarrollo de aplicaciones web en Ruby.</li> <li>Laravel: Framework para el desarrollo de aplicaciones web en PHP.</li> <li>Qt: Framework para el desarrollo de aplicaciones de escritorio en C++.</li> <li>Electron: Framework para el desarrollo de aplicaciones de escritorio en JavaScript.</li> <li>Unity: Framework para el desarrollo de videojuegos en C#.</li> <li>etc.</li> </ul>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#lenguajes-de-programacion","title":"Lenguajes de programaci\u00f3n","text":"<p>Un lenguaje de programaci\u00f3n es un lenguaje formal que se utiliza para escribir instrucciones que se pueden traducir a c\u00f3digo m\u00e1quina y que permiten controlar el comportamiento de una m\u00e1quina. Los lenguajes de programaci\u00f3n se utilizan para desarrollar software, es decir, programas inform\u00e1ticos que se ejecutan en un ordenador.</p> <p>El objetivo de un lenguaje de programaci\u00f3n es facilitar la escritura de programas inform\u00e1ticos. Los lenguajes de programaci\u00f3n permiten a los programadores escribir instrucciones en un lenguaje que es m\u00e1s f\u00e1cil de entender que el lenguaje m\u00e1quina. Dicho de otra forma, un lenguaje de programaci\u00f3n permite abstraerse de los detalles de la m\u00e1quina (arquitectura del procesador, memoria, sistema operativo, etc.) y centrarse en la l\u00f3gica del programa.</p> <p>Todo lenguaje de programaci\u00f3n consta de:</p> <ul> <li>Alfabeto: Conjunto de s\u00edmbolos que se pueden utilizar para escribir instrucciones.</li> <li>Sintaxis: Conjunto de reglas que definen la estructura del lenguaje.</li> <li>Sem\u00e1ntica: Conjunto de reglas que definen el significado de las instrucciones.</li> </ul> <p>Adem\u00e1s de estos tres elementos hay que tener en cuenta que todo lenguaje conste de un conjunto de palabras reservadas que no se pueden utilizar como identificadores. Estas son las plataformas con significado especial que se utilizan para escribir programas.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#alto-y-bajo-nivel","title":"Alto y bajo nivel","text":"<p>Cuando se habla de nivel con respecto a un lenguaje de programaci\u00f3n se hace referencia al nivel de abstracci\u00f3n del lenguaje. Es decir, cuan alejado est\u00e1 del hardware. Los lenguajes de alto nivel son aquellos que est\u00e1n m\u00e1s cerca del lenguaje humano y los lenguajes de bajo nivel son aquellos que est\u00e1n m\u00e1s cerca del lenguaje m\u00e1quina.</p> <p>Ejemplos de lenguajes de alto nivel son Python, Java, C#, JavaScript, etc. Ejemplos de lenguajes de bajo nivel son C, C++, Ensamblador, etc.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Apuntes%20UD1/#clasificacion-de-los-lenguajes-de-programacion","title":"Clasificaci\u00f3n de los lenguajes de programaci\u00f3n","text":"<p>Clasificar los lenguajes de programaci\u00f3n es cada vez m\u00e1s dif\u00edcil debido a la gran cantidad de lenguajes que existen y a la diversidad de paradigmas de programaci\u00f3n. Los lenguajes actuales toman elementos de diferentes paradigmas y no se pueden clasificar f\u00e1cilmente en una \u00fanica categor\u00eda.</p> <p>Es por ello m\u00e1s interesante hablar de paradigmas de programaci\u00f3n antes que categor\u00edas. Algunos de los paradigmas de programaci\u00f3n m\u00e1s conocidos son:</p> <ul> <li>Programaci\u00f3n imperativa: Se basa en la ejecuci\u00f3n de instrucciones que modifican el estado del programa. Ejemplos de lenguajes imperativos son C, C++, Java, etc.</li> <li>Programaci\u00f3n declarativa: Se basa en la descripci\u00f3n de la soluci\u00f3n en lugar de en la secuencia de instrucciones. Ejemplos de lenguajes declarativos son SQL, Prolog, etc.</li> <li>Programaci\u00f3n orientada a objetos: Se basa en la creaci\u00f3n de objetos que encapsulan datos y comportamiento. Ejemplos de lenguajes orientados a objetos son Java, C#, Python, etc.</li> <li>Programaci\u00f3n funcional: Se basa en la aplicaci\u00f3n y composici\u00f3n de funciones. En estos lenguajes las funciones son el elemento fundamental. Ejemplos de lenguajes funcionales son Erlang, Haskell, etc.</li> </ul> <p>Dependiendo de c\u00f3mo se ejecuten las instrucciones, los lenguajes de programaci\u00f3n se pueden clasificar en dos tipos:</p> <ul> <li>Lenguajes compilados: Son aquellos en los que el c\u00f3digo fuente se traduce a un lenguaje m\u00e1quina espec\u00edfico del procesador. El resultado de esta traducci\u00f3n es un archivo ejecutable que contiene el programa en lenguaje m\u00e1quina. Este archivo se puede ejecutar en cualquier ordenador que tenga el mismo procesador (arquitectura) y el mismo sistema operativo que el que se utiliz\u00f3 para compilar el programa. Ejemplos de lenguajes compilados son C, C++, Pascal, etc.</li> <li>Lenguajes interpretados: Son aquellos en los que el c\u00f3digo fuente se traduce (interpreta) a lenguaje m\u00e1quina en tiempo de ejecuci\u00f3n. El programa que se encarga de realizar esta traducci\u00f3n se llama int\u00e9rprete. El int\u00e9rprete lee el c\u00f3digo fuente, lo traduce a lenguaje m\u00e1quina y lo ejecuta. Ejemplos de lenguajes interpretados son Python, PHP, JavaScript, etc.</li> </ul> <p>Como coment\u00e1bamos antes, tambi\u00e9n hay lenguajes semicompilados, como Java, que generan c\u00f3digo m\u00e1quina para una m\u00e1quina virtual. Son compilados en el sentido de que se genera c\u00f3digo objeto, pero no para una m\u00e1quina real, sino para una m\u00e1quina virtual. Como ejemplo de m\u00e1quinas virtuales tenemos la JVM de Java, el CLR de .NET o BEAM de Erlang. Estas m\u00e1quinas virtuales son programas que simulan un ordenador y que permiten ejecutar este c\u00f3digo m\u00e1quina en cualquier ordenador que tenga dicha m\u00e1quina virtual instalada.</p> <p>En el caso de Java, por ejemplo, podremos escribir un programa en Java y ejecutarlo en cualquier ordenador que tenga una JVM instalada, independientemente de la arquitectura del procesador o del sistema operativo.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/","title":"Del c\u00f3digo al programa","text":"<ul> <li>Del c\u00f3digo al programa<ul> <li>C\u00f3digo compilado<ul> <li>C<ul> <li>Nota: Instalaci\u00f3n de un compilador de C<ul> <li>Ubuntu Linux</li> <li>Windows</li> </ul> </li> </ul> </li> <li>Go</li> <li>Caso especial: Lenguajes que compilan a bytecode<ul> <li>Ejemplo de Java<ul> <li>Instalaci\u00f3n de Java</li> </ul> </li> <li>Ejemplo de Kotlin<ul> <li>Instalaci\u00f3n de Kotlin</li> </ul> </li> </ul> </li> </ul> </li> <li>C\u00f3digo interpretado<ul> <li>Python<ul> <li>Instalaci\u00f3n de Python</li> </ul> </li> <li>JavaScript<ul> <li>Instalaci\u00f3n de Node.js</li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>En esta secci\u00f3n vamos a ver el proceso que hay desde la escritura de c\u00f3digo en un lenguaje de programaci\u00f3n (c\u00f3digo fuente) hasta la ejecuci\u00f3n del mismo en el sistema operativo (c\u00f3digo objeto).</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#codigo-compilado","title":"C\u00f3digo compilado","text":"<p>En primer lugar veremos varios ejemplos de lenguajes cuyo c\u00f3digo se compila: C y Go. Los ejemplos los haremos en l\u00ednea de comandos y el c\u00f3digo simplemente imprimir\u00e1 los n\u00fameros del 1 al 10. No es la intenci\u00f3n de esta secci\u00f3n ense\u00f1ar a programar en estos lenguajes si no mostrar el proceso de compilaci\u00f3n y ejecuci\u00f3n de un programa por lo que no te preocupes si no entiendes el c\u00f3digo.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#c","title":"C","text":"<p>Para realizar el proceso de codificaci\u00f3n y compilaci\u00f3n en C (y en el resto de los lenguajes) lo primero que hemos de hacer es crear un fichero de texto plano (sin formato) con la extensi\u00f3n <code>.c</code>. En este ejemplo lo llamar\u00e9 <code>ejemplo_c.c</code>. El contenido del fichero ser\u00e1 el siguiente:</p> <pre><code>#include &lt;stdio.h&gt;\n\nfuncion main() {\n    for (int i = 1; i &lt;= 10; i++) {\n        printf(\"%d\\n\", i);\n    }\n}\n</code></pre> <p>A continuaci\u00f3n hemos de compilar el fichero. Para ello abrimos una terminal y nos movemos a la carpeta donde se encuentra el fichero. Una vez all\u00ed ejecutamos el siguiente comando:</p> <pre><code>cc cuenta.c -o cuenta\n</code></pre> <p>Este proceso compilar\u00e1 el fichero <code>cuenta.c</code> y generar\u00e1 un ejecutable llamado <code>cuenta</code> (en GNU Linux y variantes) o <code>cuenta.exe</code> (en sistemas Windows). Para ejecutar el programa hemos de ejecutar el siguiente comando:</p> <pre><code>./cuenta\n</code></pre> <p>O bien en Windows:</p> <pre><code>cuenta.exe\n</code></pre>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#nota-instalacion-de-un-compilador-de-c","title":"Nota: Instalaci\u00f3n de un compilador de C","text":"<p>Es muy probable que el comando <code>gcc</code> o <code>cc</code> no funcione ya que no es com\u00fan que dispongamos de un compilador de C en nuestro sistema. En el caso de que no tengamos un compilador de C podemos instalarlo ejecutando el siguiente comando:</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#ubuntu-linux","title":"Ubuntu Linux","text":"<pre><code>sudo apt install build-essential\n</code></pre>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#windows","title":"Windows","text":"<pre><code>winget install --id=GNU.GCC\n</code></pre> <p>O usando el sistema de paquetes scoop:</p> <pre><code>scoop install gcc\n</code></pre>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#go","title":"Go","text":"<p>El caso de Go es muy similar al de C pero con la diferencia de que Go es un lenguaje m\u00e1s moderno y con ciertas peculiaridades. Para crear una aplicaci\u00f3n Go hemos de crear un m\u00f3dulo de Go (Go no permite que nuestro c\u00f3digo ande suelto por el monte, ha de pertenecer a un m\u00f3dulo). Para ello hemos de crear un directorio y crear un m\u00f3dulo dentro del mismo:</p> <pre><code>mkdir ejemplo_go\ncd ejemplo_go\ngo mod init cuenta\n</code></pre> <p>Con estos comandos hemos creado un m\u00f3dulo de Go llamado <code>cuenta</code> dentro de la carpeta <code>ejemplo_go</code>.</p> <p>Para compilar el c\u00f3digo Go y obtener un ejecutable hemos de crear un fichero de con extensi\u00f3n <code>.go</code> dentro de dicho directorio y con el siguiente contenido:</p> <pre><code>func main() {\n    for i := 1; i &lt;= 10; i++ {\n        fmt.Println(i)\n    }\n}\n</code></pre> <p>Finalmente para compilar el fichero ejecutamos el siguiente comando:</p> <pre><code>go build .\n</code></pre> <p>Y como resultado de este proceso obtendremos un ejecutable llamado <code>cuenta.exe</code> que podemos ejecutar.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#caso-especial-lenguajes-que-compilan-a-bytecode","title":"Caso especial: Lenguajes que compilan a bytecode","text":"<p>Antes de hablar de el caso especial de estos lenguajes necesitamos entender qu\u00e9 es bytecode.</p> <p>Bytecode, c\u00f3digo intermedio o c\u00f3digo portable es un conjunto de instrucciones dise\u00f1ado para ser ejecutado por un int\u00e9rprete software. Es decir, cuando un programa compila a bytecode lo que hace generar un c\u00f3digo escrito mediante un conjunto especial de instrucciones que no ser\u00e1n para el procesador del ordenador si no para ese int\u00e9rprete software. Ser\u00e1 ese int\u00e9rprete el que haga de intermediario entre el bytecode y el sistema operativo para ejecutar las instrucciones.</p> <p>Tres ejemplos de lenguajes que compilan a bytecode son Java, Kotlin y C#. Los dos primeros generan bytecode para la m\u00e1quina virtual de java (JVM) mientras que C# lo hace para CLR (Common Language Runtime) de .NET.</p> <p>A continuaci\u00f3n veremos ejemplos de estos lenguajes. Una vez m\u00e1s lo haremos en l\u00ednea de comandos para que se vea el proceso de compilaci\u00f3n y ejecuci\u00f3n de los programas y no se vea oculto por un IDE.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#ejemplo-de-java","title":"Ejemplo de Java","text":"<p>Para crear un programa en Java hemos de crear un fichero con extensi\u00f3n <code>.java</code> y con el siguiente contenido:</p> <pre><code>public static void main(String[] args) {\n    for (int i = 1; i &lt;= 10; i++) {\n        System.out.println(i);\n    }\n}\n</code></pre> <p>Una vez creado el fichero hemos de compilarlo. Para ello abrimos una terminal y nos movemos a la carpeta donde se encuentra el fichero. Una vez all\u00ed ejecutamos el siguiente comando:</p> <pre><code>javac cuenta.java\n</code></pre> <p>Esto crear\u00e1 un fichero <code>cuenta.class</code> que es el bytecode de nuestro programa. Para ejecutarlo; es decir, para envi\u00e1rselo a la JVM, hemos de ejecutar el siguiente comando:</p> <pre><code>java cuenta\n</code></pre>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#instalacion-de-java","title":"Instalaci\u00f3n de Java","text":"<p>De nuevo, para que estos programas (compilador y m\u00e1quina virtual) funcionen hemos de tener instalado Java en nuestro sistema. Para instalar Java en Ubuntu Linux ejecutamos el siguiente comando:</p> <pre><code>apt install default-jdk\n</code></pre> <p>En Windows podemos instalarlo con:</p> <pre><code>winget install --id=AdoptOpenJDK.OpenJDK\n</code></pre> <p>O bien descargando cualquier JDK, por ejemplo, de AdoptOpenJDK.</p> <p>Nota: No hay ning\u00fan motivo por el que haya puesto dicho JDK. El que prefieras es el que has de instalar.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#ejemplo-de-kotlin","title":"Ejemplo de Kotlin","text":""},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#instalacion-de-kotlin","title":"Instalaci\u00f3n de Kotlin","text":"<p>La instalaci\u00f3n del compilador de l\u00ednea de comandos de Kotlin hemos de seguir las instrucciones de su p\u00e1gina web oficial Kotlin command line compiler. Aunque la forma m\u00e1s simple de instalar Kotlin es mediante el IDE de IntelliJ IDEA o Android Studio.</p> <p>Podremos comprobar que Kotlin se ha instalado correctamente ejecutando el siguiente comando:</p> <pre><code>kotlin -version\nKotlin version 2.0.0-release-341 (JRE 21.0.4+7-LTS)\n</code></pre> <p>Para escribir el c\u00f3digo en Kotlin hemos de crear un fichero con extensi\u00f3n <code>.kt</code> y con el siguiente contenido:</p> <pre><code>fun main() {\n    for (i in 1..10) {\n        println(i)\n    }\n}\n</code></pre> <p>Y para compilarlo ejecutamos el siguiente comando:</p> <pre><code>kotlinc cuenta.kt -include-runtime -d cuenta.jar\n</code></pre> <ul> <li>La opci\u00f3n <code>-d</code> indica el nombre del fichero de salida (en este caso <code>cuenta.jar</code>).</li> <li>La opci\u00f3n <code>-include-runtime</code> incluye la biblioteca de tiempo de ejecuci\u00f3n de Kotlin en el archivo JAR. Esto hace que se pueda ejecutar el archivo JAR sin contar con nada m\u00e1s instalado en el sistema.</li> </ul> <p>Para ejecutar el programa hemos de pasar el bytecode a la JVM. Para ello ejecutamos el siguiente comando:</p> <pre><code>java -jar cuenta.jar\n</code></pre>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#codigo-interpretado","title":"C\u00f3digo interpretado","text":"<p>Como ejemplo de lenguajes interpretados veremos Python  y JavaScript.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#python","title":"Python","text":""},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#instalacion-de-python","title":"Instalaci\u00f3n de Python","text":"<p>Alguna de las versiones de Python suele venir instalada por defecto con el sistema operativo. Para comprobar si tenemos Python instalado ejecutamos el siguiente comando:</p> <pre><code>python --version\n</code></pre> <p>Si nos devuelve algo como <code>Python 3.12.2</code> es que tenemos Python instalado. Si no es as\u00ed podemos instalarlo con el siguiente comando:</p> <pre><code>winget install python\n</code></pre> <p>Una vez instalado, para escribir un programa en Python hemos de crear un fichero con extensi\u00f3n <code>.py</code> y con el siguiente contenido:</p> <pre><code>for i in range(1, 11):\n    print(i)\n</code></pre> <p>Y para ejecutarlo hemos de abrir una terminal y ejecutar el siguiente comando:</p> <pre><code>python cuenta.py\n</code></pre> <p>Nota: En algunos sistemas operativos el comando <code>python</code> puede estar asociado a Python 2. Para ejecutar el programa con Python 3 hemos de usar el comando <code>python3</code>.</p>"},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#javascript","title":"JavaScript","text":""},{"location":"ED/UD%201%20-%20Desarrollo%20de%20software/Del%20c%C3%B3digo%20al%20programa/Del%20c%C3%B3digo%20al%20programa/#instalacion-de-nodejs","title":"Instalaci\u00f3n de Node.js","text":"<p>Node.js es un entorno de ejecuci\u00f3n para JavaScript que nos permite ejecutar c\u00f3digo JavaScript en el sistema operativo (no en el navegador). Para instalar Node.js hemos de ir a su p\u00e1gina web oficial Node.js y descargar el instalador correspondiente a nuestro sistema operativo. Otra opci\u00f3n es utilizar el sistema de paquetes de sistema operativo que usemos. Por ejemplo, para instalar Node.js en Windows 11 podemos ejecutar el siguiente comando:</p> <pre><code>winget install --id OpenJS.NodeJS\n</code></pre> <p>O bien seguir las instrucciones de formas alternativas de instalaci\u00f3n de la p\u00e1gina de Node.js.</p> <p>Una vez instalado hemos de crear un fichero con el c\u00f3digo fuente con la extensi\u00f3n <code>.js</code> y con el siguiente contenido:</p> <pre><code>for (let i = 1; i &lt;= 10; i++) {\n    console.log(i);\n}\n</code></pre> <p>En este caso no hemos de compilar el c\u00f3digo. Para ejecutarlo hemos de abrir una terminal y ejecutar el siguiente comando:</p> <pre><code>node cuenta.js\n</code></pre> <p>De este modo le pasamos las instrucciones escritas en JavaScript al int\u00e9rprete de Node.js y este las ejecuta. Como podemos ver no se genera ning\u00fan archivo intermedio como en el caso de los lenguajes que compilan a bytecode o un ejecutable como en el caso de los lenguajes compilados.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/","title":"Apuntes de Git","text":"<ul> <li>Apuntes de Git<ul> <li>\u00bfQu\u00e9 es Git?<ul> <li>\u00bfQu\u00e9 es un sistema de control de versiones?</li> </ul> </li> <li>Utilidad de GIT</li> <li>Caracter\u00edsticas de GIT<ul> <li>Tres estados de GIT</li> <li>Tres \u00e1reas de GIT</li> <li>Flujo de trabajo b\u00e1sico en GIT</li> </ul> </li> <li>Instalaci\u00f3n de GIT<ul> <li>En Linux (Ubuntu)</li> <li>En Windows</li> </ul> </li> <li>Configuraci\u00f3n de GIT<ul> <li>.gitignore</li> </ul> </li> <li>Comandos b\u00e1sicos de GIT<ul> <li>Inicializar un repositorio</li> <li>Ver el estado de los archivos</li> <li>Clonar un repositorio</li> <li>A\u00f1adir archivos al \u00e1rea de preparaci\u00f3n (staging area)</li> <li>Realizar un commit</li> <li>Remotos<ul> <li>A\u00f1adir un repositorio remoto</li> <li>Para subir los cambios a un repositorio remoto</li> </ul> </li> <li>Ramas en Git (Branches)<ul> <li>Fusionar ramas (Merge)</li> <li>Rebase</li> </ul> </li> <li>Deshacer cambios</li> <li>Resoluci\u00f3n de conflictos<ul> <li>\u00bfQu\u00e9 es un conflicto?</li> </ul> </li> </ul> </li> <li>GUIs de GIT<ul> <li>GitHub Desktop</li> <li>GitKraken</li> <li>Lazygit</li> </ul> </li> </ul> </li> </ul>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#que-es-git","title":"\u00bfQu\u00e9 es Git?","text":"<p>Git es un sistemas de control de versiones que surgi\u00f3 en el 2005. Su desarrollo surgi\u00f3 a ra\u00edz de la necesidad de un sistema de control de versiones que permitiera gestionar el desarrollo del kernel de Linux. Aunque existen otros sistemas de control de versiones, Git se ha convertido en uno de los m\u00e1s populares y extendidos en la actualidad.</p> <p>Los objetivos que se buscaban con la creaci\u00f3n de Git eran los siguientes:</p> <ul> <li>Velocidad.</li> <li>Dise\u00f1o sencillo.</li> <li>Soporte para desarrollo no lineal (miles de ramas paralelas).</li> <li>Totalmente distribuido.</li> <li>Capaz de manejar grandes proyectos como el kernel de Linux eficientemente.</li> </ul>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#que-es-un-sistema-de-control-de-versiones","title":"\u00bfQu\u00e9 es un sistema de control de versiones?","text":"<p>Un sistema de control de versiones (VCS: Version Control System) es un sistema que registra los cambios en un conjunto de archivos (un proyecto) en forma de instant\u00e1neas a lo largo del tiempo. Estas instant\u00e1neas nos permiten conocer qui\u00e9n ha realizado un cambio, cu\u00e1ndo se ha realizado y qu\u00e9 se ha cambiado. Si necesitamos retroceder a una versi\u00f3n anterior de un fichero o de un proyecto completo, podemos hacerlo.</p> <p>Tambi\u00e9n hemos de tener en cuenta que este registro no tiene como objetivo ser un hist\u00f3rico de los cambios, sino una forma de colaborar con otros desarrolladores en un proyecto. Por tanto, se pueden alterar tanto en contenido como la estructura de las instant\u00e1neas.</p> <p>Aunque los VCS son muy utilizados en el desarrollo de software, tambi\u00e9n se pueden utilizar en otros \u00e1mbitos, como el dise\u00f1o gr\u00e1fico, la redacci\u00f3n de documentos, etc.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#utilidad-de-git","title":"Utilidad de GIT","text":"<p>GIT es un sistema de control de versiones distribuido, es decir, todos aquellos que participen en un proyecto gestionado mediante Git podr\u00e1n disponer de una copia del mismo. Esto permite tanto trabajar sin conexi\u00f3n a Internet como tener una copia de seguridad del proyecto. Si el repositorio central falla, se puede recuperar el proyecto a partir de cualquiera de las copias locales. Es decir, no hay un \u00fanico punto de fallo.</p> <p>Un repositorio en Git es un directorio (oculto) que contiene todas las versiones de los archivos de un proyecto, as\u00ed como los metadatos necesarios para gestionar el proyecto. En un proyecto gestionado con Git, cada usuario tiene una copia completa del repositorio (de ah\u00ed que Git se considere distribuido).</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#caracteristicas-de-git","title":"Caracter\u00edsticas de GIT","text":"<ul> <li>Git es un sistema de control de versiones distribuido de manera que no tiene un \u00fanico punto de fallo.</li> <li>Cada usuario tiene una copia local completa del repositorio.</li> <li>Git es Open Source y gratuito.</li> <li>Est\u00e1 dise\u00f1ado para manejar proyectos de cualquier tama\u00f1o con rapidez y eficiencia.</li> <li>Casi todas las operaciones son locales (aunque posteriormente se pueden sincronizar con un servidor remoto).</li> <li>No es necesario estar conectado para trabajar.</li> <li>Git siempre a\u00f1ade datos. Nunca los borra.</li> <li>Esto es importante porque si borramos algo por error, siempre podemos recuperarlo. Y si lo subimos por error, no siempre podemos borrarlo (al menos f\u00e1cilmente).</li> </ul>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#tres-estados-de-git","title":"Tres estados de GIT","text":"<p>Todo archivo gestionado en un repositorio de GIT puede estar en tres estados:</p> <ul> <li>Modificado (modified): hemos cambiado un fichero pero no lo hemos guardado en la base de datos.</li> <li>Preparado (staged): hemos marcado un fichero modificado en su versi\u00f3n actual para que vaya en la pr\u00f3xima instant\u00e1nea (commit).</li> <li>Confirmado (committed): hemos guardado los cambios (de los ficheros previamente marcados, staged) en la base de datos como una instant\u00e1nea.</li> </ul>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#tres-areas-de-git","title":"Tres \u00e1reas de GIT","text":"<ul> <li>Directorio de trabajo (working directory): donde se encuentran los archivos de nuestro proyecto. Aqu\u00ed podremos tener los ficheros vigilados (tracked) por Git o no vigilados (untracked).</li> <li>\u00c1rea de preparaci\u00f3n (staging area): donde se encuentran los archivos marcados (staged) para la pr\u00f3xima instant\u00e1nea (commit).</li> <li>Directorio Git (Git directory): donde GIT guarda los metadatos y la base de datos de los cambios. Aqu\u00ed se encuentra la historia del proyecto. De nuevo, recordar que la historia se puede modificar.</li> </ul> <p>Los ficheros con los que estamos trabajando, es decir, editando, modificando, compilando, etc. son los que se encuentran el el directorio de trabajo.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#flujo-de-trabajo-basico-en-git","title":"Flujo de trabajo b\u00e1sico en GIT","text":"<p>Git no prescribe un flujo de trabajo concreto, si no que proporciona las herramientas necesarias para que cada equipo de desarrollo pueda definir su propio flujo de trabajo.</p> <p>Una forma b\u00e1sica de usar Git podr\u00eda ser la siguiente (aunque hay muchas otras formas):</p> <ol> <li>Realizamos cambios en los archivos de nuestro proyecto.</li> <li>Selecciones los archivos que queremos incluir (staged) en la siguiente instant\u00e1nea (commit).</li> <li>Realizamos el commit para salvar los cambios en forma de una instant\u00e1nea.</li> </ol>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#instalacion-de-git","title":"Instalaci\u00f3n de GIT","text":""},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#en-linux-ubuntu","title":"En Linux (Ubuntu)","text":"<p>Git est\u00e1 incluido en la mayor\u00eda de gestores de paquetes de las distribuciones de Linux. Para instalarlo en Ubuntu, usamos el siguiente comando:</p> <pre><code>sudo apt install git\n</code></pre>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#en-windows","title":"En Windows","text":"<p>La forma m\u00e1s sencilla de instalar git en Windows (versiones 11 y algunas de Windows 10) es usar la herramienta de l\u00ednea de comandos <code>winget</code>. Para ello, usamos el siguiente comando:</p> <pre><code>winget install git.git\n</code></pre>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#configuracion-de-git","title":"Configuraci\u00f3n de GIT","text":"<p>Git necesita saber qui\u00e9n eres para poder registrar los cambios que realizas en un proyecto. Por tanto, es necesario configurar tu nombre y tu direcci\u00f3n de correo electr\u00f3nico antes de poder realizar un commit. Para ello, usamos los siguientes comandos:</p> <pre><code>git config --global user.name \"mourazos\"\ngit config --global user.email \"mourazos@iessanclemente.net\"\n</code></pre> <p>Esto no es estrictamente necesario si utilizamos Git para proyectos personales sin usar un repositorio remoto. Pero como el uso m\u00e1s com\u00fan de Git es colaborativo, es necesario establecer estos valores.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#gitignore","title":"<code>.gitignore</code>","text":"<p>Es importante evitar que Git incluya en nuestro proyecto ficheros que no queremos compartir o hacer p\u00fablicos (como ficheros temporales, ficheros de configuraci\u00f3n, tokens, claves, etc.). Esto es especialmente importante si tenemos pensado compartir nuestro proyecto en un repositorio p\u00fablico en alguno de los servicios de alojamiento de repositorios (como GitHub, GitLab, Bitbucket, etc.).</p> <p>Para indicar a Git qu\u00e9 ficheros o directorios ha de ignorar, podemos crear un fichero llamado <code>.gitignore</code> en la ra\u00edz del proyecto. En este fichero podemos incluir los nombres de los ficheros o directorios que queremos que Git ignore.</p> <p>Por ejemplo, si queremos que Git ignore los ficheros ejecutables o el directorio <code>node_modules</code> (que contiene las dependencias de un proyecto Node.js), podemos a\u00f1adir las siguientes l\u00edneas al fichero <code>.gitignore</code>:</p> <pre><code># Ignora los ficheros con extensi\u00f3n .exe, .sh y .bat\n*.exe\n*.sh\n*.bat\n\n# Ignora el directorio node_modules\nnode_modules/\n</code></pre> <p>Se puede consultar una referencia de los patrones a usar dentro de <code>.gitignore</code> en la documentaci\u00f3n de Git.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#comandos-basicos-de-git","title":"Comandos b\u00e1sicos de GIT","text":""},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#inicializar-un-repositorio","title":"Inicializar un repositorio","text":"<p>Para inicializar un repositorio en un directorio, usamos el comando <code>git init</code>.</p> <p>Esta instrucci\u00f3n crea un directorio <code>.git</code> en el directorio actual. Este directorio contiene todos los metadatos y la base de datos de los cambios del proyecto. Si borramos este directorio, perderemos todo el historial del proyecto.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#ver-el-estado-de-los-archivos","title":"Ver el estado de los archivos","text":"<p>Para ver el estado de los archivos en un repositorio, usamos el comando <code>git status</code>.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#clonar-un-repositorio","title":"Clonar un repositorio","text":"<p>Para clonar un repositorio, usamos el comando <code>git clone url_repositorio directorio_destino</code>.</p> <p>Este comando crea en el directorio de destino una copia completa del repositorio indicado en la URL.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#anadir-archivos-al-area-de-preparacion-staging-area","title":"A\u00f1adir archivos al \u00e1rea de preparaci\u00f3n (staging area)","text":"<p>Para a\u00f1adir un archivo al \u00e1rea de preparaci\u00f3n, usamos el comando <code>git add nombre_archivo</code>.</p> <p>Si queremos a\u00f1adir todos los archivos modificados al \u00e1rea de preparaci\u00f3n, usamos el comando <code>git add .</code>.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#realizar-un-commit","title":"Realizar un commit","text":"<p>Para realizar un commit, usamos el comando <code>git commit -m \"mensaje_commit\"</code>.</p> <p>Si queremos a\u00f1adir todos los archivos modificados al \u00e1rea de preparaci\u00f3n y realizar un commit, podemos usar el comando <code>git commit -am \"mensaje_commit\"</code>.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#remotos","title":"Remotos","text":"<p>Los repositorios remotos son versiones de tu proyecto que se encuentran alojadas en Internet o en una red. Puedes tener varios repositorios remotos, cada uno de los cuales puede ser de solo lectura o de lectura/escritura.</p> <p>Para ver los repositorios remotos de un proyecto, usamos el comando <code>git remote -v</code>.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#anadir-un-repositorio-remoto","title":"A\u00f1adir un repositorio remoto","text":"<p>Para a\u00f1adir un repositorio remoto, usamos el comando <code>git remote add nombre_repositorio url_repositorio</code>.</p> <p>Es com\u00fan que el repositorio remoto principal se llame <code>origin</code>, de modo que el comando quedar\u00eda <code>git remote add origin url_repositorio</code>.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#para-subir-los-cambios-a-un-repositorio-remoto","title":"Para subir los cambios a un repositorio remoto","text":"<p>Para subir los cambios a un repositorio remoto, usamos el comando <code>git push origin nombre_rama</code>.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#ramas-en-git-branches","title":"Ramas en Git (Branches)","text":"<p>Las ramas en Git son simplemente apuntadores m\u00f3viles a uno de los commits. Por defecto, cuando creamos un nuevo proyecto, se crea una rama principal llamada <code>master</code> (o <code>main</code> dependiendo de la versi\u00f3n). Al crear una nueva rama, se crea un nuevo apuntador que podemos mover a cualquier commit. Esto nos permite trabajar en paralelo en diferentes funcionalidades o versiones de nuestro proyecto. Cuando decimos que una rama apunta a un commit significa que los cambios (y commits) que hagamos en esa rama se a\u00f1adir\u00e1n a partir de ese commit.</p> <pre><code>---\ntitle: Ejemplo de ramas en Git\n---\ngitGraph\ncommit id: \"Commit inicial\"\ncommit id: \"Algunos cambios.\"\nbranch develop\ncheckout develop\ncommit id: \"Cambios en develop.\"\ncommit id: \"M\u00e1s cambios en develop.\"\ncheckout main\ncommit id: \"Cambios en rama main.\"\ncommit id: \"M\u00e1s cambios en main.\"</code></pre> <p>La rama en uso (o activa) se llama <code>HEAD</code>. Cuando creamos un nuevo commit, <code>HEAD</code> se mueve al nuevo commit. Si cambiamos de rama <code>HEAD</code> se mueve a la nueva rama (a su \u00faltimo commit).</p> <p>El comando para crear una nueva rama es:</p> <pre><code>git branch nombre_rama\n</code></pre> <p>Y si queremos movernos a dicha rama usar\u00edamos el comando:</p> <pre><code>git checkout nombre_rama\n</code></pre> <p>Estos dos comandos son tan comunes que se pueden combinar en uno solo:</p> <pre><code>git checkout -b nueva_rama\n</code></pre> <p>Que crea una nueva rama y se cambia a ella.</p> <p>Nota: Desde la versi\u00f3n 2.23 de Git, se recomienda usar <code>git switch</code> en lugar de <code>git checkout</code> para cambiar de rama.</p> <p>As\u00ed:</p> <pre><code>git switch nombre_rama\n</code></pre> <p>Cambia de rama y ...</p> <pre><code>git switch -c nueva_rama\n</code></pre> <p>Crea una nueva rama y se cambia a ella.</p> <p>Para m\u00e1s informaci\u00f3n sobre \u00e9ste y otros comandos de Git podemos consultar la p\u00e1gina de documentaci\u00f3n de Git.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#fusionar-ramas-merge","title":"Fusionar ramas (Merge)","text":"<p>La fusi\u00f3n de ramas es el proceso de combinar dos ramas en una sola con el objetivo de integrar los cambios de una rama en la otra. Para fusionar una rama con la rama actual, usamos el comando <code>git merge nombre_rama</code> o bien <code>git merge nombre_rama nombre_rama_base</code>.</p> <p>El merge se aplicar\u00e1 sobre la rama actual, por lo que es importante estar en la rama que queremos que reciba los cambios. Si queremos fusionar la rama <code>develop</code> con la rama <code>main</code>:</p> <pre><code>git checkout main\ngit merge develop\n</code></pre> <p>Si hay conflictos, debemos resolverlos manualmente.</p> <pre><code>---\ntitle: Ejemplo de fusi\u00f3n de ramas en Git\n---\ngitGraph\ncommit id: \"Commit inicial\"\ncommit id: \"Algunos cambios.\"\nbranch develop\ncheckout develop\ncommit id: \"Develop 01.\"\ncommit id: \"Develop 02.\"\ncheckout main\ncommit id: \"Main 01.\"\nmerge develop\ncommit id: \"Main 02.\"</code></pre>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#rebase","title":"Rebase","text":"<p>La operaci\u00f3n de rebase es una forma de, al igual de merge, incluir los cambios de una rama en otra. En lugar de fusionar dos ramas, se reescribe la historia de una rama sobre otra. Esto puede ser \u00fatil para mantener una historia m\u00e1s limpia y ordenada. El comando para realizar un rebase es <code>git rebase nombre_rama</code>: Esto hace que el rebase se aplique DESDE la rama actual a <code>nombre_rama</code>. Repit\u00e1moslo par que quede claro: Si queremos hacer un rebase desde la rama <code>develop</code> a la rama <code>main</code> debemos de: </p> <ul> <li>Cambiar de rama a <code>develop</code>.</li> <li>Escribir el comando <code>git rebase main</code>.</li> </ul> <p>Al contrario que en el caso de <code>merge</code> hemos de estar en la rama dese la cual queremos que se env\u00eden los cambios:</p> <pre><code>git checkout develop\ngit rebase main\n</code></pre> <pre><code>---\ntitle: Ejemplo de rebase en Git\n---\ngitGraph\ncommit id: \"Commit inicial\"\ncommit id: \"Algunos cambios.\"\nbranch develop\ncheckout develop\ncommit id: \"Develop 01.\"\ncommit id: \"Develop 02.\"\ncheckout main\ncommit id: \"Main 01.\"\ncommit id: \"Main 02.\"\ncommit id: \"Develop 01 (a main).\"\ncommit id: \"Develop 02 (a main).\"</code></pre>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#deshacer-cambios","title":"Deshacer cambios","text":"<p>Las instrucciones que podemos usar para deshacer cambios en Git son:</p> <ul> <li><code>git checkout ref_commit</code>: deshace los cambios en un archivo que no ha sido a\u00f1adido al \u00e1rea de preparaci\u00f3n.</li> <li><code>git reset nombre_archivo</code>: deshace los cambios en un archivo que ha sido a\u00f1adido al \u00e1rea de preparaci\u00f3n.</li> <li><code>git revert ref_commit</code>: deshace los cambios hasta un commit concreto.</li> </ul>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#resolucion-de-conflictos","title":"Resoluci\u00f3n de conflictos","text":""},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#que-es-un-conflicto","title":"\u00bfQu\u00e9 es un conflicto?","text":"<p>En Git se producen conflictos cuando dos o m\u00e1s personas han cambiado las mismas l\u00edneas de un fichero o si alguien borra un fichero mientras otro usuarios lo est\u00e1 modificando. En estos casos Git no puede decidir qui\u00e9n tiene la raz\u00f3n por lo que marca el fichero como conflicto y detiene el proceso de fusi\u00f3n. Es entonces responsabilidad del desarrollador resolver el conflicto.</p> <p>Nota: Los conflictos s\u00f3lo afectan al desarrollador que realiza la fusi\u00f3n, el resto del equipo no es consciente del conflicto.</p> <p>Para resolver el conflicto Git incluye ambas versiones en el fichero y marca las diferencias con <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>, <code>=======</code> y <code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code> donde:</p> <ul> <li><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code> marca el inicio de la versi\u00f3n actual.</li> <li><code>=======</code> marca el inicio de la versi\u00f3n en conflicto.</li> <li><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code> marca el final de la versi\u00f3n en conflicto.</li> </ul> <p>Nosotros hemos de editar el fichero para decidir qu\u00e9 versi\u00f3n queremos mantener y eliminar las marcas de conflicto. Una vez resuelto el conflicto, debemos a\u00f1adir el fichero al \u00e1rea de preparaci\u00f3n y realizar un commit: <code>git add nombre_fichero</code> y <code>git commit -m \"mensaje_commit\"</code>.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#guis-de-git","title":"GUIs de GIT","text":"<p>Las interfaces gr\u00e1ficas de usuario (GUIs) de Git son herramientas que nos permiten gestionar los repositorios de Git de forma gr\u00e1fica.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#github-desktop","title":"GitHub Desktop","text":"<p>Es una herramienta desarrollada por GitHub para gestionar repositorios de Git. Es una herramienta muy sencilla y f\u00e1cil de usar, pero no tiene todas las funcionalidades de Git. Es muy sencilla y f\u00e1cil de usar, pero no tiene todas las funcionalidades de Git.</p> <p></p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#gitkraken","title":"GitKraken","text":"<p>ES una herramienta de pago, aunque dispone de versiones gratuitas con algunas limitaciones. Es una herramienta muy potente y completa.</p> <p></p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Apuntes%20de%20GIT/#lazygit","title":"Lazygit","text":"<p>Es una herramienta gr\u00e1fica de terminal (TUI) para Git. Es muy sencilla y f\u00e1cil de usar.</p> <p></p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Tarea/Tarea%20GIT/","title":"Tarea GIT","text":"<ul> <li>Enunciado</li> <li>Notas</li> <li>Im\u00e1genes</li> <li>Dudas</li> </ul>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Tarea/Tarea%20GIT/#enunciado","title":"Enunciado","text":"<p>Crea una cuenta en GitHub, Bitbucket  o GitLab y sube un proyecto con las siguientes caracter\u00edsticas.</p> <p>Documenta el proceso.</p> <ul> <li>El proyecto debe tener un fichero markdown con el nombre <code>README.md</code> en el directorio ra\u00edz del proyecto.</li> <li>El fichero <code>README.md</code> contendr\u00e1 la documentaci\u00f3n del proceso de realizaci\u00f3n de la tarea incluyendo:</li> <li>Capturas de pantalla (si fuesen necesarias).</li> <li>Explicaci\u00f3n de los comandos utilizados (si procede).</li> <li>Ha de incluir al menos una imagen.</li> <li>El proyecto debe tener al menos tres commits.</li> </ul> <p>Las im\u00e1genes que se incluyan han de estar en la carpeta <code>images</code> en la ra\u00edz del proyecto.</p> <p>Se podr\u00e1 hacer mediante l\u00ednea de comandos o mediante el uso de la herramienta que se prefiera (incluyendo una integrada en un IDE), tanto en la creaci\u00f3n de los ficheros como en la creaci\u00f3n del repositorio, a\u00f1adido de ficheros, commits, etc.</p> <p>El proyecto ha de estar tanto en el repositorio local como en el remoto, es decir, actualizado. Lo que se corregir\u00e1 ser\u00e1 lo que se pueda ver en el repositorio remoto (GitLab, GitHub o Bitbucket).</p> <p>La entrega se realizar\u00e1 comunicando la URL al proyecto para que se pueda verificar su realizaci\u00f3n.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Tarea/Tarea%20GIT/#notas","title":"Notas","text":""},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Tarea/Tarea%20GIT/#imagenes","title":"Im\u00e1genes","text":"<p>Para que las im\u00e1genes se muestren en el <code>README.md</code> (y suponiendo que se ha seguido la instrucci\u00f3n de incluirlas dentro del directorio <code>img</code>) se ha de introducir el siguiente c\u00f3digo markdown:</p> <pre><code>![Texto a mostrar si la imagen falla](./images/miImagen.png)\n</code></pre> <p>Obviamente indicando el nombre y extensi\u00f3n (jpg, svg, etc.) de la imagen que se haya incluido.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/GIT/Tarea/Tarea%20GIT/#dudas","title":"Dudas","text":"<p>Ante cualquier duda respecto a la realizaci\u00f3n de cualquier apartado, como siempre, no dud\u00e9is en poneros en contacto conmigo y veremos de resolverla juntos. Igualmente pod\u00e9is usar el foro para el mismo fin.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/","title":"Apuntes de Maven","text":"<ul> <li>Apuntes de Maven<ul> <li>Introduction a Maven</li> <li>Instalaci\u00f3n de Maven<ul> <li>Linux (Ubuntu)</li> <li>Windows</li> </ul> </li> <li>Arquetipos</li> <li>Configuraci\u00f3n: fichero pom.xml</li> <li>dependencias</li> <li>Plugins<ul> <li>Ejemplo pom.xml</li> <li>Secci\u00f3n de identificaci\u00f3n del proyecto</li> <li>Secci\u00f3n properties</li> <li>Secci\u00f3n dependencies</li> <li>Secci\u00f3n build</li> <li>Secci\u00f3n plugins</li> </ul> </li> </ul> </li> </ul>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/#introduction-a-maven","title":"Introduction a Maven","text":"<p>Maven es una herramienta de gesti\u00f3n y construcci\u00f3n de proyectos de software en lenguajes basados en Java como Java, Kotlin o Groovy. Maven es una herramienta de c\u00f3digo abierto y es una de las m\u00e1s utilizadas en la gesti\u00f3n de proyectos Java.</p> <p>\u00bfQu\u00e9 ofrece Maven?</p> <ul> <li>Gesti\u00f3n de dependencias: Maven se encarga de gestionar las dependencias de nuestro proyecto. Maven descarga las dependencias de nuestro proyecto de un repositorio central y las a\u00f1ade a nuestro proyecto.</li> <li>Estructura de directorios: Maven define una estructura de directorios para nuestros proyectos. Esta estructura es la siguiente:</li> <li><code>src/main/java</code>: aqu\u00ed se encuentran los ficheros fuente Java de nuestro proyecto.</li> <li><code>src/main/resources</code>: aqu\u00ed se encuentran los recursos de nuestro proyecto (ficheros de configuraci\u00f3n, im\u00e1genes, etc.).</li> <li><code>src/test/java</code>: aqu\u00ed se encuentran los ficheros fuente Java de los tests de nuestro proyecto.</li> <li><code>src/test/resources</code>: aqu\u00ed se encuentran los recursos de los tests de nuestro proyecto.</li> <li><code>target/</code>: aqu\u00ed se encuentran los ficheros binarios de nuestro proyecto, resultado del proceso de compilaci\u00f3n o build del proyecto.</li> <li>Permite incluir plugins: Maven permite incluir plugins que a\u00f1aden funcionalidades a nuestro proyecto. Por ejemplo, para realizar pruebas unitarias, para generar documentaci\u00f3n, para generar informes, etc.</li> </ul> <p>La configuraci\u00f3n de un proyecto Maven se realiza en un fichero llamado <code>pom.xml</code> (Project Object Model) que se encontrar\u00e1 en el directorio ra\u00edz del proyecto. En este fichero se define la configuraci\u00f3n del proyecto, las dependencias, los plugins, etc.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/#instalacion-de-maven","title":"Instalaci\u00f3n de Maven","text":""},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/#linux-ubuntu","title":"Linux (Ubuntu)","text":"<p>Para instalar Maven en una distribuci\u00f3n Linux lo ideal ser\u00e1 hacerlo mediante el gestor de paquetes de la distribuci\u00f3n. En el caso de Ubuntu, podemos instalar Maven con el siguiente comando:</p> <pre><code>sudo apt install maven\n</code></pre>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/#windows","title":"Windows","text":"<p>Para instalar Maven en Windows podemos utilizar varios m\u00e9todos. Uno de los m\u00e1s sencillos es descargar Maven desde la p\u00e1gina oficial de Maven y descomprimir el fichero en un directorio de nuestro sistema. A continuaci\u00f3n, a\u00f1adimos la ruta de Maven al PATH del sistema.</p> <p>Una forma m\u00e1s f\u00e1cil de instalar Maven en Windows es utilizar un gestor de paquetes como Chocolatey (las instrucciones para instalar Chocolatey se encuentran en su web. Para instalar Maven con Chocolatey ejecutamos el siguiente comando:</p> <pre><code>choco install maven\n</code></pre> <pre><code>public static void main(String[] args) {\n    System.out.println(\"Hello, World!\");\n}\n</code></pre> <p>Nota: para instalar paquetes con Chocolatey necesitamos tener permisos de administrador.</p> <p>Otra forma de instalar Maven en Windows es utilizando Scoop. Para instalar Maven con Scoop ejecutamos el siguiente comando:</p> <pre><code>scoop install maven\n</code></pre>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/#arquetipos","title":"Arquetipos","text":"<p>Los arquetipos son plantillas para distintos tipos proyectos que, en combinaci\u00f3n con ciertos aportes del usuario, dar\u00e1n lugar a un proyecto maven sobre el que trabajar y que se ajuste a sus necesidades.</p> <p>As\u00ed, un arquetipo describe la estructura de directorios de un proyecto, los ficheros b\u00e1sicos que deben contener y su configuraci\u00f3n (fichero <code>pom.xml</code>). De este modo, cuando se genere un proyecto a partir de un arquetipo se crear\u00e1 una estructura de directorios y ficheros, y se incluir\u00e1 un archivo de configuraci\u00f3n base con las dependencias y plugins necesarios para trabajar con dicho proyecto.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/#configuracion-fichero-pomxml","title":"Configuraci\u00f3n: fichero <code>pom.xml</code>","text":"<p>Un fichero <code>pom.xml</code> incluye los siguiente elementos:</p> <ul> <li>Informaci\u00f3n de identificaci\u00f3n del proyecto:</li> <li>groupId: Este elemento es un identificador \u00fanico de la organizaci\u00f3n o grupo propietario del proyecto. Suele estar basado en identificador de dominio completamente cualificado (<code>gal.xunta.edu</code>, <code>net.iessanclmente</code>, etc.).</li> <li>artifactId: Este elemento es un identificador \u00fanico del proyecto. El elemento principal generado por el proyecto tendr\u00e1 este nombre (generalmente un fichero <code>.jar</code> (<code>myapp-1.0.jar</code>).</li> <li>version: Este elemento indica la versi\u00f3n del artefacto que generar\u00e1 el proyecto.</li> <li>name: El nombre interno que tendr\u00e1 el proyecto.</li> <li>properties: En esta secci\u00f3n se podr\u00e1n definir variables internas al proyecto. Es decir, establecer valores que podr\u00e1n consultarse durante el proceso de generaci\u00f3n del proyecto.</li> <li>dependencies: En esta secci\u00f3n se indicar\u00e1n las distintas dependencias del proyecto as\u00ed como el contexto de las mismas.</li> <li>dependency: Elemento que contiene las informaci\u00f3n de cada dependencia y constar\u00e1 de:<ul> <li>groupId: Al igual que el *groupId del proyecto pero referido a la organizaci\u00f3n autora de la dependencia.</li> <li>artifactId: El nombre \u00fanico de la dependencia.</li> <li>version: Versi\u00f3n de la dependencia.</li> <li>scope: Indica el contexto de la dependencia, para qu\u00e9 necesitamos la dependencia. Por defecto es <code>compile</code>, pero pueden ser otros como <code>test</code> o <code>provided</code>, etc.</li> </ul> </li> <li>build: En esta secci\u00f3n se indicar\u00e1 la forma en que ha de procesarse el proyecto y las acciones que se deben realizar. El elemento <code>plugins</code> es el que indicar\u00e1 las herramientas que se utilizar\u00e1n para el proceso de compilaci\u00f3n.</li> <li>plugins y plugin: Elemento que contiene la informaci\u00f3n de cada herramienta que se utilizar\u00e1 para el proceso de compilaci\u00f3n.</li> </ul>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/#dependencias","title":"dependencias","text":"<p>Cuando mencionamos las dependencias en el apartado anterior hablamos de que ten\u00edan un contexto de uso. Los contextos de uso son:</p> <ul> <li><code>compile</code>: indica que la dependencia es necesaria para poder construir el proyecto.</li> <li><code>test</code>: indica que la dependencia es necesaria para poder realizar los tests del proyecto.</li> <li><code>provided</code>: indica que la dependencia es necesaria para poder ejecutar el proyecto, pero no es necesaria para construirlo.</li> <li><code>runtime</code>: indica que la dependencia es necesaria para poder ejecutar el proyecto.</li> <li><code>system</code>: indica que la dependencia es necesaria para poder ejecutar el proyecto, pero no es necesaria para construirlo.</li> <li><code>import</code>: indica que la dependencia es necesaria para poder importar el proyecto.</li> </ul> <p>Para profundizar a\u00fan m\u00e1s en c\u00f3mo gestiona Maven las dependencias se puede consultar el apartado sobre las mismas en la documentaci\u00f3n.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/#plugins","title":"<code>Plugins</code>","text":"<p>Para m\u00e1s informaci\u00f3n sobre los plugins se puede consultar el apartado sobre los mismos o sobre c\u00f3mo crear los nuestros en la documentaci\u00f3n.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/#ejemplo-pomxml","title":"Ejemplo <code>pom.xml</code>","text":"<p>Como dijimos, <code>pom.xml</code> es el fichero de configuraci\u00f3n de un proyecto Maven. En este fichero se define la configuraci\u00f3n del proyecto as\u00ed como los plugins y dependencias necesarias para construirlo.</p> <p>Un ejemplo de un fichero <code>pom.xml</code> es el siguiente:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n  &lt;groupId&gt;com.example&lt;/groupId&gt;\n  &lt;artifactId&gt;demo&lt;/artifactId&gt;\n  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n  &lt;name&gt;demo&lt;/name&gt;\n  &lt;!-- FIXME change it to the project's website --&gt;\n  &lt;url&gt;http://www.example.com&lt;/url&gt;\n\n  &lt;properties&gt;\n    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n    &lt;maven.compiler.source&gt;1.7&lt;/maven.compiler.source&gt;\n    &lt;maven.compiler.target&gt;1.7&lt;/maven.compiler.target&gt;\n  &lt;/properties&gt;\n\n  &lt;dependencies&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;junit&lt;/groupId&gt;\n      &lt;artifactId&gt;junit&lt;/artifactId&gt;\n      &lt;version&gt;4.11&lt;/version&gt;\n      &lt;scope&gt;test&lt;/scope&gt;\n    &lt;/dependency&gt;\n  &lt;/dependencies&gt;\n\n  &lt;build&gt;\n    &lt;pluginManagement&gt;&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;\n      &lt;plugins&gt;\n        &lt;!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle --&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt;\n          &lt;version&gt;3.1.0&lt;/version&gt;\n        &lt;/plugin&gt;\n        &lt;!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;\n          &lt;version&gt;3.0.2&lt;/version&gt;\n        &lt;/plugin&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n          &lt;version&gt;3.8.0&lt;/version&gt;\n        &lt;/plugin&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;\n          &lt;version&gt;2.22.1&lt;/version&gt;\n        &lt;/plugin&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\n          &lt;version&gt;3.0.2&lt;/version&gt;\n        &lt;/plugin&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;\n          &lt;version&gt;2.5.2&lt;/version&gt;\n        &lt;/plugin&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;\n          &lt;version&gt;2.8.2&lt;/version&gt;\n        &lt;/plugin&gt;\n        &lt;!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle --&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-site-plugin&lt;/artifactId&gt;\n          &lt;version&gt;3.7.1&lt;/version&gt;\n        &lt;/plugin&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt;\n          &lt;version&gt;3.0.0&lt;/version&gt;\n        &lt;/plugin&gt;\n      &lt;/plugins&gt;\n    &lt;/pluginManagement&gt;\n  &lt;/build&gt;\n&lt;/project&gt;\n</code></pre> <p>Volamos una vez m\u00e1s sobre las secciones del <code>pom.xml</code> y sus significados.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/#seccion-de-identificacion-del-proyecto","title":"Secci\u00f3n de identificaci\u00f3n del proyecto","text":"<p>En todo fichero <code>pom.xml</code> es necesario definir la secci\u00f3n de identificaci\u00f3n del proyecto. Esta secci\u00f3n se compone de los siguientes elementos:</p> <ul> <li><code>groupId</code>: identificador del grupo al que pertenece el proyecto. Por ejemplo <code>gal.edu.xunta</code>. No es necesario que siga la notaci\u00f3n de puntos o de paquetes de Java (aunque se considera una buena pr\u00e1ctica).</li> <li><code>artifactId</code>: identificador del proyecto. Normalmente coincide con el nombre con el que se conocer\u00e1 el proyecto. Este identificador es, en combinaci\u00f3n con el <code>groupId</code>, la clave que identifica de forma \u00fanica un proyecto respecto a todos los dem\u00e1s.</li> <li><code>version</code>: versi\u00f3n del proyecto.</li> </ul> <p>El elemento o artefacto resultado de la ejecuci\u00f3n del proyecto suele llamarse <code>&lt;artifactId&gt;.&lt;version&gt;.jar</code>.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/#seccion-properties","title":"Secci\u00f3n <code>properties</code>","text":"<p>En esta secci\u00f3n se le puede pasar informaci\u00f3n a Maven sobre nuestro proyecto. Por ejemplo, si deseamos que Maven utilice una versi\u00f3n concreta de Java, podemos indicarlo en esta secci\u00f3n. En el ejemplo anterior, se indica que se utilizar\u00e1 Java 23.</p> <pre><code>&lt;properties&gt;\n  &lt;maven.compiler.source&gt;23&lt;/maven.compiler.source&gt;\n  &lt;maven.compiler.target&gt;23&lt;/maven.compiler.target&gt;\n&lt;/properties&gt;\n</code></pre> <p>En esta secci\u00f3n tambi\u00e9n podemos establecer nuestros propios valores que podr\u00e1n ser usados m\u00e1s adelante en el fichero <code>pom.xml</code> o por parte de los plugins.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/#seccion-dependencies","title":"Secci\u00f3n <code>dependencies</code>","text":"<p>Es uno de los elementos fundamentales de un fichero <code>pom.xml</code>. En esta secci\u00f3n se definen las dependencias del proyecto. Cada dependencia se define mediante la etiqueta <code>&lt;dependency&gt;</code> y se compone de los siguientes elementos:</p> <ul> <li><code>groupId</code>, <code>artifactId</code> y <code>version</code>: identifican la dependencia.</li> <li><code>scope</code>: indica el alcance de la dependencia, es decir, en qu\u00e9 contexto ser\u00e1 necesaria. Algunos valores comunes son:</li> <li><code>compile</code> (el valor por defecto): la dependencia ser\u00e1 necesaria para poder construir el proyecto.</li> <li><code>test</code>: la dependencia s\u00f3lo ser\u00e1 necesaria cuando se deseen realizar tests.</li> </ul> <p>Como vimos antes hay m\u00e1s scopes.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/#seccion-build","title":"Secci\u00f3n <code>build</code>","text":"<p>Esta es la secci\u00f3n dedicada a indicar c\u00f3mo se debe construir el proyecto. En esta secci\u00f3n se pueden definir los plugins que se utilizar\u00e1n para construir el proyecto.</p>"},{"location":"ED/UD%202%20-%20Instalaci%C3%B3n%20y%20uso%20de%20entornos%20de%20desarrollo/Maven/Apuntes%20de%20maven/#seccion-plugins","title":"Secci\u00f3n plugins","text":"<p>Los plugins son elementos que a\u00f1aden funcionalidades a Maven, principalmente para compilar y probar el proyecto pero tambi\u00e9n para generar documentaci\u00f3n, informes, etc. Los plugins se definen dentro de la etiqueta <code>&lt;plugins&gt;</code> y cada plugin se define mediante la etiqueta <code>&lt;plugin&gt;</code>.</p> <p>Los arquetipos disponibles se encuentran en el repositorio central de Maven. Podemos buscar arquetipos en el repositorio central de Maven en la siguiente direcci\u00f3n: https://repo.maven.apache.org/maven2/archetype-catalog.xml.</p>"},{"location":"ED/UD%203%20-%20Dise%C3%B1o%20y%20realizaci%C3%B3n%20de%20pruebas/Introducci%C3%B3n/","title":"Introducci\u00f3n","text":"<ul> <li>Depuraci\u00f3n de c\u00f3digo debugger</li> <li>Flujo de ejecuci\u00f3n</li> </ul> <p>Tema 3.1 Dise\u00f1o y Realizaci\u00f3n de Pruebas.</p> <p>En este tema aprenderemos a utilizar herramientas de depuraci\u00f3n definiendo punto de ruptura y examinando variables durante la ejecuci\u00f3n del programa. Conoceremos la importancia de la realizaci\u00f3n de pruebas, durante el proceso de desarrollo de software. Aprenderemos los distintos tipos de pruebas, y los mecanismos para la elaboraci\u00f3n de casos de prueba. Asimismo, conoceremos las herramientas que incorporan los entornos de desarrollo actuales, para la depuraci\u00f3n y realizaci\u00f3n de pruebas de software.</p>"},{"location":"ED/UD%203%20-%20Dise%C3%B1o%20y%20realizaci%C3%B3n%20de%20pruebas/Introducci%C3%B3n/#depuracion-de-codigo-debugger","title":"Depuraci\u00f3n de c\u00f3digo debugger","text":""},{"location":"ED/UD%203%20-%20Dise%C3%B1o%20y%20realizaci%C3%B3n%20de%20pruebas/Introducci%C3%B3n/#flujo-de-ejecucion","title":"Flujo de ejecuci\u00f3n","text":"<p>La depuraci\u00f3n de c\u00f3digo es un proceso que consiste en identificar y corregir errores en el c\u00f3digo fuente.</p>"},{"location":"ED/UD%204%20-%20Optimizaci%C3%B3n%20y%20documentaci%C3%B3n/Notaci%C3%B3n%20Big-O/","title":"Notaci\u00f3n Big-O","text":"<ul> <li>\u00bfQu\u00e9 es la notaci\u00f3n Big-O?</li> <li>Forma de expresar la notaci\u00f3n Big-O</li> <li>Ejemplos</li> <li>Constante $O(1)$</li> <li>Lineal $O(n)$</li> <li>Cuadr\u00e1tico $O(n^2)$</li> </ul>"},{"location":"ED/UD%204%20-%20Optimizaci%C3%B3n%20y%20documentaci%C3%B3n/Notaci%C3%B3n%20Big-O/#que-es-la-notacion-big-o","title":"\u00bfQu\u00e9 es la notaci\u00f3n Big-O?","text":"<p>La notaci\u00f3n Big-O es una forma de expresar la complejidad de un algoritmo. Representa la relaci\u00f3n entre el tiempo que tarda en ejecutarse un algoritmo respecto al tama\u00f1o de la entrada.</p> <p>Lo normal es que el tiempo que tarda un algoritmo crezca seg\u00fan lo hace el tama\u00f1o de la entrada. Este crecimiento puede ser lineal, cuadr\u00e1tico, logar\u00edtmico, exponencial, etc. La notaci\u00f3n Big-O nos permite clasificar los algoritmos en funci\u00f3n de c\u00f3mo crece el tiempo de ejecuci\u00f3n respecto al tama\u00f1o de la entrada.</p>"},{"location":"ED/UD%204%20-%20Optimizaci%C3%B3n%20y%20documentaci%C3%B3n/Notaci%C3%B3n%20Big-O/#forma-de-expresar-la-notacion-big-o","title":"Forma de expresar la notaci\u00f3n Big-O","text":"<p>La notaci\u00f3n Big-O se expresa como:</p> Crecimiento notaci\u00f3n x-y Notaci\u00f3n Big-O Constante y = constante O(1) Lineal y = x O(n) Cuadr\u00e1tico y = x^2^ O(n^2^) Logar\u00edtmico y = log(n) O(log n) Exponencial y O(2^n^)"},{"location":"ED/UD%204%20-%20Optimizaci%C3%B3n%20y%20documentaci%C3%B3n/Notaci%C3%B3n%20Big-O/#ejemplos","title":"Ejemplos","text":""},{"location":"ED/UD%204%20-%20Optimizaci%C3%B3n%20y%20documentaci%C3%B3n/Notaci%C3%B3n%20Big-O/#constante-o1","title":"Constante $O(1)$","text":"<p>Un ejemplo de algoritmo de velocidad constante es de eliminar un elemento de un extremo de un array, o insertar o eliminar un elemento de una lista enlazada.</p>"},{"location":"ED/UD%204%20-%20Optimizaci%C3%B3n%20y%20documentaci%C3%B3n/Notaci%C3%B3n%20Big-O/#lineal-on","title":"Lineal $O(n)$","text":"<p>El algoritmo de b\u00fasqueda de un elemento en un array es lineal, ya que en el peor de los casos tendr\u00e1 que recorrer todos los elementos del array.</p> <pre><code>arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\ndef buscar_elemento(arr, elemento):\n    for i in range(len(arr)):\n        if arr[i] == elemento:\n            return i\n    return -1\n</code></pre>"},{"location":"ED/UD%204%20-%20Optimizaci%C3%B3n%20y%20documentaci%C3%B3n/Notaci%C3%B3n%20Big-O/#cuadratico-on2","title":"Cuadr\u00e1tico $O(n^2)$","text":"<p>El ejemplo t\u00edpico de algoritmos de complejidad cuadr\u00e1tica son aquellos que tiene bucles anidados. Aunque puede darse el caso de que un bucle anidado no sea siempre cuadr\u00e1tico.</p> <p>```pytho</p>"},{"location":"ED/UD%205%20-%20Dise%C3%B1o%20orientado%20a%20objetos.%20Diagramas%20estructurales/Introducci%C3%B3n/","title":"Introducci\u00f3n a la programaci\u00f3n orientada a objetos","text":""},{"location":"ED/UD%205%20-%20Dise%C3%B1o%20orientado%20a%20objetos.%20Diagramas%20estructurales/Introducci%C3%B3n/#paradigma","title":"Paradigma","text":"<p>El paradigma de programaci\u00f3n orientada interpreta la realidad como un conjunto de objetos que interact\u00faan entre s\u00ed. Cada objeto tiene su propio estado y comportamiento al que podemos acceder a trav\u00e9s de m\u00e9todos.</p> <p>Las ideas fundamentales de la programaci\u00f3n orientada a objetos son:</p> <ul> <li>Abstracci\u00f3n</li> <li>Encapsulamiento</li> <li>Polimorfismo</li> <li>Herencia</li> <li>Reutilizaci\u00f3n</li> </ul>"},{"location":"GBD/Introducci%C3%B3n/","title":"La introducci\u00f3n de la asignatura de GBD","text":""},{"location":"GBD/Notificaci%C3%B3n%20primera%20eval/","title":"Sobre la primera evaluaci\u00f3n","text":""},{"location":"GBD/Notificaci%C3%B3n%20primera%20eval/#contenido","title":"Contenido","text":"<p>El contenido de la primera evaluaci\u00f3n abarcar\u00e1 las tres primeras unidades did\u00e1cticas de la plataforma online. Estas unidades se corresponden con las unidades de la uno a la cuatro de la programaci\u00f3n.</p> <p>La unidad 4 de la plataforma engloba las unidades 2 y 3 de la programaci\u00f3n.</p> <ul> <li>UD1: Sistema de almacenamiento de la informaci\u00f3n.</li> <li>UD2: Modelo entidad-relaci\u00f3n.</li> <li>UD3: Modelo relacional.</li> <li>UD4: Dise\u00f1o f\u00edsico de la base de datos: Creaci\u00f3n de la base de datos utilizando asistentes, herramientas gr\u00e1ficas y DDL (lenguaje de definici\u00f3n de datos).</li> </ul>"},{"location":"GBD/Notificaci%C3%B3n%20primera%20eval/#aclaraciones","title":"Aclaraciones","text":"<p>En el examen no se exigir\u00e1 la creaci\u00f3n de diagrams de entidad-relaci\u00f3n. S\u00ed se exigir\u00e1 la comprensi\u00f3n de los mismos y la creaci\u00f3n de tablas a partir de ellos. Tambi\u00e9n podr\u00e1 haber alg\u00fan ejercicio que pida la correcci\u00f3n de un diagrama a partir de una descripci\u00f3n textual y viceversa.</p>"},{"location":"GBD/Sobre%20SQLite/","title":"Cosas sobre SQLite","text":""},{"location":"GBD/Sobre%20SQLite/#conceptos-interesantes","title":"Conceptos interesantes","text":"<p>Serverless database </p> <p>Per-user database</p> <p>File-based database</p> <p>fuzz testing</p> <p>Simulation testing / TygerBeetle / DST (Deterministic Simulation Testing)</p>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%201/","title":"Soluci\u00f3n Tarea 1 UD2 - Apartado 1","text":""},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%201/#enunciado-apartado-1","title":"Enunciado Apartado 1","text":"<p>Siguiendo con el caso pr\u00e1ctico que venimos analizando a lo largo de la unidad vamos a ayudar a Alejandra a establecer un modelo l\u00f3gico que recoja el funcionamiento de talleres FABER, un taller mec\u00e1nico que organiza su actividad de la siguiente forma:</p> <ul> <li>Una serie de clientes traen sus veh\u00edculos a reparar. En el momento en que llega un cliente nuevo le recibe un empleado de la administraci\u00f3n quien registra la informaci\u00f3n necesaria del cliente, del veh\u00edculo y de la posible aver\u00eda.</li> <li>Con estos datos se imprime una orden de reparaci\u00f3n que se coloca en un tablero donde el jefe de los mec\u00e1nicos se la adjudica a un empleado para que efect\u00fae la reparaci\u00f3n, entreg\u00e1ndole una copia de la misma.</li> <li>En esta hoja cada mec\u00e1nico a\u00f1ade manualmente todas las actuaciones que ha llevado a cabo y el tiempo empleado y las piezas sustituidas.</li> <li>Una vez finalizada la reparaci\u00f3n el empleado entrega la orden a la administraci\u00f3n del taller donde se traslada esta informaci\u00f3n al ordenador.</li> <li>Cuando viene el cliente a retirar su veh\u00edculo se prepara la factura que recoge todas las actuaciones que se han llevado a cabo, su precio y el importe.</li> </ul> <p>Los datos que ser\u00e1 necesario recoger en nuestra base de datos son:</p> <ul> <li>Datos del cliente: DNI, Apellidos, Nombre, Direcci\u00f3n y Tel\u00e9fono. Se le asigna adem\u00e1s un C\u00f3digo de Cliente.</li> <li>Datos del veh\u00edculo: Matr\u00edcula, Marca, Modelo, Color y la Fecha de matriculaci\u00f3n.</li> <li>Datos previos, relativos a la reparaci\u00f3n que se quiere efectuar que son:</li> <li>Fecha de la entrada</li> <li>Los km que tiene el coche.</li> <li>La descripci\u00f3n de la posible aver\u00eda</li> </ul> <p>Una vez efectuada la reparaci\u00f3n se a\u00f1ade lo siguiente:</p> <ul> <li>Fecha de finalizaci\u00f3n</li> <li>Horas totales empleadas en la reparaci\u00f3n.</li> <li>Si est\u00e1 reparado o no</li> <li>Las observaciones que se consideren necesarias</li> </ul> <p>Adem\u00e1s se necesita saber para cada reparaci\u00f3n:</p> <ul> <li>Empleados que han intervenido y las horas que interviene cada uno. Los datos de los empleados que est\u00e1n registrados en nuestro taller son: DNI, Nombre, Apellidos, Direcci\u00f3n, Tel\u00e9fono, CP, Fecha de alta y Categor\u00eda. La empresa a\u00f1ade un C\u00f3digo de empleado.</li> <li>Actuaciones que se han llevado a cabo y el tiempo empleado en cada una de ellas. Se recoge una descripci\u00f3n de las actuaciones que se pueden llevar a cabo: Referencia, Descripci\u00f3n (por ejemplo sustituir bater\u00eda, etc.), tiempo estimado y precio.</li> <li>Recambios y piezas que se han sustituido y las unidades. Para ello guardamos en una tabla una lista de los recambios que se pueden sustituir: c\u00f3digo, descripci\u00f3n, unidad base (por ejemplo cajas de 2 l\u00e1mparas, etc.), stock y precio de referencia.</li> <li>Finalmente para elaborar la factura se necesita incluir en el encabezado: Numero de factura y fecha de la factura. El resto de los datos de la factura se obtendr\u00e1n a partir del los que ya hemos recogido en la reparaci\u00f3n.</li> </ul> <p>Se pide:</p> <ul> <li>Obtener el modelo Entidad-Relaci\u00f3n: Entidades, relaciones, atributos, claves principales, cardinalidades, tipos de correspondencia, etc.</li> <li>Obtener el modelo Relacional: pasar del modelo entidad-relaci\u00f3n al modelo relacional aplicando correctamente las reglas de transformaci\u00f3n, justificando la soluci\u00f3n elegida cuando se considere necesario.</li> </ul>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%201/#solucion","title":"Soluci\u00f3n","text":""},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%201/#entidades-y-atributos","title":"Entidades y atributos","text":"<ul> <li>Cliente: C\u00f3digoCliente, DNI, Apellidos, Nombre, Direcci\u00f3n, Tel\u00e9fono.</li> <li>Veh\u00edculo: Matr\u00edcula, Marca, Modelo, Color, Fecha de matriculaci\u00f3n, Km.</li> <li>OrdenReparaci\u00f3n: C\u00f3digoReparaci\u00f3n, Fecha de entrada, Fecha de finalizaci\u00f3n, Descripci\u00f3n de la aver\u00eda, Horas totales, Reparado, Observaciones.</li> <li>Empleado: C\u00f3digoCliente, DNI, Nombre, Apellidos, Direcci\u00f3n, Tel\u00e9fono, CP, Fecha de alta, Categor\u00eda.</li> <li>Actuaci\u00f3n: Referencia, Descripci\u00f3n, Tiempo estimado, Precio.</li> <li>Recambio: C\u00f3digoRecambio, Descripci\u00f3n, Unidad base, Stock, Precio de referencia.</li> </ul>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%201/#relaciones","title":"Relaciones","text":""},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%201/#opcion-a","title":"Opci\u00f3n a","text":"<ul> <li>Cliente - Veh\u00edculo: Un cliente puede tener uno o m\u00e1s veh\u00edculos y un veh\u00edculo pertencer\u00e1 a un \u00fanico cliente.</li> <li>Veh\u00edculo - OrdenReparaci\u00f3n: Un veh\u00edculo puede tener una o m\u00e1s \u00f3rdenes de reparaci\u00f3n y una orden de reparaci\u00f3n pertenece a un \u00fanico veh\u00edculo.</li> <li>OrdenReparaci\u00f3n - Empleado: Un empleado interviene en distintas reparaciones a lo largo del tiempo y en una misma reparaci\u00f3n intervienen uno o m\u00e1s empleados.</li> <li>OrdenReparaci\u00f3n - Actuaci\u00f3n: Una orden de reparaci\u00f3n puede tener una o m\u00e1s actuaciones y una actuaci\u00f3n puede estar en una o m\u00e1s \u00f3rdenes de reparaci\u00f3n.</li> <li>OrdenReparaci\u00f3n - Recambio: Una orden de reparaci\u00f3n puede tener uno o m\u00e1s recambios y un recambio puede estar en una o m\u00e1s \u00f3rdenes de reparaci\u00f3n.</li> <li>OrdenReparaci\u00f3n - Factura: Una orden de reparaci\u00f3n genera una factura y una factura pertenece a una \u00fanica orden de reparaci\u00f3n.</li> </ul>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%201/#opcion-b","title":"Opci\u00f3n b","text":"<ul> <li>Cliente - Veh\u00edculo: Un cliente puede tener uno o m\u00e1s veh\u00edculos y un veh\u00edculo pertencer\u00e1 a un \u00fanico cliente.</li> <li>Veh\u00edculo - OrdenReparaci\u00f3n: Un veh\u00edculo puede tener una o m\u00e1s \u00f3rdenes de reparaci\u00f3n y una orden de reparaci\u00f3n pertenece a un \u00fanico veh\u00edculo.</li> <li>OrdenReparaci\u00f3n - Actuaci\u00f3n: Una orden de reparaci\u00f3n puede tener una o m\u00e1s actuaciones y una actuaci\u00f3n puede estar en una o m\u00e1s \u00f3rdenes de reparaci\u00f3n.</li> <li>Actuaci\u00f3n - Empleado: Un empleado puede realizar una o m\u00e1s actuaciones (empleando un tiempo) para cada orden de reparaci\u00f3n y una actuaci\u00f3n puede ser realizad un \u00fanico empleado.</li> <li>Actuaci\u00f3n - Recambio: Una actuaci\u00f3n puede requerir uno o m\u00e1s recambios y un recambio puede estar en una o m\u00e1s actuaciones (para cada orden de reparaci\u00f3n).</li> <li>OrdenReparaci\u00f3n - Factura: Una orden de reparaci\u00f3n genera una factura y una factura pertenece a una \u00fanica orden de reparaci\u00f3n.</li> </ul>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%201/#diagrama-entidad-relacion-relacional","title":"Diagrama Entidad-Relaci\u00f3n / Relacional","text":""},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%201/#diagrama-de-la-opcion-a","title":"Diagrama de la opci\u00f3n a","text":"<pre><code>erDiagram\n\nCliente {\n  int codigoCliente pk\n  string dni\n  string apellidos\n  string nombre\n  string direccion\n  int telefono\n}\n\nVehiculo {\n  string matricula pk\n  string marca\n  string modelo\n  string color\n  date fechaMatriculacion\n  int km\n}\n\nEmpleado {\n  int codigoEmpleado pk\n  string dni\n  string nombre\n  string apellidos\n  string direccion\n  int telefono\n  int cp\n  date fechaAlta\n  enum categoria\n}\n\nOrdenReparacion {\n  int codigoReparacion pk\n  date fechaEntrada\n  date fechaFinalizacion\n  string descripcionAveria\n  int horasTotales\n  boolean reparado\n  string observaciones\n}\n\nReparacionEmpleado {\n  int codigoReparacion pk, fk\n  int codigoEmpleado pk, fk\n  int horas\n}\n\nReparacionActuacion {\n  int codigoReparacion pk, fk\n  int referencia pk, fk\n  int tiempoEmpleado\n}\n\nReparacionRecambio {\n  int codigoReparacion pk, fk\n  int codigoRecambio pk, fk\n  int unidades\n}\n\nActuacion {\n  int referencia pk\n  string descripcion\n  int tiempoEstimado\n  float precio\n}\n\nRecambio {\n  int codigoRecambio pk\n  string descripcion\n  string unidadBase\n  int stock\n  float precioReferencia\n}\n\nFactura {\n  int numeroFactura pk\n  date fechaFactura\n  int codigoReparacion fk\n}\n\nOrdenReparacion ||--|| Factura : \"genera\"\n\nCliente ||--|{ Vehiculo : \"tiene\"\nVehiculo ||--|{ OrdenReparacion : \"necesita\"\nOrdenReparacion ||--|{ ReparacionEmpleado : \"interviene\"\n\nEmpleado ||--|{ ReparacionEmpleado : \"interviene\"\nOrdenReparacion ||--|{ ReparacionActuacion : \"necesita\"\nActuacion ||--|{ ReparacionActuacion : \"necesita\"\nOrdenReparacion ||--o{ ReparacionRecambio : \"utiliza\"\nRecambio ||--|{ ReparacionRecambio : \"utiliza\"</code></pre>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%201/#diagrama-de-la-opcion-b","title":"Diagrama de la opci\u00f3n b","text":"<pre><code>erDiagram\n\nCliente {\n  int codigoCliente pk\n  string dni\n  string apellidos\n  string nombre\n  string direccion\n  int telefono\n}\n\nVehiculo {\n  string matricula pk\n  string marca\n  string modelo\n  string color\n  date fechaMatriculacion\n  int km\n}\n\nEmpleado {\n  int codigoEmpleado pk\n  string dni\n  string nombre\n  string apellidos\n  string direccion\n  int telefono\n  int cp\n  date fechaAlta\n  enum categoria\n}\n\nOrdenReparacion {\n  int codigoReparacion pk\n  date fechaEntrada\n  date fechaFinalizacion\n  string descripcionAveria\n  int horasTotales\n  boolean reparado\n  string observaciones\n}\n\nReparacionActuacionEmpleado {\n  int id pk\n  int codigoReparacion fk\n  int referencia fk\n  int codigoEmpleado fk\n  int tiempoEmpleado\n}\n\nREACEMRecambio{\n  int idRAE pk\n  int codigoRecambio fk\n  int unidades\n}\n\nActuacion {\n  int referencia pk\n  string descripcion\n  int tiempoEstimado\n  float precio\n}\n\nRecambio {\n  int codigoRecambio pk\n  string descripcion\n  string unidadBase\n  int stock\n  float precioReferencia\n}\n\nFactura {\n  int numeroFactura pk\n  date fechaFactura\n  int codigoReparacion fk\n}\n\nOrdenReparacion ||--|| Factura : \"genera\"\n\nCliente ||--|{ Vehiculo : \"tiene\"\nVehiculo ||--|{ OrdenReparacion : \"necesita\"\n\nOrdenReparacion ||--|{ ReparacionActuacionEmpleado : \"necesita\"\nEmpleado ||--|{ ReparacionActuacionEmpleado : \"realiza\"\nActuacion ||--|{ ReparacionActuacionEmpleado : \"necesita\"\nReparacionActuacionEmpleado ||--o{ REACEMRecambio: \"utiliza\"\nRecambio ||--|{ REACEMRecambio: \"utiliza\"</code></pre>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%202/","title":"Soluci\u00f3n a la tarea 1 - Apartado 2","text":""},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%202/#enunciado","title":"Enunciado","text":"<ul> <li>Enunciado del segundo apartado</li> <li>Soluci\u00f3n</li> <li>Paso a 1FN</li> <li>Paso a 2FN</li> <li>Paso a 3FN</li> </ul>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%202/#enunciado-del-segundo-apartado","title":"Enunciado del segundo apartado","text":"<p>Normaliza la siguiente relaci\u00f3n hasta 3FN, analizando las dependencias entre los atributos:</p> <p>PEDIDO (NumPedido, FechaPedido, CodProveedor, NombreProveedor, Direcci\u00f3nProveedor, CodProducto, NombreProducto, PrecioProducto, Cantidad)</p> <ul> <li>Recoge los datos de los pedidos a los proveedores.</li> <li>Cada producto lo puede suministrar m\u00e1s de un proveedor.</li> <li>Cada pedido incluye varios productos.</li> </ul>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%202/#solucion","title":"Soluci\u00f3n","text":""},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%202/#paso-a-1fn","title":"Paso a 1FN","text":"<p>Podemos ver que en la tabla:</p> <p>Seg\u00fan lo indicado en la teor\u00eda:</p> <p>Una tabla est\u00e1 en Primera Forma Normal (1FN) s\u00ed, y s\u00f3lo s\u00ed, todos los atributos de la misma contienen valores at\u00f3micos, es decir, que cada atributo debe contener un \u00fanico valor del dominio.</p> <p>Veamos ahora la tabla:</p> <p>PEDIDO (NumPedido, FechaPedido, CodProveedor, NombreProveedor, Direcci\u00f3nProveedor, CodProducto, NombreProducto, PrecioProducto, Cantidad)</p> <p>Podr\u00edamos interpretar que la direcci\u00f3n es un atributo compuesto o at\u00f3mico. Si lo tomamos como compuesto simplemente habr\u00eda que descomponerlo en sus elementos y ya estar\u00eda en 1FN.</p> <p>OJO: La clave primaria aqu\u00ed ser\u00eda la combinaci\u00f3n de TODOS los campos de la tabla. Ya que se nos indica que cada pedido incluye varios productos y cada producto puede ser suministrado por m\u00e1s de un proveedor.</p>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%202/#paso-a-2fn","title":"Paso a 2FN","text":"<p>Volviendo a los apuntes:</p> <p>Una tabla est\u00e1 en segunda forma normal o 2FN cuando est\u00e1 en 1FN y adem\u00e1s todos los atributos que no forman parte de la clave principal tienen dependencia funcional completa de la clave y no de parte de ella. Es obvio que una tabla que est\u00e9 en 1FN y cuya clave est\u00e9 compuesta por un \u00fanico atributo, estar\u00e1 en 2FN.</p> <p>En nuestra tabla en la que (en este momento) la clave primara es la combinaci\u00f3n de todo lo anterior no se cumple:</p> <ul> <li>FechaPedido depende \u00fanicamente de NumPedido.</li> <li>NombreProveedor y Direcci\u00f3nProveedor dependen de CodProveedor.</li> <li>NombreProducto y PrecioProducto dependen de CodProducto.</li> <li>Cantidad depende de NumPedido y CodProducto.</li> </ul> <p>As\u00ed que habr\u00eda que dividir la tabla en varias tablas:</p> <ul> <li>PEDIDO (NumPedido, FechaPedido).</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, Direcci\u00f3nProveedor).</li> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto).</li> <li>LINEA_PEDIDO (NumPedido, CodProducto, CodProveedor, Cantidad).</li> </ul> <p>Nota: Hemos de incluir CodProveedor en LINEA_PEDIDO porque un producto puede ser suministrado por varios proveedores y podr\u00eda cambiar en cada pedido.</p>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%202/#paso-a-3fn","title":"Paso a 3FN","text":"<p>Seg\u00fan los apuntes:</p> <p>Una tabla o relaci\u00f3n est\u00e1 en tercera forma normal o 3FN si est\u00e1 en 2FN y no existen atributos que no pertenezcan a la clave primaria que puedan ser conocidos mediante otro atributo que no forme parte de la clave primaria. Es decir, que no existan dependencias funcionales transitivas.</p> <p>En este punto no hay dependencias transitivas. La tabla ya est\u00e1 en 3FN.</p> <p>Si en el enunciado se nos hubiera indicado que un producto s\u00f3lo puede ser suministrado por un proveedor y partimos de:</p> <ul> <li>PEDIDO (NumPedido, FechaPedido).</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, Direcci\u00f3nProveedor).</li> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto).</li> <li>LINEA_PEDIDO (NumPedido, CodProducto, CodProveedor, Cantidad).</li> </ul> <p>Podemos ver que en l\u00ednea pedido CodProveedor depende de CodProducto y no de NumPedido (una dependencia funcional transitiva). Habr\u00eda que dividir la tabla en otras dos:</p> <ul> <li>LINEA_PEDIDO (NumPedido, CodProducto, Cantidad).</li> <li>PROVEEDOR_PRODUCTO (CodProducto, CodProveedor).</li> </ul>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%203/","title":"Soluci\u00f3n a la tarea 1 - Apartado 3","text":""},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%203/#enunciado","title":"Enunciado","text":"<p>Vamos a informatizar la gesti\u00f3n del Restaurante Mouro. Se trata de un restaurante de tres plantas, que ofrece distintos servicios a sus clientes. Inicialmente vamos a describir su funcionamiento:</p> <ul> <li>El restaurante tiene una serie de comedores, cada uno de ellos con un n\u00famero fijo de mesas disponibles. De cada comedor interesa: C\u00f3digo y nombre del comedor, capacidad m\u00e1xima de comensales, n\u00famero de mesas, localizaci\u00f3n. Por ejemplo: MA, es el sal\u00f3n \"Mar Abierto\", est\u00e1 en la planta baja, tiene 60 mesas y capacidad para 300 comensales</li> <li>En cada comedor hay una serie de mesas. De las mesas guardamos el n\u00famero de asientos y quien es el camarero que la atiende. Las mesas se numeran consecutivamente, de forma que ser\u00e1 necesario que se a\u00f1ada al propio c\u00f3digo el del comedor al que corresponden. Por ejemplo: MA, 01 es la mesa 1 del sal\u00f3n Mar Abierto.</li> <li>Los empleados realizan funciones distintas seg\u00fan sean personal de cocina, camareros o personal de administraci\u00f3n del negocio.</li> </ul> <p>De todos ellos recogemos la siguiente informaci\u00f3n: DNI, Nombre, Apellidos, Direcci\u00f3n, Ciudad, CP, tel\u00e9fono, Fecha de alta, Categor\u00eda y Salario.</p> <p>Cuando se trata de camareros queremos saber adem\u00e1s en que turno trabaja y los a\u00f1os de experiencia.</p> <p>De los cocineros necesitamos saber cu\u00e1l es su puesto en la cocina y su especialidad (carnes, pescados, postres, etc.)</p> <p>Del personal de administraci\u00f3n necesitamos conocer el cargo que tiene.</p> <p>No se da el caso de que una misma persona realice m\u00e1s de una funci\u00f3n. Existen, adem\u00e1s otras personas contratadas temporalmente como ayudantes que no se recogen en la anterior descripci\u00f3n.</p> <p>Entre los camareros existen una serie de encargados que supervisan a otros camareros.</p> <ul> <li>Para organizar mejor el trabajo se admiten reservas de los clientes. Cuando se recibe una llamada para hacer una reserva recogemos:</li> </ul> <p>N\u00famero de reserva, Fecha y hora de la reserva, Nombre de la persona que hace la reserva, la fecha y hora para la que se hace la reserva, si se trata de comida o cena , el n\u00famero de personas y otros datos que puedan ser de inter\u00e9s.</p> <p>Autom\u00e1ticamente se adjudican las mesas necesarias para cubrir la reserva a\u00f1adiendo el n\u00famero de personas que se sentar\u00e1n en cada mesa.</p> <ul> <li>En la carta se exponen una serie de platos de los cuales se guarda: Un c\u00f3digo, el nombre del plato, el tipo de plato (carnes, pescados, primeros, postres, etc.), una breve descripci\u00f3n y el precio.</li> <li>Para llevar mejor la gesti\u00f3n de las compras, de cada plato recogemos los productos o ingredientes que lo componen y en qu\u00e9 cantidad. De los productos guardamos: un c\u00f3digo, la descripci\u00f3n, el stock, la unidad-base (docenas, kg, litros, etc.), el precio por unidad y la categor\u00eda a la que pertenece.</li> <li>Mantenemos tambi\u00e9n informaci\u00f3n de los proveedores que nos suministran esos productos: C\u00f3digo, Nombre, Direcci\u00f3n, CP, Tel\u00e9fono, Fax, Persona de contacto</li> <li>Por \u00faltimo cuando nuestros clientes nos visitan tomamos nota manualmente de la comanda, y, una vez que hayan terminado realizamos la correspondiente factura que recoge en el encabezado el n\u00famero de factura, fecha y n\u00famero de mesa. A continuaci\u00f3n una relaci\u00f3n de los nombres de los platos, las unidades de cada plato, precio e importe (estos dos datos se obtienen de la informaci\u00f3n almacenada).</li> </ul> <p>Se pide:</p> <ul> <li>Obtener el modelo Entidad-Relaci\u00f3n: Entidades, relaciones, atributos, claves principales, cardinalidades, tipos de correspondencia, etc.</li> <li>Obtener el modelo Relacional: pasar del modelo entidad-relaci\u00f3n al modelo relacional aplicando correctamente las reglas de transformaci\u00f3n, justificando la soluci\u00f3n cuando se considere necesario.</li> </ul>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%203/#solucion","title":"Soluci\u00f3n","text":""},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%203/#entidades-y-atributos","title":"Entidades y atributos","text":"<ul> <li>COMEDOR (CodComedor, NombreComedor, CapacidadMaxima, NumMesas, Localizaci\u00f3n)</li> <li>MESA (NumMesa, CodComedor, NumAsientos, CodCamarero)</li> <li>EMPLEADO (DNI, Nombre, Apellidos, Direcci\u00f3n, Ciudad, CP, Tel\u00e9fono, FechaAlta, Categor\u00eda, Salario)</li> <li>CAMARERO (DNI, Turno, A\u00f1osExperiencia)</li> <li>COCINERO (DNI, Puesto, Especialidad)</li> <li>ADMINISTRATIVO (DNI, Cargo)</li> <li>RESERVA (NumReserva, FechaHoraReserva, NombreReserva, FechaHora, Tipo, NumPersonas, OtrosDatos)</li> <li>PLATO (CodPlato, NombrePlato, TipoPlato, Descripci\u00f3n, Precio)</li> <li>PRODUCTO (CodProducto, Descripci\u00f3n, Stock, UnidadBase, PrecioUnidad, Categor\u00eda)</li> <li>FACTURA (NumFactura, Fecha, NumMesa)</li> </ul>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%203/#relaciones","title":"Relaciones","text":"<ul> <li>La relaci\u00f3n entre COMEDOR y MESA es que un comedor tendr\u00e1 varias mesas y una mesa pertenecer\u00e1 a un comedor.</li> <li>Un EMPLEADO puede ser CAMARERO, COCINERO o ADMINISTRATIVO.</li> </ul>"},{"location":"GBD/Tareas/Tareas%20UD2/Tarea%201%20-%20Apartado%203/#diagrama-er-relacional","title":"Diagrama E/R / Relacional","text":"<pre><code>erDiagram\n\nCOMEDOR {\n  int CodComedor pk\n  string NombreComedor\n  int CapacidadMaxima\n  int NumMesas\n  string Localizacion\n}\n\nMESA {\n  int NumMesa pk\n  int CodComedor pk, fk\n  int NumAsientos\n  int CodCamarero\n}\n\nEMPLEADO {\n  string DNI pk\n  string Nombre\n  string Apellidos\n  string Direccion\n  string Ciudad\n  string CP\n  string Telefono\n  date FechaAlta\n  string Categoria\n  float Salario\n}\n\nCAMARERO {\n  string DNI pk, fk\n  string Turno\n  int AnosExperiencia\n}\n\nCOCINERO {\n  string DNI pk, fk\n  string Puesto\n  string Especialidad\n}\n\nADMINISTRATIVO {\n  string DNI pk, fk\n  string Cargo\n}\n\nFACTURA {\n  int NumFactura pk\n  date Fecha\n  int NumMesa\n}\n\nRESERVA_MESA {\nint NumReserva pk, fk\nint NumMesa pk, fk\n}\n\nRESERVA {\n  int NumReserva pk\n  date FechaHoraReserva\n  string NombreReserva\n  date FechaHora\n  string Tipo\n  int NumPersonas\n  string OtrosDatos\n}\n\nPLATO {\n  int CodPlato pk\n  string NombrePlato\n  string TipoPlato\n  string Descripcion\n  float Precio\n}\n\nPRODUCTO {\n  int CodProducto pk\n  string Descripcion\n  int Stock\n  string UnidadBase\n  float PrecioUnidad\n  string Categoria\n}\n\nPROVEEDOR {\n  int CodProveedor pk\n  string Nombre\n  string Direccion\n  string CP\n  string Telefono\n  string Fax\n  string PersonaContacto\n}\n\nPLATO_PRODUCTO {\n  int CodPlato pk, fk\n  int CodProducto pk, fk\n  int Cantidad\n}\n\n\nPRODUCTO_PROVEEDOR {\n  int CodProducto pk, fk\n  int CodProveedor pk, fk\n}\n\n\n\n\nFACTURA_PLATO {\n  int NumFactura pk, fk\n  int CodPlato pk, fk\n  int Cantidad\n}\n\nPRODUCTO_PROVEEDOR }|--|| PRODUCTO : \"Suministrado por\"\nPRODUCTO_PROVEEDOR }|--|| PROVEEDOR : \"Suministra\"\n\nRESERVA_MESA }|--|| MESA : \"Asignada a\"\nRESERVA_MESA }|--|| RESERVA : \"Asignada a\"\n\nPLATO_PRODUCTO }|--|| PLATO : \"Incluye\"\nPLATO_PRODUCTO }|--|| PRODUCTO : \"Compuesto por\"\n\nFACTURA_PLATO }|--|| PLATO : \"Incluye\"\nFACTURA_PLATO }|--|| FACTURA : \"Asignada a\"\n\nFACTURA }|--|| MESA : \"Genera\"\n\nEMPLEADO ||--|{ CAMARERO : \"Es\"\nEMPLEADO ||--|{ COCINERO : \"Es\"\nEMPLEADO ||--|{ ADMINISTRATIVO : \"Es\"\n\nCOMEDOR||--|{ MESA : \"Tiene\"\n\nMESA }|--|| CAMARERO : \"Atiende\"\n\n</code></pre>"},{"location":"GBD/Tareas/Tareas%20UD2/Tareas/","title":"Tareas UD2","text":"<ul> <li>Tarea 1</li> <li>Enunciado apartado 1<ul> <li>Entidades</li> <li>Relaciones</li> <li>Diagrama Entidad-Relaci\u00f3n / Relacional</li> <li>Opci\u00f3n A</li> <li>Opci\u00f3n B</li> </ul> </li> <li>Enunciado apartado 2</li> <li>Enunciado apartado 3</li> </ul>"},{"location":"GBD/Tareas/Tareas%20UD2/Tareas/#tarea-1","title":"Tarea 1","text":""},{"location":"GBD/Tareas/Tareas%20UD2/Tareas/#enunciado-apartado-1","title":"Enunciado apartado 1","text":"<p>Siguiendo con el caso pr\u00e1ctico que venimos analizando a lo largo de la unidad vamos a ayudar a Alejandra a establecer un modelo l\u00f3gico que recoja el funcionamiento de talleres FABER, un taller mec\u00e1nico que organiza su actividad de la siguiente forma:</p> <ul> <li>Una serie de clientes traen sus veh\u00edculos a reparar. En el momento en que llega un cliente nuevo le recibe un empleado de la administraci\u00f3n quien registra la informaci\u00f3n necesaria del cliente, del veh\u00edculo y de la posible aver\u00eda.</li> <li>Con estos datos se imprime una orden de reparaci\u00f3n que se coloca en un tablero donde el jefe de los mec\u00e1nicos se la adjudica a un empleado para que efect\u00fae la reparaci\u00f3n, entreg\u00e1ndole una copia de la misma.</li> <li>En esta hoja cada mec\u00e1nico a\u00f1ade manualmente todas las actuaciones que ha llevado a cabo y el tiempo empleado y las piezas sustituidas.</li> <li>Una vez finalizada la reparaci\u00f3n el empleado entrega la orden a la administraci\u00f3n del taller donde se traslada esta informaci\u00f3n al ordenador.</li> <li>Cuando viene el cliente a retirar su veh\u00edculo se prepara la factura que recoge todas las actuaciones que se han llevado a cabo, su precio y el importe.</li> </ul> <p>Los datos que ser\u00e1 necesario recoger en nuestra base de datos son:</p> <ul> <li>Datos del cliente: DNI, Apellidos, Nombre, Direcci\u00f3n y Tel\u00e9fono. Se le asigna adem\u00e1s un C\u00f3digo de Cliente.</li> <li>Datos del veh\u00edculo: Matr\u00edcula, Marca, Modelo, Color y la Fecha de matriculaci\u00f3n.</li> <li>Datos previos, relativos a la reparaci\u00f3n que se quiere efectuar que son:</li> <li>Fecha de la entrada</li> <li>Los km que tiene el coche.</li> <li>La descripci\u00f3n de la posible aver\u00eda</li> </ul> <p>Una vez efectuada la reparaci\u00f3n se a\u00f1ade lo siguiente:</p> <ul> <li>Fecha de finalizaci\u00f3n</li> <li>Horas totales empleadas en la reparaci\u00f3n.</li> <li>Si est\u00e1 reparado o no</li> <li>Las observaciones que se consideren necesarias</li> </ul> <p>Adem\u00e1s se necesita saber para cada reparaci\u00f3n:</p> <ul> <li>Empleados que han intervenido y las horas que interviene cada uno. Los datos de los empleados que est\u00e1n registrados en nuestro taller son: DNI, Nombre, Apellidos, Direcci\u00f3n, Tel\u00e9fono, CP, Fecha de alta y Categor\u00eda. La empresa a\u00f1ade un C\u00f3digo de empleado.</li> <li>Actuaciones que se han llevado a cabo y el tiempo empleado en cada una de ellas. Se recoge una descripci\u00f3n de las actuaciones que se pueden llevar a cabo: Referencia, Descripci\u00f3n (por ejemplo sustituir bater\u00eda, etc.), tiempo estimado y precio.</li> <li>Recambios y piezas que se han sustituido y las unidades. Para ello guardamos en una tabla una lista de los recambios que se pueden sustituir: c\u00f3digo, descripci\u00f3n, unidad base (por ejemplo cajas de 2 l\u00e1mparas, etc.), stock y precio de referencia.</li> <li>Finalmente para elaborar la factura se necesita incluir en el encabezado: Numero de factura y fecha de la factura. El resto de los datos de la factura se obtendr\u00e1n a partir del los que ya hemos recogido en la reparaci\u00f3n.</li> </ul> <p>Se pide:</p> <ul> <li>Obtener el modelo Entidad-Relaci\u00f3n: Entidades, relaciones, atributos, claves principales, cardinalidades, tipos de correspondencia, etc.</li> <li>Obtener el modelo Relacional: pasar del modelo entidad-relaci\u00f3n al modelo relacional aplicando correctamente las reglas de transformaci\u00f3n, justificando la soluci\u00f3n elegida cuando se considere necesario.</li> </ul>"},{"location":"GBD/Tareas/Tareas%20UD2/Tareas/#entidades","title":"Entidades","text":"<ul> <li>Cliente: (C\u00f3digoCliente, DNI, Apellidos, Nombre, Direcci\u00f3n, Tel\u00e9fono).</li> <li>Veh\u00edculo: (Matr\u00edcula, Marca, Modelo, Color, Fecha de matriculaci\u00f3n.).</li> <li>Orden de reparaci\u00f3n: ( FechaEntrada, Km, Descripci\u00f3nAver\u00eda, FechaFinalizaci\u00f3n, HorasTotales, Reparado, Observaciones).</li> <li>Empleado: (C\u00f3digoEmpleado, DNI, Nombre, Apellidos, Direcci\u00f3n, Tel\u00e9fono, CP, FechaAlta, Categor\u00eda).</li> <li>Actuaciones: (Referencia, Descripci\u00f3n, TiempoEstimado, Precio).</li> <li>Recambios: (C\u00f3digo, Descripci\u00f3n, UnidadBase, Stock, PrecioReferencia).</li> <li>Factura: (N\u00fameroFactura, FechaFactura).</li> </ul>"},{"location":"GBD/Tareas/Tareas%20UD2/Tareas/#relaciones","title":"Relaciones","text":"<ul> <li>Cliente \u2192 Veh\u00edculo: Un cliente tendr\u00e1 uno o m\u00e1s veh\u00edculos. Podemos razonar que un veh\u00edculo, a lo largo del tiempo (distintas fechas), puede pertenecer a diferentes clientes.</li> <li>Cliente \u2192 Factura: Un cliente tendr\u00e1 una o m\u00e1s facturas. Y una factura pertenecer\u00e1 a un solo cliente.</li> <li> <p>Veh\u00edculo \u2192 Orden de reparaci\u00f3n: Un veh\u00edculo tendr\u00e1 una o m\u00e1s \u00f3rdenes de reparaci\u00f3n. Y una orden de reparaci\u00f3n pertenecer\u00e1 a un solo veh\u00edculo.</p> </li> <li> <p>Relaci\u00f3n entre Empelado y Orden de reparaci\u00f3n: Podemos verlo de dos formas:</p> </li> <li>Opci\u00f3n A: Varios empelados intervendr\u00e1n en una (o m\u00e1s) orden(es) de reparaci\u00f3n. Relaci\u00f3n de muchos a muchos.<ul> <li>Empleado \u2192 Orden de reparaci\u00f3n: Un empleado intervendr\u00e1 en una o m\u00e1s \u00f3rdenes de reparaci\u00f3n. Y una orden de reparaci\u00f3n tendr\u00e1 uno o m\u00e1s empleados.</li> <li>Orden de reparaci\u00f3n \u2192 Recambio: Una orden de reparaci\u00f3n tendr\u00e1 uno o m\u00e1s recambios. Y un recambio se utilizar\u00e1 en cero o m\u00e1s \u00f3rdenes de reparaci\u00f3n.</li> </ul> </li> <li> <p>Opci\u00f3n B: Un empleado intervendr\u00e1 en una o m\u00e1s actuaciones para completar una Orden de reparaci\u00f3n. Relaci\u00f3n de muchos a muchos.</p> <ul> <li>Empleado \u2192 Actuaci\u00f3n: Un empleado intervendr\u00e1 en una o m\u00e1s actuaciones. Y una actuaci\u00f3n de la orden tendr\u00e1 un solo empleado.</li> <li>Actuaci\u00f3n \u2192 Orden de reparaci\u00f3n: Una actuaci\u00f3n aparecer\u00e1 en una o m\u00e1s \u00f3rdenes de reparaci\u00f3n. Y una orden de reparaci\u00f3n tendr\u00e1 una o m\u00e1s actuaciones.</li> <li>Actuaci\u00f3n \u2192 Recambio: Una actuaci\u00f3n necesitar\u00e1 uno o m\u00e1s recambios. Y un recambio se utilizar\u00e1 en una o m\u00e1s actuaciones.</li> </ul> </li> <li> <p>Orden de reparaci\u00f3n \u2192 Factura: Una orden de reparaci\u00f3n tendr\u00e1 una factura. Y una factura pertenecer\u00e1 a una orden de reparaci\u00f3n. Relaci\u00f3n de uno a uno.</p> </li> </ul>"},{"location":"GBD/Tareas/Tareas%20UD2/Tareas/#diagrama-entidad-relacion-relacional","title":"Diagrama Entidad-Relaci\u00f3n / Relacional","text":""},{"location":"GBD/Tareas/Tareas%20UD2/Tareas/#opcion-a","title":"Opci\u00f3n A","text":"<pre><code>erDiagram\n\nCliente {\n  int CodigoCliente pk\n  string DNI\n  string Apellidos\n  string Nombre\n  string Direccion\n  int Telefono\n}\n\nVehiculo {\n  string Matricula pk\n  string Marca\n  string Modelo\n  string Color\n  date FechaMatriculacion\n}\n\nEmpleado {\n  int CodigoEmpleado pk\n  string DNI\n  string Nombre\n  string Apellidos\n  string Direccion\n  int Telefono\n  int CP\n  date FechaAlta\n  enum Categoria\n}\n\nOrdenReparacion {\n  int CodigoReparacion pk\n  date FechaEntrada\n  int Km\n  string DescripcionAveria\n  date FechaFinalizacion\n  int HorasTotales\n  bool Reparado\n  string Observaciones\n}\n\nActuacion {\n  string Referencia pk\n  string Descripcion\n  int TiempoEstimado\n  float Precio\n}\n\nRecambio {\n  int CodigoRecambio pk\n  string Descripcion\n  string UnidadBase\n  int Stock\n  float PrecioReferencia\n}\n\nFactura {\n  int NumeroFactura pk\n  date FechaFactura\n}\n\nCliente ||--|{ Vehiculo : \"tiene\"\nVehiculo ||--|{ OrdenReparacion : \"asignada\"\nOrdenReparacion ||--|{ ReparacionEmpleado : \"trabaja\"\nReparacionEmpleado }|--|| Empleado : \"interviene\"\nOrdenReparacion ||--o{ ReparacionRecambio : \"necesita\"\nRecambio ||--|{ ReparacionRecambio : \"usa\"\nOrdenReparacion ||--|{ ReparacionActuacion : \"necesita\"\nActuacion ||--|{ ReparacionActuacion : \"realiza\"\nOrdenReparacion ||--|| Factura : \"genera\"\n\nReparacionEmpleado {\n  int CodigoReparacion pk, fk\n  int CodigoEmpleado pk, fk\n  int Horas\n}\n\nReparacionRecambio {\n  int CodigoReparacion pk, fk\n  int CodigoRecambio pk, fk\n  int Unidades\n}\n\nReparacionActuacion {\n  string Referencia pk, fk\n  int CodigoReparacion pk, fk\n  int TiempoEmpleado\n}</code></pre>"},{"location":"GBD/Tareas/Tareas%20UD2/Tareas/#opcion-b","title":"Opci\u00f3n B","text":"<p>Esta opci\u00f3n no es mejor que la anterior. Es m\u00e1s compleja, no aporta m\u00e1s informaci\u00f3n y no es m\u00e1s clara. La he incluido para mostrar que existen distintas formas de modelar una base de datos dependiendo de c\u00f3mo se interprete la situaci\u00f3n.</p> <pre><code>erDiagram\n\nCliente {\n  int CodigoCliente pk\n  string DNI\n  string Apellidos\n  string Nombre\n  string Direccion\n  int Telefono\n}\n\nVehiculo {\n  string Matricula pk\n  string Marca\n  string Modelo\n  string Color\n  date FechaMatriculacion\n}\n\nEmpleado {\n  int CodigoEmpleado pk\n  string DNI\n  string Nombre\n  string Apellidos\n  string Direccion\n  int Telefono\n  int CP\n  date FechaAlta\n  enum Categoria\n}\n\nOrdenReparacion {\n  int CodigoReparacion pk\n  date FechaEntrada\n  int Km\n  string DescripcionAveria\n  date FechaFinalizacion\n  int HorasTotales\n  bool Reparado\n  string Observaciones\n}\n\nActuacion {\n  string Referencia pk\n  string Descripcion\n  int TiempoEstimado\n  float Precio\n}\n\nRecambio {\n  int CodigoRecambio pk\n  string Descripcion\n  string UnidadBase\n  int Stock\n  float PrecioReferencia\n}\n\nFactura {\n  int NumeroFactura pk\n  date FechaFactura\n}\n\nCliente ||--|{ ClienteVehiculo : \"figura\"\nVehiculo ||--|{ ClienteVehiculo : \"figura\"\nVehiculo ||--|{ OrdenReparacion : \"asignada\"\nOrdenReparacion ||--|{ ReparacionActuacion : \"necesita\"\nActuacion ||--|{ ReparacionActuacion : \"se aplica\"\nReparacionActuacion }|--|| Empleado: \"realiza\"\nReparacionActuacion }|-- || ReparacionActuacionRecambio : \"necesita\"\nRecambio ||--|{ ReparacionActuacionRecambio : \"usa\"\nOrdenReparacion ||--|| Factura : \"genera\"\n\nClienteVehiculo {\n  int CodigoCliente\n  int Matricula\n  date Fecha\n}\n\nReparacionActuacion {\n  string Referencia pk, fk\n  int CodigoReparacion pk, fk\n  int CodigoEmpleado fk\n  int TiempoEmpleado\n}\n\nReparacionActuacionRecambio {\n  string Referencia pk, fk\n  int CodigoReparacion pk, fk\n  int CodigoRecambio pk, fk\n  int Unidades\n}</code></pre>"},{"location":"GBD/Tareas/Tareas%20UD2/Tareas/#enunciado-apartado-2","title":"Enunciado apartado 2","text":"<p>Normaliza la siguiente relaci\u00f3n hasta 3FN, analizando las dependencias entre los atributos:</p> <p>PEDIDO (NumPedido, FechaPedido, CodProveedor, NombreProveedor, Direcci\u00f3nProveedor, CodProducto, NombreProducto, PrecioProducto, Cantidad)</p> <p>Recoge los datos de los pedidos a los proveedores. Cada producto lo puede suministrar m\u00e1s de un proveedor. Cada pedido incluye varios productos. Criterios de puntuaci\u00f3n ejercicio 2. Total 2 puntos.</p>"},{"location":"GBD/Tareas/Tareas%20UD2/Tareas/#enunciado-apartado-3","title":"Enunciado apartado 3","text":"<p>Vamos a informatizar la gesti\u00f3n del Restaurante Mouro. Se trata de un restaurante de tres plantas, que ofrece distintos servicios a sus clientes. Inicialmente vamos a describir su funcionamiento:</p> <ul> <li>El restaurante tiene una serie de comedores, cada uno de ellos con un n\u00famero fijo de mesas disponibles. De cada comedor interesa: C\u00f3digo y nombre del comedor, capacidad m\u00e1xima de comensales, n\u00famero de mesas, localizaci\u00f3n. Por ejemplo: MA, es el sal\u00f3n \"Mar Abierto\", est\u00e1 en la planta baja, tiene 60 mesas y capacidad para 300 comensales</li> <li>En cada comedor hay una serie de mesas. De las mesas guardamos el n\u00famero de asientos y quien es el camarero que la atiende. Las mesas se numeran consecutivamente, de forma que ser\u00e1 necesario que se a\u00f1ada al propio c\u00f3digo el del comedor al que corresponden. Por ejemplo: MA, 01 es la mesa 1 del sal\u00f3n Mar Abierto.</li> <li>Los empleados realizan funciones distintas seg\u00fan sean personal de cocina, camareros o personal de administraci\u00f3n del negocio.</li> </ul> <p>De todos ellos recogemos la siguiente informaci\u00f3n: DNI, Nombre, Apellidos, Direcci\u00f3n, Ciudad, CP, tel\u00e9fono, Fecha de alta, Categor\u00eda y Salario.</p> <p>Cuando se trata de camareros queremos saber adem\u00e1s en que turno trabaja y los a\u00f1os de experiencia.</p> <p>De los cocineros necesitamos saber cu\u00e1l es su puesto en la cocina y su especialidad (carnes, pescados, postres, etc.)</p> <p>Del personal de administraci\u00f3n necesitamos conocer el cargo que tiene.</p> <p>No se da el caso de que una misma persona realice m\u00e1s de una funci\u00f3n. Existen, adem\u00e1s otras personas contratadas temporalmente como ayudantes que no se recogen en la anterior descripci\u00f3n.</p> <p>Entre los camareros existen una serie de encargados que supervisan a otros camareros.</p> <ul> <li>Para organizar mejor el trabajo se admiten reservas de los clientes. Cuando se recibe una llamada para hacer una reserva recogemos:</li> </ul> <p>N\u00famero de reserva, Fecha y hora de la reserva, Nombre de la persona que hace la reserva, la fecha y hora para la que se hace la reserva, si se trata de comida o cena , el n\u00famero de personas y otros datos que puedan ser de inter\u00e9s.</p> <p>Autom\u00e1ticamente se adjudican las mesas necesarias para cubrir la reserva a\u00f1adiendo el n\u00famero de personas que se sentar\u00e1n en cada mesa.</p> <ul> <li>En la carta se exponen una serie de platos de los cuales se guarda: Un c\u00f3digo, el nombre del plato, el tipo de plato (carnes, pescados, primeros, postres, etc.), una breve descripci\u00f3n y el precio.</li> <li>Para llevar mejor la gesti\u00f3n de las compras, de cada plato recogemos los productos o ingredientes que lo componen y en qu\u00e9 cantidad. De los productos guardamos: un c\u00f3digo, la descripci\u00f3n, el stock, la unidad-base (docenas, kg, litros, etc.), el precio por unidad y la categor\u00eda a la que pertenece.</li> <li>Mantenemos tambi\u00e9n informaci\u00f3n de los proveedores que nos suministran esos productos: C\u00f3digo, Nombre, Direcci\u00f3n, CP, Tel\u00e9fono, Fax, Persona de contacto</li> <li>Por \u00faltimo cuando nuestros clientes nos visitan tomamos nota manualmente de la comanda, y, una vez que hayan terminado realizamos la correspondiente factura que recoge en el encabezado el n\u00famero de factura, fecha y n\u00famero de mesa. A continuaci\u00f3n una relaci\u00f3n de los nombres de los platos, las unidades de cada plato, precio e importe (estos dos datos se obtienen de la informaci\u00f3n almacenada).</li> </ul> <p>Se pide:</p> <ul> <li>Obtener el modelo Entidad-Relaci\u00f3n: Entidades, relaciones, atributos, claves principales, cardinalidades, tipos de correspondencia, etc.</li> <li>Obtener el modelo Relacional: pasar del modelo entidad-relaci\u00f3n al modelo relacional aplicando correctamente las reglas de transformaci\u00f3n, justificando la soluci\u00f3n cuando se considere necesario.</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/","title":"Gu\u00eda para los v\u00eddeos del Modelo Entidad-Relaci\u00f3n","text":""},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#video-1-introduccion-al-modelo-entidad-relacion-y-entidades","title":"V\u00eddeo 1: Introducci\u00f3n al Modelo Entidad-Relaci\u00f3n y Entidades","text":""},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#objetivo-del-modelo-entidad-relacion","title":"Objetivo del modelo entidad-relaci\u00f3n","text":"<p>El modelo entidad-relaci\u00f3n es un modelo conceptual propuesto por Peter Chen en el a\u00f1o 1976. </p> <p>El objetivo del modelo entidad-relaci\u00f3n es obtener una representaci\u00f3n gr\u00e1fica de los datos de un dominio de conocimiento. Esto es, de un conjunto de entidades y de las relaciones que existen entre ellas dentro de un contexto determinado. Lo que llamamos diagrama entidad-relaci\u00f3n.</p> <p>El objetivo final de aplicar secuencialmente el modelo entidad-relaci\u00f3n, el modelo relacional y un lenguaje de definici\u00f3n de datos (DDL), es obtener una base de datos que permita almacenar, recuperar y manipular la informaci\u00f3n de manera eficiente tanto en espacio como en tiempo.</p> <p>No existe un \u00fanico diagrama para representar el modelo entidad-relaci\u00f3n, sino que existen diferentes notaciones y convenciones. Adem\u00e1s no es raro que se utilicen diferentes notaciones en un mismo diagrama.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#importancia-de-las-relaciones","title":"Importancia de las relaciones","text":"<p>Las relaciones son importantes en tanto que nos dan indicios de los tipos de consultas que se har\u00e1n en la base de datos. Si tenemos una relaci\u00f3n entre autor y libro, \u00e9sta nos interesa porque es muy probable que en la base de datos deseemos consultar los libros de un autor. Lo mismo para los alumnos de un ciclo, m\u00f3dulo, tutor, etc.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#video-2-entidades","title":"V\u00eddeo 2: Entidades","text":""},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#entidades","title":"Entidades","text":"<p>Entidad es una cosa o concepto que es capaz de una existencia independiente, que puede ser identificada de forma \u00fanica y con informaci\u00f3n asociada a si misma.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#ejemplos-de-entidades","title":"Ejemplos de entidades","text":"<ul> <li>Existencia independiente: Dependiendo del contexto. Empleado en el contexto de una empresa, socio y libro en el contexto de una biblioteca, paciente en el contexto de un hospital, etc. Nombre, fecha de nacimiento, direcci\u00f3n de correo electr\u00f3nico, etc. no son entidades pues han de estar ligadas a una entidad para tener sentido o ser \u00fatiles.</li> <li>Identificaci\u00f3n \u00fanica: Cada entidad ha de tener una forma de identificaci\u00f3n \u00fanica. Por ejemplo, un n\u00famero de empleado, un n\u00famero de socio, un n\u00famero de libro, un n\u00famero de paciente, etc. (Idea de instancia de entidad).</li> <li>Informaci\u00f3n asociada: Cada entidad tiene asociada una serie de propiedades o atributos que la describen. Por ejemplo, un empleado tiene un nombre, un apellido, una fecha de nacimiento, un n\u00famero de tel\u00e9fono, etc. (Idea de categor\u00eda de entidad).</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#entidad-como-categoria-e-instancia","title":"Entidad como categor\u00eda e instancia","text":"<p>Nos interesan las entidades como categor\u00edas, es decir, como un conjunto de instancias que comparten las mismas propiedades. Que se identifican y distinguen entre s\u00ed por sus valores.</p> <p>La entidad / categor\u00eda <code>Libro</code> incluye a todos los libros de una librer\u00eda, cada libro es una instancia de la entidad <code>Libro</code>.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#video-2-atributos-y-tipos-de-atributos","title":"V\u00eddeo 2: Atributos y Tipos de Atributos","text":""},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#atributos","title":"Atributos","text":"<p>Una atributo es una propiedad o caracter\u00edstica de una entidad que describe un aspecto de la entidad. En algunos casos las relaciones tambi\u00e9n pueden tener atributos, por ejemplo la fecha de inicio de una relaci\u00f3n entre dos entidades.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#tipos-de-atributos","title":"Tipos de atributos","text":"<ul> <li>Clave primaria: Atributo o conjunto de atributos que identifican de forma \u00fanica a una entidad. No puede tener valores nulos y no puede repetirse.</li> <li>Clave candidata: Atributo o conjunto de atributos que podr\u00edan ser claves primarias. No puede tener valores nulos y no puede repetirse.</li> <li>Atributo calculado: Atributo cuyo valor se puede calcular a partir de otros atributos.</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#video-3-relaciones","title":"V\u00eddeo 3: Relaciones","text":"<p>Una relaci\u00f3n describe una asociaci\u00f3n entre dos o m\u00e1s entidades, c\u00f3mo interact\u00faan entre s\u00ed. Aunque una relaci\u00f3n pueden involucrar a m\u00e1s de dos entidades a lo largo del proceso de dise\u00f1o se intenta simplificar a relaciones binarias.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#video-4-cardinalidades","title":"V\u00eddeo 4: Cardinalidades","text":"<p>La cardinalidad de una relaci\u00f3n indica el n\u00famero de instancias de una entidad que pueden estar relacionadas con una instancia de otra entidad. Esto se analiza mirado desde cada extremo de la relaci\u00f3n: \u00bfCuantos libros puede retirar un socio? \u00bfPor cu\u00e1ntos socios puede ser retirado un libro? Lo que nos interesar\u00e1 ser\u00e1 el n\u00famero m\u00ednimo y m\u00e1ximo de instancias de una entidad que pueden estar relacionadas con una instancia de otra entidad.</p> <p>As\u00ed, podemos decir que un ciclo de FP puede tener asociados de 0 a N m\u00f3dulos, mientras que un m\u00f3dulo puede estar asociado a un \u00fanico ciclo de FP. Y una alumno puede estar matriculado en un \u00fanico ciclo de FP pero un ciclo de FP puede tener asociados de 0 a N alumnos o 1 a N si existiese alguna restricci\u00f3n que indicase que no se permite la existencia de ciclos sin alumnos, etc.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#cardinalidad-1n-uno-a-muchos","title":"Cardinalidad 1:N (Uno a muchos)","text":"<p>Esta cardinalidad indica que una instancia de una entidad puede estar relacionada con N instancias de otra entidad. Por ejemplo, un departamento puede tener asignados de 1 a N empleados, mientras que un empleado puede estar asignado a un \u00fanico departamento.</p> <pre><code>erDiagram\nCliente ||--|{ Venta : compra</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#cardinalidad-mn-muchos-a-muchos","title":"Cardinalidad M:N (Muchos a muchos)","text":"<p>Esta cardinalidad indica que una instancia de una entidad puede estar relacionada con N instancias de otra entidad y viceversa. Por ejemplo, un libro puede estar escrito por uno o m\u00e1s autores y un autor puede serlo de uno o m\u00e1s libros.</p> <pre><code>erDiagram\nCliente }|--|{ Producto : compra</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#cardinalidad-11-uno-a-uno","title":"Cardinalidad 1:1 (Uno a uno)","text":"<p>Este es un caso raro en el que una instancia de una entidad est\u00e1 relacionada con una \u00fanica instancia de otra entidad. Por ejemplo, un empleado puede tener asignado un \u00fanico despacho y un despacho puede estar asignado a un \u00fanico empleado.</p> <pre><code>erDiagram\nAutor ||--o| Biografia : tiene</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Gu%C3%ADa%20v%C3%ADdeos/#cardinalidad-0-o","title":"Cardinalidad 0 \u00f3 ...","text":"<p>Cuando decimos que una cardinalidad es 0 a algo lo que estamos indicando es que es posible que no exista una relaci\u00f3n entre algunas instancias. Por ejemplo si sabemos que todo profesor ha de estar asignado a un departamento, diremos que la relaci\u00f3n entre profesor y departamento es N a 1 (un profesor puede estar asignado a un \u00fanico departamento pero un departamento puede tener asignados de N profesores). Si sabemos que habr\u00e1 profesores sin asignar a un departamento, diremos que la relaci\u00f3n es N a 0 \u00f3 1 (un profesor puede estar asignado a un \u00fanico departamento pero un departamento puede tener asignados de 1 a N profesores). Finalmente, si un departamento puede existir sin profesores diremos que la cardinalidad ser\u00eda 0 \u00f3 N a 0 \u00f3 1.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Introducci%C3%B3n/","title":"Introducci\u00f3n","text":"<p>En esta unidad aprenderemos a modelar una base de datos mediante el modelo entidad-relaci\u00f3n. Este modelo es una representaci\u00f3n gr\u00e1fica de la estructura de una base de datos que describe las entidades que la componen, los atributos de las entidades y las relaciones entre ellas. Es una herramienta muy \u00fatil para dise\u00f1ar bases de datos y es el paso previo a la creaci\u00f3n de la base de datos en un sistema de gesti\u00f3n de bases de datos.</p> <p>Las fases de modelado de datos que culminan en la creaci\u00f3n f\u00edsica de la base de datos son las siguientes:</p> <ul> <li>Modelo conceptual: En esta fase se crea un modelo conceptual de la base de datos. Este modelo es independiente del sistema de gesti\u00f3n de bases de datos y se centra en la estructura de la base de datos y en las relaciones entre las entidades. El modelo entidad-relaci\u00f3n es un ejemplo de modelo conceptual.</li> <li>Modelo l\u00f3gico: En esta fase se traduce el modelo conceptual a un modelo l\u00f3gico. El modelo l\u00f3gico es una representaci\u00f3n de la base de datos en un sistema de gesti\u00f3n de bases de datos concreto. En esta fase se definen las tablas, los campos, las claves primarias y for\u00e1neas, etc. El modelo relacional es un ejemplo de modelo l\u00f3gico.</li> <li>Modelo f\u00edsico: En esta fase se crea la base de datos en un sistema de gesti\u00f3n de bases de datos concreto. Se crean las tablas, los \u00edndices, las claves primarias y for\u00e1neas, etc. En esta fase se utiliza un lenguaje de definici\u00f3n de datos (DDL) para crear la base de datos. El lenguaje SQL incluye un conjunto de instrucciones DDL para crear y modificar bases de datos.</li> </ul> <pre><code>flowchart TB\nmer[Modelo entidad-relaci\u00f3n] --&gt; mrl[Modelo relacional] --&gt; bd[Base de datos]\nmc[Modelo conceptual] --&gt; ml[Modelo l\u00f3gico] --&gt; mf[Modelo f\u00edsico]</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/","title":"Modelo entidad relaci\u00f3n","text":"<ul> <li>Modelo entidad relaci\u00f3n<ul> <li>Elementos b\u00e1sicos<ul> <li>Entidades<ul> <li>Representaci\u00f3n gr\u00e1fica</li> </ul> </li> <li>Atributos</li> <li>Relaciones<ul> <li>Roles</li> </ul> </li> </ul> </li> <li>Cardinalidad<ul> <li>Tipos de cardinalidad<ul> <li>Cardinalidad 1 a 1<ul> <li>Notaci\u00f3n de pata de gallo (crow's foot)</li> <li>Notaci\u00f3n de Chen</li> </ul> </li> <li>Cardinalidad 1 a 0 \u00f3 1</li> <li>Cardinalidad 1 a n</li> <li>Cardinalidad 1 a 0 \u00f3 n</li> <li>Cardinalidad 0 \u00f3 1 a 0 o n</li> </ul> </li> <li>Combinaci\u00f3n de cardinalidades</li> </ul> </li> </ul> </li> </ul> <p>El modelo entidad-relaci\u00f3n fue propuesto por Peter Chen en 1976 y es una herramienta muy \u00fatil para dise\u00f1ar bases de datos. Es un modelo conceptual de la base de datos que describe las entidades que la componen, los atributos de las entidades y las relaciones entre ellas de una forma gr\u00e1fica y sencilla. Esto es, permite obtener un diagrama entidad-relaci\u00f3n que es una representaci\u00f3n gr\u00e1fica de la estructura conceptual de una base de datos.</p> <p>Este modelo describe elementos de inter\u00e9s interrelacionados dentro de un dominio espec\u00edfico de conocimiento. \u00bfQu\u00e9 quiere decir esto? Un dominio de conocimiento podr\u00eda ser lo que sabemos del funcionamiento de una biblioteca, y los elementos de inter\u00e9s ser\u00edan los fondos: libros, revistas, pel\u00edculas, etc.; los socios, los pr\u00e9stamos, etc.</p> <p>El modelo entidad-relaci\u00f3n b\u00e1sico est\u00e1 compuesto de entidades (que clasifican las cosas de inter\u00e9s) y especifica relaciones que pueden existir entre entidades (instancias de esos tipos de entidades).</p> <p>En las siguientes secciones iremos viendo todos los elementos que componen el modelo entidad-relaci\u00f3n, analizando cada uno de ellos en detalle y viendo c\u00f3mo se representan gr\u00e1ficamente.</p> <p>Nota: No existe una \u00fanica representaci\u00f3n gr\u00e1fica del modelo entidad relaci\u00f3n. En estes apuntes utilizaremos la notaci\u00f3n de pata de gallo (crow's foot) pero existen otras notaciones como la notaci\u00f3n de Chen, la notaci\u00f3n de Bachman o la notaci\u00f3n de Martin.</p> <p></p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#elementos-basicos","title":"Elementos b\u00e1sicos","text":"<p>En esta secci\u00f3n veremos los elementos b\u00e1sicos del modelo: entidades, atributos y relaciones. Comenzaremos con una definici\u00f3n de cada uno de ellos y pondremos ejemplos para que se entienda mejor.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#entidades","title":"Entidades","text":"<p>Una entidad se define como una cosa que es capaz de una existencia independiente, que puede ser identificada de forma \u00fanica y que es capaz de almacenar datos. Una entidad es una abstracci\u00f3n de las complejidades de un dominio. Cuando hablamos de una entidad, normalmente hablamos de alg\u00fan aspecto del mundo real que se puede distinguir de otros aspectos del mundo real.</p> <p>Una librer\u00eda, por ejemplo vende libros. Cada libro se puede considerar una entidad. Cada uno tiene una existencia independiente, puede ser identificado de forma \u00fanica (por ejemplo por su ISBN [^1]) y puede almacenar datos (autor, fecha de publicaci\u00f3n, editorial, etc.).</p> <p>Cuando decimos que una entidad \"puede almacenar datos\" nos referimos a que hay informaci\u00f3n asociada a la entidad, que la describe; no a que la entidad funcione como un almac\u00e9n de datos.</p> <p>[^1]: Un ISBN (International Standard Book Number) es un n\u00famero que identifica de forma \u00fanica un libro. Es un atributo de la entidad libro.</p> <p>Una entidad puede ser un objeto f\u00edsico o un concepto. Por ejemplo, un coche, una persona, una ciudad, una cuenta bancaria, una factura, etc.</p> <p>Las entidades suelen corresponderse con sustantivos. Por ejemplo, un empleado, un ordenador, una ciudad, una n\u00f3mina, etc.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#representacion-grafica","title":"Representaci\u00f3n gr\u00e1fica","text":"<p>La entidades se representan mediante un rect\u00e1ngulo con el nombre de la entidad en su interior. Por ejemplo, la entidad <code>libro</code> se representar\u00eda de la siguiente forma:</p> <pre><code>erDiagram\n    LIBRO</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#atributos","title":"Atributos","text":"<p>Un atributo es una propiedad o caracter\u00edstica de una entidad (o relaci\u00f3n). Los atributos describen las entidades y son la informaci\u00f3n que se almacena de las mismas. Por ejemplo, si tenemos una entidad <code>libro</code>, los atributos podr\u00edan ser <code>t\u00edtulo</code>, <code>autor</code>, <code>fecha de publicaci\u00f3n</code>, <code>editorial</code>, etc. Los atributos son los que permiten distinguir una entidad de otra.</p> <p>Para toda entidad habr\u00e1 uno o m\u00e1s atributos que la identifiquen de forma \u00fanica. A estos atributos se les llama clave primaria. Por ejemplo, en una entidad <code>libro</code>, el atributo <code>ISBN</code> podr\u00eda ser la clave primaria. El atributo <code>autor</code> no ser\u00eda una clave primaria, ya que puede haber varios libros con el mismo autor.</p> <p>Hay casos en los que las relaciones tambi\u00e9n pueden tener atributos. Por ejemplo, si tenemos una relaci\u00f3n <code>prestamo</code> entre las entidades <code>socio</code> y <code>libro</code>, el atributo <code>fecha</code> ser\u00eda un atributo de la relaci\u00f3n <code>prestamo</code>.</p> <p>La representaci\u00f3n gr\u00e1fica ser\u00eda:</p> <pre><code>erDiagram\n    LIBRO {\n        string ISBN\n        string titulo\n        string autor\n        date fecha_publicacion\n        string editorial\n    }</code></pre> <p>Usando el un diagrama ER de Chen:</p> <p></p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#relaciones","title":"Relaciones","text":"<p>Una relaci\u00f3n representa c\u00f3mo las entidades interact\u00faan entre s\u00ed. Las relaciones se pueden pensar como verbos, que enlazan dos o m\u00e1s sustantivos. Algunos ejemplos de relaciones son: <code>posee</code> entre una empresa y un ordenador, <code>pertenece</code> entre un profesor y un departamento, <code>interpreta</code> entre un artista y una canci\u00f3n, <code>demuestra</code> entre un matem\u00e1tico y una conjetura. Volviendo al ejemplo de la biblioteca, podr\u00edamos tener una relaci\u00f3n <code>prestamo</code> entre las entidades <code>socio</code> y <code>libro</code>.</p> <p>La representaci\u00f3n gr\u00e1fica de una relaci\u00f3n es la siguiente:</p> <pre><code>erDiagram\n    SOCIO ||--|| LIBRO : PRESTAMO</code></pre> <p>Una relaci\u00f3n tambi\u00e9n puede darse entre una \u00fanica entidad. Por ejemplo, si tenemos una entidad <code>empleado</code> y una relaci\u00f3n <code>supervisa</code> entre empleados, la representaci\u00f3n gr\u00e1fica ser\u00eda la siguiente:</p> <pre><code>erDiagram\n    EMPLEADO ||--|{ EMPLEADO : SUPERVISA</code></pre> <p>Como se puede observar, la relaci\u00f3n tendr\u00e1 un nombre que indica la naturaleza de la relaci\u00f3n. En el ejemplo anterior, la relaci\u00f3n <code>supervisa</code> indica que un empleado supervisa a otro empleado.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#roles","title":"Roles","text":"<p>Es pr\u00e1ctica com\u00fan expresar el rol que representa cada entidad en una relaci\u00f3n mediante una expresi\u00f3n como \"el empleado es supervisor de otros empleados\" o \"el socio toma prestado un libro\". En el ejemplo anterior, el rol de la entidad <code>empleado</code> es <code>supervisor</code> y el rol de la entidad <code>empleado</code> es <code>supervisado</code>, del mismo modo el rol de la entidad <code>socio</code> es <code>prestatario</code> y el rol de la entidad <code>libro</code> es <code>prest ado</code>.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#cardinalidad","title":"Cardinalidad","text":"<p>La cardinalidad de una relaci\u00f3n indica cu\u00e1ntas instancias de una entidad pueden estar relacionadas con una instancia de otra entidad. La cardinalidad se representa mediante un n\u00famero o un rango de n\u00fameros. Por ejemplo, en la relaci\u00f3n <code>prestamo</code> entre las entidades <code>socio</code> y <code>libro</code>, la cardinalidad podr\u00eda ser <code>1</code> (uno) a <code>n</code> (ene), lo que indica que un socio puede tomar prestado varios libros (n libros), pero un libro solo puede ser tomado prestado por un socio. Obviamente esto viene determinado por las reglas del dominio de conocimiento que estamos modelando (por las reglas del negocio).</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#tipos-de-cardinalidad","title":"Tipos de cardinalidad","text":""},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#cardinalidad-1-a-1","title":"Cardinalidad 1 a 1","text":"<p>Esta cardinalidad se expresa como \"La entidad A est\u00e1 relacionada con una y solo una entidad B\". Por ejemplo, si tenemos una relaci\u00f3n <code>libro</code> con la entidad <code>socio</code>, la cardinalidad 1 a 1, indicar\u00eda que todo socio tiene uno y s\u00f3lo un libro en pr\u00e9stamo y que todo libro tiene que estar prestado a un socio.</p> <p>Obviamente esta situaci\u00f3n es absurda ya que habr\u00e1 socios que no tengan libros en pr\u00e9stamo y libros que no est\u00e9n prestados a socios, por lo que esta cardinalidad no tiene mucho sentido en este caso.</p> <p>Se representa gr\u00e1ficamente de la siguiente forma:</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#notacion-de-pata-de-gallo-crows-foot","title":"Notaci\u00f3n de pata de gallo (crow's foot)","text":"<pre><code>erDiagram\n    SOCIO ||--|| LIBRO : PRESTAMO</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#notacion-de-chen","title":"Notaci\u00f3n de Chen","text":""},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#cardinalidad-1-a-0-o-1","title":"Cardinalidad 1 a 0 \u00f3 1","text":"<p>En este caso lo que decimos es que \"La entidad A est\u00e1 relacionada con una y solo una entidad B o con ninguna\". Por ejemplo, si tenemos una relaci\u00f3n 1 a 0 \u00f3 1 de <code>socio</code> con la entidad <code>libro</code>, estar\u00eda diciendo que un socio puede tener un libro en pr\u00e9stamo o ninguno. Por otro lado, un libro (en el caso que estamos representando) tendr\u00e1 que estar prestado a un socio.</p> <p>De nuevo estamos ante una relaci\u00f3n sin sentido en el mundo real, puesto que no todos los libros estar\u00e1n en pr\u00e9stamo todo el tiempo.</p> <p>La representaci\u00f3n gr\u00e1fica ser\u00eda la siguiente:</p> <pre><code>erDiagram\n    SOCIO ||--o| LIBRO : PRESTAMO</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#cardinalidad-1-a-n","title":"Cardinalidad 1 a n","text":"<p>Con esta cardinalidad decimos que \"La entidad A est\u00e1 relacionada con una o m\u00e1s entidades B\". Por ejemplo, si tenemos una relaci\u00f3n 1 a n de <code>socio</code> con la entidad <code>libro</code>, estar\u00edamos diciendo que un socio puede tener varios libros en pr\u00e9stamo, pero como m\u00ednimo tendr\u00e1 siempre 1. Por otro lado, seguimos diciendo que un libro tendr\u00e1 que estar prestado a un socio.</p> <p>Esta relaci\u00f3n tiene algo m\u00e1s de sentido en el mundo real, ya que un socio puede tener varios libros en pr\u00e9stamo.</p> <p>Su representaci\u00f3n gr\u00e1fica ser\u00e1 la siguiente:</p> <pre><code>erDiagram\n    SOCIO ||--|{ LIBRO : PRESTAMO</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#cardinalidad-1-a-0-o-n","title":"Cardinalidad 1 a 0 \u00f3 n","text":"<p>Esta vez estamos indicando que \"La entidad A est\u00e1 relacionada con cero o m\u00e1s entidades B\". Por ejemplo, si tenemos una relaci\u00f3n 1 a 0 \u00f3 n de <code>socio</code> con la entidad <code>libro</code>, estar\u00edamos diciendo que un socio puede tener varios libros en pr\u00e9stamo o ninguno. Por otro lado, un libro tendr\u00e1 que estar prestado a un socio.</p> <p>Esta relaci\u00f3n tiene sentido en el mundo real, al menos para el socio, ya que un socio puede tener varios libros en pr\u00e9stamo o ninguno.</p> <p>Se representar\u00eda de la siguiente forma:</p> <pre><code>erDiagram\n    SOCIO ||--o{ LIBRO : PRESTAMO</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#cardinalidad-0-o-1-a-0-o-n","title":"Cardinalidad 0 \u00f3 1 a 0 o n","text":"<p>En este caso decimos que \"La entidad A est\u00e1 relacionada con cero o una entidad B y la entidad B est\u00e1 relacionada con cero o m\u00e1s entidades A\". Por ejemplo, si tenemos una relaci\u00f3n 0 \u00f3 1 a 0 o n de <code>socio</code> con la entidad <code>libro</code>, estar\u00edamos diciendo que un socio puede tener varios libros en pr\u00e9stamo o ninguno. Por otro lado, un libro puede estar prestado a un socio o a varios.</p> <p>Esta relaci\u00f3n tiene sentido en el mundo real, ya que un libro puede estar prestado a un s\u00f3lo socio, o no estar prestado, y un socio puede tener varios libros en pr\u00e9stamo, o ninguno.</p> <p>Gr\u00e1ficamente ser\u00eda:</p> <pre><code>erDiagram\n    SOCIO |o--o{ LIBRO : PRESTAMO</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Modelo%20entidad-relaci%C3%B3n/#combinacion-de-cardinalidades","title":"Combinaci\u00f3n de cardinalidades","text":"<p>Las cardinalidades se pueden combinar de diferentes formas. Por ejemplo, si tenemos una relaci\u00f3n <code>autor</code> entre las entidades <code>libro</code> y <code>autor</code>, la cardinalidad podr\u00eda ser 1 a n en ambas direcciones, ya que un libro puede tener varios autores y un autor puede haber escrito varios libros.</p> <pre><code>erDiagram\n    LIBRO ||--|{ AUTOR : ESCRIBIO</code></pre> <p>Si queremos indicar que un libro puede tener varios autores la cardinalidad ser\u00eda m a n, y se expresar\u00eda de la siguiente forma:</p> <pre><code>erDiagram\n    LIBRO }|--|{ AUTOR: ESCRIBIO</code></pre> <p>Entendi\u00e9ndose que un autor ha escrito uno o m\u00e1s libros y que un libro ha sido escrito por uno o m\u00e1s autores.</p> <p>Si tambi\u00e9n nos interesa representar la posibilidad de que un libro no tenga autor (un libro an\u00f3nimo) la cardinalidad entre libro y autor ser\u00eda 0 a n:</p> <pre><code>erDiagram\n    LIBRO }|--o{ AUTOR : ESCRIBIO</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Dudas/cardinalidades%200-1%200-N/","title":"Cardinalidades 0-1 0-N","text":"<p>As cardinalidades ent\u00e9ndense mellor mirando os diagramas entidade-relaci\u00f3n. A continuaci\u00f3n, unha explicaci\u00f3n das cardinalidades 0-1 e 0-N.</p> <p>Importante: Cando miramos a cardinalidade de A a B temos que mirar que s\u00edmbolo (ou que n\u00fameros) est\u00e1n no lado de B.:</p> <p></p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Dudas/cardinalidades%200-1%200-N/#cardinalidade-0-1","title":"Cardinalidade 0-1","text":"<pre><code>erDiagram\n    CLIENTE ||--o| \"DIRECCI\u00d3N\": ter</code></pre> <p>Neste diagrama podemos ver que temos d\u00faas entidades, <code>CLIENTE</code> e <code>DIRECCI\u00d3N</code> e unha relaci\u00f3n <code>ter</code>. A cardinalidade de <code>CLIENTE</code> a <code>DIRECCI\u00d3N</code> \u00e9 0-1, isto significa que un <code>CLIENTE</code> pode ter 0 ou 1 <code>DIRECCI\u00d3NS</code>. A cardinalidade de <code>DIRECCION</code> a <code>CLIENTE</code> \u00e9 1 e s\u00f3 1, isto significa que unha <code>DIRECCION</code> s\u00f3 pode selo dun \u00fanico <code>CLIENTE</code>.</p> <p>A idea con 0 ou 1 e que un <code>CLIENTE</code> pode ter unha ou ningunha <code>DIRECCI\u00d3N</code>. Pensade as tendas onde os piden o c\u00f3digo postal cando compramos, non \u00e9 obrigatorio dalo polo que alg\u00fans clientes ter\u00e1n c\u00f3digo postal e outros non. Alg\u00fans clientes ponden darnos a s\u00faa direcci\u00f3n e ountros non querer.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Dudas/cardinalidades%200-1%200-N/#cardinalidade-0-n","title":"Cardinalidade 0-N","text":"<pre><code>erDiagram\n    CLIENTE ||--o{ PEDIDOS: \"fai\"</code></pre> <p>Aqu\u00ed temos un diagrama con dous entidades, <code>CLIENTE</code> e <code>PEDIDOS</code> e un relaci\u00f3n <code>facer</code>. A cardinalidade de <code>CLIENTE</code> a <code>PEDIDOS</code> \u00e9 0-N, isto significa que un <code>CLIENTE</code> pode facer 0 ou N (moitos ou ning\u00fan) <code>PEDIDOS</code>. A cardinalidade de <code>PEDIDOS</code> a <code>CLIENTE</code> \u00e9 1 e s\u00f3 1, isto significa que un <code>PEDIDO</code> pode ser feito por un \u00fanico <code>CLIENTE</code>.</p> <p>A idea co 0 cero e deixar claro que non ten por que haber unha relaci\u00f3n entre todos os <code>CLIENTES</code> e <code>PEDIDOS</code>. \u00c9 dicir, que pode haber clientes que a\u00ednda non fixeron ning\u00fan pedido. A idea co N moitos \u00e9 que un <code>CLIENTE</code> pode facer varios <code>PEDIDOS</code>.</p> <p>```mermaid</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Ejercicio%2001%20-%20modelo%20er/","title":"Ejercicio 10 Modelo Entidad-Relaci\u00f3n","text":""},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Ejercicio%2001%20-%20modelo%20er/#enunciado","title":"Enunciado","text":"<p>Una empresa de alquiler de veh\u00edculos desea dise\u00f1ar una base de datos para gestionar su flota y las reservas de sus clientes. La empresa tiene los siguientes requisitos:</p> <ol> <li>Veh\u00edculos: Cada veh\u00edculo tiene un identificador \u00fanico, una matr\u00edcula, una marca, un modelo, un a\u00f1o de fabricaci\u00f3n y un estado (disponible, en mantenimiento, alquilado).</li> <li>Clientes: Cada cliente tiene un identificador \u00fanico, un nombre, un apellido, una direcci\u00f3n, un n\u00famero de tel\u00e9fono y una direcci\u00f3n de correo electr\u00f3nico.</li> <li>Reservas: Cada reserva tiene un identificador \u00fanico, una fecha de inicio, una fecha de fin, y est\u00e1 asociada a un cliente y a un veh\u00edculo.</li> <li>Empleados: Cada empleado tiene un identificador \u00fanico, un nombre, un apellido, un puesto de trabajo y un n\u00famero de tel\u00e9fono.</li> <li>Mantenimiento: Cada mantenimiento tiene un identificador \u00fanico, una fecha, una descripci\u00f3n del trabajo realizado, y est\u00e1 asociado a un veh\u00edculo y a un empleado.</li> </ol>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Ejercicio%2001%20-%20modelo%20er/#requisitos-adicionales","title":"Requisitos adicionales","text":"<ul> <li>Un cliente puede realizar m\u00faltiples reservas, pero cada reserva est\u00e1 asociada a un solo cliente.</li> <li>Un veh\u00edculo puede tener m\u00faltiples registros de mantenimiento, pero cada registro de mantenimiento est\u00e1 asociado a un solo veh\u00edculo.</li> <li>Un empleado puede realizar m\u00faltiples mantenimientos, pero cada mantenimiento est\u00e1 asociado a un solo empleado.</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Ejercicio%2001%20-%20modelo%20er/#tareas","title":"Tareas","text":"<ol> <li>Dise\u00f1a el diagrama entidad-relaci\u00f3n (ER) que represente la informaci\u00f3n descrita.</li> <li>Identifica las entidades, atributos y relaciones.</li> <li>Define las cardinalidades de las relaciones.</li> <li>Aseg\u00farate de que todas las entidades tienen una clave primaria.</li> <li>Incluye cualquier restricci\u00f3n adicional que consideres necesaria.</li> </ol>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Ejercicio%2001%20-%20modelo%20er/#solucion","title":"Soluci\u00f3n","text":"<pre><code>erDiagram\n    VEHICULO {\n        int id PK\n        string matricula\n        string marca\n        string modelo\n        int anio_fabricacion\n        string estado\n    }\n\n    CLIENTE {\n        int id PK\n        string nombre\n        string apellido\n        string direccion\n        string telefono\n        string email\n    }\n\n    RESERVA {\n        int id PK\n        date fecha_inicio\n        date fecha_fin\n        int cliente_id FK\n        int vehiculo_id FK\n    }\n\n    EMPLEADO {\n        int id PK\n        string nombre\n        string apellido\n        string puesto\n        string telefono\n    }\n\n    MANTENIMIENTO {\n        int id PK\n        date fecha\n        string descripcion\n        int vehiculo_id FK\n        int empleado_id FK\n    }\n\n    CLIENTE ||--o{ RESERVA : realiza\n    VEHICULO ||--o{ RESERVA : tiene\n    VEHICULO ||--o{ MANTENIMIENTO : tiene\n    EMPLEADO ||--o{ MANTENIMIENTO : realiza</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%201/","title":"Ejercicio 1 - Apartado 1","text":"<ul> <li>Enunciado del primer apartado</li> <li>Funcionamiento de talleres FABER</li> <li>Datos necesarios</li> <li>Soluci\u00f3n</li> <li>Entidades</li> <li>Relaciones</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%201/#enunciado-del-primer-apartado","title":"Enunciado del primer apartado","text":""},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%201/#funcionamiento-de-talleres-faber","title":"Funcionamiento de talleres FABER","text":"<p>Siguiendo con el caso pr\u00e1ctico que venimos analizando a lo largo de la unidad vamos a ayudar a Alejandra a establecer un modelo l\u00f3gico que recoja el funcionamiento de talleres FABER, un taller mec\u00e1nico que organiza su actividad de la siguiente forma:</p> <ul> <li>Una serie de clientes traen sus veh\u00edculos a reparar. En el momento en que llega un cliente nuevo le recibe un empleado de la administraci\u00f3n quien registra la informaci\u00f3n necesaria del cliente, del veh\u00edculo y de la posible aver\u00eda.</li> <li>Con estos datos se imprime una orden de reparaci\u00f3n que se coloca en un tablero donde el jefe de los mec\u00e1nicos se la adjudica a un empleado para que efect\u00fae la reparaci\u00f3n, entreg\u00e1ndole una copia de la misma.</li> <li>En esta hoja cada mec\u00e1nico a\u00f1ade manualmente todas las actuaciones que ha llevado a cabo y el tiempo empleado y las piezas sustituidas.</li> <li>Una vez finalizada la reparaci\u00f3n el empleado entrega la orden a la administraci\u00f3n del taller donde se traslada esta informaci\u00f3n al ordenador. Cuando viene el cliente a retirar su veh\u00edculo se prepara la factura que recoge todas las actuaciones que se han llevado a cabo, su precio y el importe.</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%201/#datos-necesarios","title":"Datos necesarios","text":"<p>Los datos que ser\u00e1 necesario recoger en nuestra base de datos son:</p> <ul> <li>Datos del cliente: DNI, Apellidos, Nombre, Direcci\u00f3n y Tel\u00e9fono. Se le asigna adem\u00e1s un C\u00f3digo de Cliente.</li> <li>Datos del veh\u00edculo: Matr\u00edcula, Marca, Modelo, color y la Fecha de matriculaci\u00f3n.</li> <li>Datos previos, relativos a la reparaci\u00f3n que se quiere efectuar que son:</li> <li>Fecha de la entrada</li> <li>Los km que tiene el coche.</li> <li>La descripci\u00f3n de la posible aver\u00eda</li> </ul> <p>Una vez efectuada la reparaci\u00f3n se a\u00f1ade lo siguiente:</p> <ul> <li>Fecha de finalizaci\u00f3n.</li> <li>Horas totales empleadas en la reparaci\u00f3n.</li> <li>Si est\u00e1 reparado o no.</li> <li>Las observaciones que se consideren necesarias.</li> </ul> <p>Adem\u00e1s se necesita saber para cada reparaci\u00f3n:</p> <ul> <li>Empleados que han intervenido y las horas que interviene cada uno. Los datos de los empleados que est\u00e1n registrados en nuestro taller son: DNI, Nombre, Apellidos, Direcci\u00f3n, Tel\u00e9fono, CP, Fecha de alta y Categor\u00eda. La empresa a\u00f1ade un C\u00f3digo de empleado.</li> <li>Actuaciones que se han llevado a cabo y el tiempo empleado en cada una de ellas. Se recoge una descripci\u00f3n de las actuaciones que se pueden llevar a cabo: Referencia, Descripci\u00f3n (por ejemplo sustituir bater\u00eda, etc.), tiempo estimado y precio.</li> <li>Recambios y piezas que se han sustituido y las unidades. Para ello guardamos en una tabla una lista de los recambios que se pueden sustituir: c\u00f3digo, descripci\u00f3n, unidad base (por ejemplo cajas de 2 l\u00e1mparas, etc.), stock y precio de referencia.</li> <li> <p>Finalmente para elaborar la factura se necesita incluir en el encabezado: Numero de factura y fecha de la factura. El resto de los datos de la factura se obtendr\u00e1n a partir del los que ya hemos recogido en la reparaci\u00f3n. Se pide:</p> </li> <li> <p>Obtener el modelo Entidad-Relaci\u00f3n: Entidades, relaciones, atributos, claves principales, cardinalidades, tipos de correspondencia, etc.</p> </li> <li>Obtener el modelo Relacional: pasar del modelo entidad-relaci\u00f3n al modelo relacional aplicando correctamente las reglas de transformaci\u00f3n, justificando la soluci\u00f3n elegida cuando se considere necesario.</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%201/#solucion","title":"Soluci\u00f3n","text":"<p>La soluci\u00f3n no es \u00fanica ya que en este enunciado hay elementos que se prestan a interpretaciones distintas. En cualquier caso, la soluci\u00f3n que se propone es la siguiente:</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%201/#video-de-la-solucion","title":"V\u00eddeo de la soluci\u00f3n","text":"<p>V\u00eddeo de la soluci\u00f3n</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%201/#entidades","title":"Entidades","text":"<p>Las entidades que se pueden identificar son:</p> <ul> <li>Clientes, con los atributos: CodigoCliente, DNI, Apellidos, Nombre, Direcci\u00f3n y Tel\u00e9fono.</li> <li>Veh\u00edculos, con los atributos: Matr\u00edcula, Marca, Modelo, Color, FechaMatriculaci\u00f3n y CodigoCliente.</li> <li>Empleados, con los atributos: CodigoEmpleado, DNI, Nombre, Apellidos, Direcci\u00f3n, Tel\u00e9fono, CP, FechaAlta y Categor\u00eda.</li> </ul> <p>Con respecto a Empleados se podr\u00edan considerar varias opciones. Podemos entender que hay varios tipos de empleados: Administrativos, Mec\u00e1nicos y Jefes de mec\u00e1nicos. En este caso tendr\u00edamos una entidad Empleados y tres entidades m\u00e1s, una para cada tipo de empleado. El problema con esta soluci\u00f3n es que no hay ning\u00fan atributo especial que distinga a los empleados de un tipo u otro.</p> <p>Otra opci\u00f3n ser\u00eda considerar que hay un \u00fanico tipo de empleado y que hay un campo en la entidad Empleados que nos indica el tipo de empleado que es. TipoEmpleado podr\u00eda tener tres valores posibles: Mec\u00e1nico, Jefe de mec\u00e1nicos o Administrativo. En este caso tendr\u00edamos una \u00fanica entidad Empleados.</p> <p>Puesto que s\u00f3lo se menciona la existencia de un jefe tampoco tendr\u00eda mucho sentido reflejar el hecho en la base de datos. No se especifica un mecanismo para que el jefe asigne las reparaciones (\u00f3rdenes en nuestro dise\u00f1o) al resto ni en qu\u00e9 se distingue el jefe de cualquier otro mec\u00e1nico.</p> <p>En cualquier caso, se pueden considerar las dos opciones. En el mundo real necesita m\u00e1s informaci\u00f3n para decidir cu\u00e1l es la mejor opci\u00f3n o si than siquiera hay que aplica</p> <ul> <li>\u00d3rdenes, con los atributos: NumeroOrden, FechaEntrada, Kms, Descripci\u00f3nAver\u00eda, FechaSalida, HorasTotales, Reparado, Observaciones, CodigoCliente y Matr\u00edcula.</li> <li>Actuaci\u00f3nOrden, con los atributos: NumeroOrden, CodigoEmpleado, Referencia y Horas.</li> <li>Actuaci\u00f3nes, con los atributos: Referencia, Descripci\u00f3n, TiempoEstimado y Precio.</li> </ul> <p>He decidido llamar a la reparaci\u00f3n Orden. Una reparaci\u00f3n estar\u00e1 asociada a un veh\u00edculo y estar\u00e1 formada por una o m\u00e1s actuaciones. Cada actuaci\u00f3n de la orden (Actuaci\u00f3nOrden) ser\u00e1 realizada por un \u00fanico empleado y tendr\u00e1 que ser una de las actuaciones predefinidas (Actuaciones). De esta forma podremos saber cuantos Empleados han participado en una reparaci\u00f3n repasando las ActuacionesOrden de la misma.</p> <ul> <li>RecambiosOrden, con los atributos: NumeroOrden, CodigoRecambio y Unidades.</li> <li>Recambios, con los atributos: C\u00f3digo, Descripci\u00f3n, UnidadBase, Stock y PrecioReferencia.</li> <li>Facturas, con los atributos: NumeroFactura, NumeroOrden, CodigoCliente y FechaFactura.</li> </ul> <p>Con respecto a la Facturas, no es necesario que se relacione directamente con el cliente. Puesto la que factura est\u00e1 ya asociada a una Ordenes y esta a su vez a un Clientes podemos obtener la informaci\u00f3n del cliente a partir de la Ordenes.</p> <p>RecambiosOrden y Recambios tienen un funcionamiento an\u00e1logo a Actuaci\u00f3nOrden y Actuaci\u00f3n. Cada RecambiosOrden se corresponde con un Recambios y se asocia a una Orden. Podr\u00eda interpretarse que los Recambios se asocian a las Actuaciones y no a las Ordenes pero en el enunciado no se aclara. Las dos opciones ser\u00edan aceptables.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%201/#relaciones","title":"Relaciones","text":"<p>Los Clientes pueden tener uno o m\u00e1s Veh\u00edculos. No tiene sentido que tengamos un cliente en el taller si no le estamos (o ya le hemos) reparado alg\u00fan veh\u00edculo. A su vez, a cada veh\u00edculo le corresponder\u00e1n una o m\u00e1s \u00d3rdenes (de reparaci\u00f3n / reparaciones).</p> <p>Tambi\u00e9n podr\u00edamos tener en cuenta que un Veh\u00edculo podr\u00eda pertenecer a varios Clientes a lo largo de tiempo (por ejemplo, un coche que ha sido vendido) o constar como que es de varias personas (el coche de una familia que hoy trae uno de los miembros y otro d\u00eda, otro). En dicho caso la relaci\u00f3n ser\u00eda M:N y habr\u00eda que indicar la fecha en que se constat\u00f3 la pertenencia. En esta soluci\u00f3n no la hemos considerado.</p> <p>Con respecto a los Empleados, en el enunciado se de informaci\u00f3n hasta cierto punto contradictoria, pues se dice que: \"el jefe de los mec\u00e1nicos se la adjudica (la orden de reparaci\u00f3n) a un empleado para que efect\u00fae la reparaci\u00f3n, entreg\u00e1ndole una copia de la misma (orden)\". Esto podr\u00eda interpretarse como que cada reparaci\u00f3n la realiza un \u00fanico empleado pero m\u00e1s adelante se da a entender que pueden ser varios: \"para cada reparaci\u00f3n (se necesita saber): Empleados que han intervenido y las horas que interviene cada uno.\" La soluci\u00f3n por la que he optado es que una Orden de reparaci\u00f3n est\u00e9 compuesta de una o m\u00e1s Actuaciones y que cada Actuaci\u00f3n est\u00e9 asociada a un \u00fanico Empleado. De este modo sabremos qu\u00e9 empleados han participado en una reparaci\u00f3n (a trav\u00e9s de sus actuaciones) qui\u00e9n ha hecho qu\u00e9 (aunque no se pida) y cuanto tiempo ha dedicado cada uno.</p> <p>Como he dicho, cada Orden tendr\u00e1 una o m\u00e1s Actuaciones y cada Actuaci\u00f3n podr\u00e1 formar parte de una o m\u00e1s \u00d3rdenes, por lo que tendremos que crear una tabla intermedia Actuaci\u00f3nOrden que las conecte. En esta tabla se indicar\u00e1 tambi\u00e9n el empleado que ha realizado la actuaci\u00f3n y el tiempo que ha empleado en ella.</p> <p>En esta soluci\u00f3n he tomado la decisi\u00f3n de que un Empleado realiza una o m\u00e1s Actuaciones por cada Orden, pero cada Actuaci\u00f3n de cada Orden ser\u00e1 realizada por un \u00fanico Empleado. En Actuaci\u00f3nOrden se guardar\u00e1 el tiempo que ha empleado cada empleado en cada actuaci\u00f3n de cada orden. Para saber el tiempo total que dedica un empleado a una Orden se podr\u00edan sumar las horas de todas las actuaciones que ha realizado dicho empleado asociadas a dicha Orden.</p> <p>La relaci\u00f3n Jefe Mec\u00e1nicos no la represento, incluyo un ejemplo de c\u00f3mo podr\u00eda hacerse algo por el estilo al final de la soluci\u00f3n. No la incluyo pues, aparentemente, s\u00f3lo hay un jefe y no se menciona que tenga ninguna funci\u00f3n especial (salvo asignar \u00f3rdenes de trabajo) relevante para el dise\u00f1o de la base de datos, ya que no se dice que se guarde dicha informaci\u00f3n en ning\u00fan lado. Adem\u00e1s no se habla de distintos grupos de mec\u00e1nicos cada uno con su jefe, si no que habr\u00eda un \u00fanico jefe para todos los mec\u00e1nicos. Si queremos reflejar esto podr\u00eda crear un campo EsJefe booleano en la tabla Empleados que sea cierto si el empleado es jefe.</p> <p>Respecto a la relaci\u00f3n entre factura y cliente, aunque la he reflejado en el diagrama no ser\u00eda necesario. Pues se puede llegar desde la factura al cliente a partir de la Orden y el Veh\u00edculo (si decidimos que un veh\u00edculo lo es de un \u00fanico cliente).</p> <pre><code>erDiagram\n\nClientes {\n  int CodigoCliente pk \n  string DNI \n  string Apellidos\n  string Nombre\n  string Direccion\n  string Telefono\n}\n\nVehiculos {\n  string Matricula pk\n  string Marca\n  string Modelo\n  string Color\n  date FechaMatriculacion\n  int CodigoCliente fk\n}\n\nEmpleados {\n  int CodigoEmpleado pk\n  string DNI\n  string Nombre\n  string Apellidos\n  string Direccion\n  string Telefono\n  int CP\n  date FechaAlta\n  string Categoria\n}\n\nOrdenes {\n  int NumeroOrden pk\n  date FechaEntrada\n  int Kms\n  string DescripcionAveria\n  date FechaSalida\n  int HorasTotales\n  boolean Reparado\n  string Observaciones\n  string Matricula fk\n}\n\nActuacionOrden {\n  int NumeroOrden pk,fk\n  string CodigoEmpleado pk,fk\n  string Referencia pk,fk\n  int Horas\n}\n\nActuaciones {\n  string Referencia pk\n  string Descripcion\n  int TiempoEstimado\n  float Precio\n}\n\nRecambiosActuacion {\n  int NumeroOrden pk,fk\n  string CodigoRecambio pk,fk\n  int Unidades\n}\n\nRecambios {\n  string Codigo pk\n  string Descripcion\n  string UnidadBase\n  int Stock\n  float PrecioReferencia\n}\n\nFacturas {\n  int NumeroFactura pk\n  int NumeroOrden fk\n  int CodigoCliente fk\n  date FechaFactura\n  float Import\n}\n\nFacturas }|--|| Clientes : \"se corresponde\"\n\nClientes ||--|{ Vehiculos : \"es propietario de\"\n\nVehiculos ||--|{ Ordenes : \"tiene\"\n\nOrdenes ||--|| Facturas : \"genera\"\nActuacionOrden }|--|| Ordenes : \"tiene\"\nActuacionOrden ||--o{ RecambiosActuacion : \"tiene\"\n\nEmpleados ||--|{ ActuacionOrden : \"realiza\"\n\nActuacionOrden }|--|| Actuaciones : \"se corresponde\"\n\nRecambiosActuacion }|--|| Recambios : \"se corresponde\"</code></pre> <p>Si queremos relacionar a los mec\u00e1nicos directamente con las reparaciones:</p> <pre><code>erDiagram\n\nEmpleados {\n  int CodigoEmpleado pk\n  string DNI\n  string Nombre\n  string Apellidos\n  string Direccion\n  string Telefono\n  int CP\n  date FechaAlta\n}\n\nOrdenes {\n  int NumeroOrden pk\n  date FechaEntrada\n  int Kms\n  string DescripcionAveria\n  date FechaSalida\n  int HorasTotales\n  boolean Reparado\n  string Observaciones\n  string Matricula fk\n}\n\nEmpleadosOrden {\n  int CodigoEmpleado pk,fk\n  int NumeroOrden pk,fk\n  int Horas\n}\n\nEmpleados ||--|{ EmpleadosOrden : \"realiza\"\nOrdenes ||--|{ EmpleadosOrden : \"tiene\"</code></pre> <p>Si queremos distinguir entre los empleados (administrativos, mec\u00e1nicos y jefes):</p> <pre><code>erDiagram\n\nEmpleados {\n  int CodigoEmpleado pk\n  string DNI\n  string Nombre\n  string Apellidos\n  string Direccion\n  string Telefono\n  int CP\n  date FechaAlta\n}\n\nAdministrativos {\n  int CodigoEmpleado pk,fk\n  string datosEspecificos\n}\n\nMecanicos {\n  int CodigoEmpleado pk,fk\n  string datosEspecificos\n}\n\nMecanicosJefe {\n  int CodigoEmpleado pk,fk\n  int CodigoJefe pk,fk\n}\n\nEmpleados ||--|{ Administrativos : \"es\"\nEmpleados ||--|{ Mecanicos : \"es\"\n\nMecanicos ||--|{ MecanicosJefe : \"es jefe\"\nMecanicos ||--o{ MecanicosJefe  : \"tiene asignados\"</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%202/","title":"Ejercicio 1 - Apartado 2","text":"<ul> <li>Enunciado del segundo apartado</li> <li>Soluci\u00f3n</li> <li>Paso a 1FN</li> <li>Paso a 2FN</li> <li>Paso a 3FN</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%202/#enunciado-del-segundo-apartado","title":"Enunciado del segundo apartado","text":"<p>Normaliza la siguiente relaci\u00f3n hasta 3FN, analizando las dependencias entre los atributos:</p> <p>PEDIDO (NumPedido, FechaPedido, CodProveedor, NombreProveedor, Direcci\u00f3nProveedor, CodProducto, NombreProducto, PrecioProducto, Cantidad)</p> <ul> <li>Recoge los datos de los pedidos a los proveedores.</li> <li>Cada producto lo puede suministrar m\u00e1s de un proveedor.</li> <li>Cada pedido incluye varios productos.</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%202/#solucion","title":"Soluci\u00f3n","text":""},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%202/#paso-a-1fn","title":"Paso a 1FN","text":"<p>Podemos ver que en la tabla:</p> <p>Seg\u00fan lo indicado en la teor\u00eda:</p> <p>Una tabla est\u00e1 en Primera Forma Normal (1FN) s\u00ed, y s\u00f3lo s\u00ed, todos los atributos de la misma contienen valores at\u00f3micos, es decir, que cada atributo debe contener un \u00fanico valor del dominio.</p> <p>Veamos ahora la tabla:</p> <p>PEDIDO (NumPedido, FechaPedido, CodProveedor, NombreProveedor, Direcci\u00f3nProveedor, CodProducto, NombreProducto, PrecioProducto, Cantidad)</p> <p>Podr\u00edamos interpretar que la direcci\u00f3n es un atributo compuesto o at\u00f3mico. Si lo tomamos como compuesto simplemente habr\u00eda que descomponerlo en sus elementos y ya estar\u00eda en 1FN.</p> <p>OJO: La clave primaria aqu\u00ed ser\u00eda la combinaci\u00f3n de los campos NumPedido, CodProducto y CodProveedor.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%202/#paso-a-2fn","title":"Paso a 2FN","text":"<p>Volviendo a los apuntes:</p> <p>Una tabla est\u00e1 en segunda forma normal o 2FN cuando est\u00e1 en 1FN y adem\u00e1s todos los atributos que no forman parte de la clave principal tienen dependencia funcional completa de la clave y no de parte de ella. Es obvio que una tabla que est\u00e9 en 1FN y cuya clave est\u00e9 compuesta por un \u00fanico atributo, estar\u00e1 en 2FN.</p> <p>En nuestra tabla, en la que (en este momento) la clave primara es la combinaci\u00f3n de todo lo anterior, no se cumple:</p> <ul> <li>FechaPedido depende \u00fanicamente de NumPedido.</li> <li>NombreProveedor y Direcci\u00f3nProveedor dependen de CodProveedor.</li> <li>NombreProducto y PrecioProducto dependen de CodProducto.</li> <li>Cantidad depende de NumPedido y CodProducto.</li> </ul> <p>As\u00ed que habr\u00eda que dividir la tabla en varias tablas:</p> <ul> <li>PEDIDO (NumPedido, FechaPedido).</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, Direcci\u00f3nProveedor).</li> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto).</li> <li>LINEA_PEDIDO (NumPedido, CodProducto, CodProveedor, Cantidad).</li> </ul> <p>Nota: Hemos de incluir CodProveedor en LINEA_PEDIDO porque un producto puede ser suministrado por varios proveedores y podr\u00eda cambiar en cada pedido.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%202/#paso-a-3fn","title":"Paso a 3FN","text":"<p>Seg\u00fan los apuntes:</p> <p>Una tabla o relaci\u00f3n est\u00e1 en tercera forma normal o 3FN si est\u00e1 en 2FN y no existen atributos que no pertenezcan a la clave primaria que puedan ser conocidos mediante otro atributo que no forme parte de la clave primaria. Es decir, que no existan dependencias funcionales transitivas.</p> <p>En este punto no hay dependencias transitivas. La tabla ya est\u00e1 en 3FN.</p> <p>Si en el enunciado se nos hubiera indicado que un producto s\u00f3lo puede ser suministrado por un proveedor y partimos de:</p> <ul> <li>PEDIDO (NumPedido, FechaPedido).</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, Direcci\u00f3nProveedor).</li> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto).</li> <li>LINEA_PEDIDO (NumPedido, CodProducto, CodProveedor, Cantidad).</li> </ul> <p>Podemos ver que en l\u00ednea pedido CodProveedor depende de CodProducto y no de NumPedido (una dependencia funcional transitiva). Habr\u00eda que dividir la tabla en otras dos:</p> <ul> <li>LINEA_PEDIDO (NumPedido, CodProducto, Cantidad).</li> <li>PROVEEDOR_PRODUCTO (CodProducto, CodProveedor).</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%203/","title":"Ejercicio 1 - Apartado 3","text":"<ul> <li>Enunciado del tercer apartado</li> <li>Soluci\u00f3n</li> <li>V\u00eddeo de la soluci\u00f3n</li> <li>Entidades</li> <li>Relaciones<ul> <li>Cocineros y platos</li> </ul> </li> <li>Diagrama Entidad-Relaci\u00f3n</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%203/#enunciado-del-tercer-apartado","title":"Enunciado del tercer apartado","text":"<p>Vamos a informatizar la gesti\u00f3n del Restaurante Mouro. Se trata de un restaurante de tres plantas, que ofrece distintos servicios a sus clientes. Inicialmente vamos a describir su funcionamiento:</p> <ul> <li>El restaurante tiene una serie de comedores, cada uno de ellos con un n\u00famero fijo de mesas disponibles. De cada comedor interesa: C\u00f3digo y nombre del comedor, capacidad m\u00e1xima de comensales, n\u00famero de mesas, localizaci\u00f3n. Por ejemplo: MA, es el sal\u00f3n \"Mar Abierto\", est\u00e1 en la planta baja, tiene 60 mesas y capacidad para 300 comensales.</li> <li>En cada comedor hay una serie de mesas. De las mesas guardamos el n\u00famero de asientos y quien es el camarero que la atiende. Las mesas se numeran consecutivamente, de forma que ser\u00e1 necesario que se a\u00f1ada al propio c\u00f3digo el del comedor al que corresponden. Por ejemplo: MA, 01 es la mesa 1 del sal\u00f3n Mar Abierto.</li> <li>Los empleados realizan funciones distintas seg\u00fan sean personal de cocina, camareros o personal de administraci\u00f3n del negocio.</li> </ul> <p>De todos ellos recogemos la siguiente informaci\u00f3n: DNI, Nombre, Apellidos, Direcci\u00f3n, Ciudad, CP, tel\u00e9fono, Fecha de alta, Categor\u00eda y Salario.</p> <p>Cuando se trata de camareros queremos saber adem\u00e1s en que turno trabaja y los a\u00f1os de experiencia.</p> <p>De los cocineros necesitamos saber cu\u00e1l es su puesto en la cocina y su especialidad (carnes, pescados, postres, etc.)</p> <p>Del personal de administraci\u00f3n (administrativos) necesitamos conocer el cargo que tiene.</p> <p>No se da el caso de que una misma persona realice m\u00e1s de una funci\u00f3n. Existen, adem\u00e1s otras personas contratadas temporalmente como ayudantes que no se recogen en la anterior descripci\u00f3n.</p> <p>Entre los camareros existen una serie de encargados que supervisan a otros camareros.</p> <ul> <li>Para organizar mejor el trabajo se admiten reservas de los clientes. Cuando se recibe una llamada para hacer una reserva recogemos:</li> <li>N\u00famero de reserva.</li> <li>Fecha y hora de la reserva.</li> <li>Nombre de la persona que hace la reserva.</li> <li>La fecha y hora para la que se hace la reserva.</li> <li>Tipo: Si se trata de comida o cena.</li> <li>El n\u00famero de personas.</li> <li>Otros datos que puedan ser de inter\u00e9s.</li> </ul> <p>Autom\u00e1ticamente se adjudican las mesas necesarias para cubrir la reserva a\u00f1adiendo el n\u00famero de personas que se sentar\u00e1n en cada mesa.</p> <ul> <li>En la carta se exponen una serie de platos de los cuales se guarda: Un c\u00f3digo, el nombre del plato, el tipo de plato (carnes, pescados, primeros, postres, etc.), una breve descripci\u00f3n y el precio.</li> <li>Para llevar mejor la gesti\u00f3n de las compras, de cada plato recogemos los productos o ingredientes que lo componen y en qu\u00e9 cantidad. De los productos guardamos: un c\u00f3digo, la descripci\u00f3n, el stock, la unidad-base (docenas, kg, litros, etc.), el precio por unidad y la categor\u00eda a la que pertenece.</li> <li>Mantenemos tambi\u00e9n informaci\u00f3n de los proveedores que nos suministran esos productos: C\u00f3digo, Nombre, Direcci\u00f3n, CP, Tel\u00e9fono, Fax, Persona de contacto.</li> <li>Por \u00faltimo cuando nuestros clientes nos visitan tomamos nota manualmente de la comanda, y, una vez que hayan terminado realizamos la correspondiente factura que recoge en el encabezado el n\u00famero de factura, fecha y n\u00famero de mesa. A continuaci\u00f3n una relaci\u00f3n de los nombres de los platos, las unidades de cada plato, precio e importe (estos dos datos se obtienen de la informaci\u00f3n almacenada).</li> </ul> <p>Se pide:</p> <p>Obtener el modelo Entidad-Relaci\u00f3n: Entidades, relaciones, atributos, claves principales, cardinalidades, tipos de correspondencia, etc.\\ Obtener el modelo Relacional: pasar del modelo entidad-relaci\u00f3n al modelo relacional aplicando correctamente las reglas de transformaci\u00f3n, justificando la soluci\u00f3n cuando se considere necesario.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%203/#solucion","title":"Soluci\u00f3n","text":""},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%203/#video-de-la-solucion","title":"V\u00eddeo de la soluci\u00f3n","text":"<p>Enlace al v\u00eddeo (YouTube)</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%203/#entidades","title":"Entidades","text":"<p>A partir del enunciado, se pueden identificar las siguientes entidades:</p> <ul> <li>Comedor (C\u00f3digo, Nombre, Capacidad, N\u00fameroMesas, Localizaci\u00f3n).</li> <li>Mesa (C\u00f3digo, N\u00fameroAsientos, DNICamarero).</li> <li>Empleado (DNI, Nombre, Apellidos, Direcci\u00f3n, Ciudad, CP, Tel\u00e9fono, FechaAlta, Categor\u00eda, Salario)</li> </ul> <p>Los empleados se dividen en tres sub-entidades (especializaci\u00f3n):</p> <ul> <li>Camarero (DNIEmpleado, Turno, A\u00f1osExperiencia).</li> <li>Cocinero (DNIEmpleado, Puesto, Especialidad).</li> <li>PersonalAdministraci\u00f3n (DNIEmpleado, Cargo).</li> </ul> <p>El caso de los ayudantes es confuso pues no se indica si son empleados o no. Se asume que s\u00ed lo son, por lo que se a\u00f1ade la entidad Ayudante (DNIEmpleado).</p> <ul> <li> <p>Ayudante (DNIEmpleado).</p> </li> <li> <p>Reserva (NumReserva, FechaHora, NombreReserva, FechaHoraReserva, Tipo, NumPersonas, Notas).</p> </li> </ul> <p>Puesto que s\u00f3lo existe una \u00fanica carta no tiene sentido crear dicha entidad. Todos los platos son parte de la carta.</p> <ul> <li>Plato (C\u00f3digo, Nombre, Tipo, Descripci\u00f3n, Precio).</li> <li>Producto (C\u00f3digo, Descripci\u00f3n, Stock, UnidadBase, PrecioUnidad, Categor\u00eda).</li> <li>Proveedor (C\u00f3digo, Nombre, Direcci\u00f3n, CP, Tel\u00e9fono, Fax, PersonaContacto).</li> <li>Factura (NumFactura, Fecha, NumMesa).</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%203/#relaciones","title":"Relaciones","text":"<p>Un Comedor estar\u00e1 compuesto de varias Mesas. Por tanto, la relaci\u00f3n entre ambas entidades es de tipo 1:N. Los Empleados pueden ser Camareros, Cocineros o PersonalAdministraci\u00f3n. Por tanto, la relaci\u00f3n entre Empleado y cada una de las sub-entidades es de tipo N:1. Cada Empleado ser\u00e1 de un tipo y cada tipo tendr\u00e1 uno o m\u00e1s Empleados.</p> <p>Dejemos a parte por el momento a los Ayudantes.</p> <p>Respecto a la Reserva se dice que se le asignan Mesas por lo que una reserva tendr\u00e1 una o m\u00e1s mesas, adem\u00e1s se indicar\u00e1 que, para cada Reserva una mesa estar\u00e1 ocupada por un n\u00famero espec\u00edfico de personas. Por tanto, la relaci\u00f3n entre Reserva y Mesa es de tipo N:M. Una mesa puede estar asociada a varias reservas y una reserva puede ocupar varias mesas.</p> <p>Un Plato estar\u00e1 compuesto por uno o m\u00e1s Productos y un Producto podr\u00e1 formar parte de distintos Platos. Por tanto, la relaci\u00f3n entre Plato y Producto es de tipo M:N. Todo produto ha de ser provisto por (al menos) un Proveedor. Por tanto, la relaci\u00f3n entre Producto y Proveedor N:1 (consideraremos que cada producto s\u00f3lo puede ser provisto por un \u00fanico proveedor y que un proveedor pude proveer varios productos).</p> <p>Una Factura estar\u00e1 compuesta por uno o m\u00e1s Platos y un Plato podr\u00e1 formar parte de varias Facturas. Por tanto, la relaci\u00f3n entre Factura y Plato es de tipo M:N. A su vez una factura estar\u00e1 asociada a una \u00fanica mesa pero una mesa podr\u00e1 tener varias facturas (a distintas horas, en distintas reservas). Por tanto, la relaci\u00f3n entre Factura y Mesa es de tipo N:1.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%203/#cocineros-y-platos","title":"Cocineros y platos","text":"<p>En el enunciado no se nos indica nada respecto a la relaci\u00f3n entre cocineros y platos, pero podemos asumir que un cocinero puede preparar varios platos y un plato puede ser preparado por varios cocineros. Por tanto, la relaci\u00f3n entre Cocinero y Plato es de tipo M:N.</p> <p>En cualquier caso, en el enunciado no se hace referencia alguna a esta posible relaci\u00f3n ni se especifica ninguna informaci\u00f3n relativa a la misma. Por este motivo no a\u00f1adiremos la relaci\u00f3n entre Cocinero y Plato. Si a\u00f1adimos cosas que no se nos piden corremos dos riesgos, el de crear tablas que no se necesitas (y probablemente no se pueden rellenar) y, al complicar m\u00e1s el modelo habr\u00e1 m\u00e1s posibilidades de cometer errores.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Apartado%203/#diagrama-entidad-relacion","title":"Diagrama Entidad-Relaci\u00f3n","text":"<pre><code>erDiagram\n\nComedor {\n  string Codigo pk\n  string Nombre\n  int Capacidad\n  int NumeroMesas\n  string Localizacion\n}\n\nMesa {\n  string CodigoComedor pk,fk\n  int NumeroMesa pk\n  int NumeroAsientos\n  sting DNIEmpleado\n}\n\nEmpleado {\n  string DNI pk\n  string Nombre\n  string Apellidos\n  string Direccion\n  string Ciudad\n  int CP\n  int Telefono\n  date FechaAlta\n  enum Categoria\n  float Salario\n}\n\nCamarero {\n  string DNIEmpleado pk,fk\n  enum Turno\n  int AnosExperiencia\n}\n\nCocinero {\n  string DNIEmpleado pk,fk\n  enum Puesto\n  enum Especialidad\n}\n\nPersonalAdministracion {\n  string DNIEmpleado pk,fk\n  enum Cargo\n}\n\nComedor ||--|{ Mesa : \"tiene\"\nMesa  }|--|| Camarero : \"atendida\"\n\nEmpleado ||--|{ Camarero : \"es\"\nEmpleado ||--|{ Cocinero : \"es\"\nEmpleado ||--|{ PersonalAdministracion : \"es\"\n\nReserva {\n  int NumReserva pk\n  date FechaHora\n  string NombreReserva\n  date FechaHoraReserva\n  enum Tipo\n  int NumPersonas\n  string Notas\n}\n\nReserva }|--|{ Mesa : \"asignada\"\n\nPlato {\n  string Codigo pk\n  string Nombre\n  enum Tipo\n  string Descripcion\n  float Precio\n}\n\nProducto {\n  string Codigo pk\n  string Descripcion\n  int Stock\n  enum UnidadBase\n  float PrecioUnidad\n  enum Categoria\n}\n\nProveedor {\n  string Codigo pk\n  string Nombre\n  string Direccion\n  int CP\n  int Telefono\n  int Fax\n  string PersonaContacto\n}\n\nPlato }|--|{ Producto : \"compuesto\"\nProducto }|--|| Proveedor : \"provee\"\n\nFactura {\n  int NumFactura pk\n  date Fecha\n  string CodigoComedor fk\n  int NumeroMesa fk\n}\n\nFactura }|--|{ Plato : \"compuesta\"\nFactura }|--|| Mesa : \"corresponde\"</code></pre> <p>El diagrama relacional se obtendr\u00eda del anterior deshaciendo las relaciones M:N (creando una nueva tabla que interconecte las entidades implicadas) y definiendo todas la claves for\u00e1neas que falten:</p> <pre><code>erDiagram\n\nComedor {\n  string Codigo pk\n  string Nombre\n  int Capacidad\n  int NumeroMesas\n  string Localizacion\n}\n\nMesa {\n  string CodigoComedor pk,fk\n  int NumeroMesa pk\n  int NumeroAsientos\n  sting DNIEmpleado\n}\n\n\nEmpleado {\n  string DNI pk\n  string Nombre\n  string Apellidos\n  string Direccion\n  string Ciudad\n  int CP\n  int Telefono\n  date FechaAlta\n  enum Categoria\n  float Salario\n}\n\nCamarero {\n  string DNIEmpleado pk,fk\n  enum Turno\n  int AnosExperiencia\n}\n\nCocinero {\n  string DNIEmpleado pk,fk\n  enum Puesto\n  enum Especialidad\n}\n\nPersonalAdministracion {\n  string DNIEmpleado pk,fk\n  enum Cargo\n}\n\nComedor ||--|{ Mesa : \"tiene\"\nMesa }|--|| Camarero : \"atendida\"\n\nEmpleado ||--|{ Cocinero : \"es\"\nEmpleado ||--|{ PersonalAdministracion : \"es\"\nEmpleado ||--|{ Camarero : \"es\"\n\nReserva {\n  int NumReserva pk\n  date FechaHora\n  string NombreReserva\n  date FechaHoraReserva\n  enum Tipo\n  int NumPersonas\n  string Notas\n}\n\nReservaMesa {\nint NumReserva pk,fk\nstring CodigoComedor pk,fk\nint NumeroMesa pk,fk\nint NumPersonas\n}\n\nReserva ||--|{ ReservaMesa : \"asignada\"\nMesa ||--|{ ReservaMesa : \"ocupada\"\n\nPlato {\n  string Codigo pk\n  string Nombre\n  enum Tipo\n  string Descripcion\n  float Precio\n}\n\nProducto {\n  string Codigo pk\n  string Descripcion\n  int Stock\n  enum UnidadBase\n  float PrecioUnidad\n  enum Categoria\n}\n\nProveedor {\n  string Codigo pk\n  string Nombre\n  string Direccion\n  int CP\n  int Telefono\n  int Fax\n  string PersonaContacto\n}\n\nPlato }|--|{ Producto : \"compuesto\"\n\nProductoPlato {\n  string CodigoPlato pk,fk\n  string CodigoProducto pk,fk\n  int Cantidad\n}\n\nProductoPlato }|--|| Producto : \"compuesto\"\nProductoPlato }|--|| Plato : \"compuesto\"\nProducto }|--|| Proveedor : \"provee\"\n\nFactura {\n  int NumFactura pk\n  int NumReserva fk\n  string CodigoComedor fk\n  int NumeroMesa fk\n  date Fecha\n}\n\nFacturaPlato {\n  int NumFactura pk,fk\n  string CodigoPlato pk,fk\n  int Unidades\n}\n\nFactura ||--|{ FacturaPlato : \"compuesta\"\nPlato ||--|{ FacturaPlato : \"compuesta\"\n\nFactura }|--|| Mesa: \"corresponde\"</code></pre> <p>Representar a los camareros encargados que supervisan a otros camareros: Un supervisor supervisar\u00e1 a uno o m\u00e1s camareros y todo camarero ser\u00e1 supervisado por... aqu\u00ed tenemos varias opciones:</p> <ul> <li>Un supervisor supervisar\u00e1 a todos los camareros (que no sean supervisores): En este caso crear\u00edamos un atributo Supervisor que ser\u00eda verdadero para los supervisores y falso para los supervisados.</li> <li>Un supervisor supervisar\u00e1 a un conjunto de camareros y s\u00f3lo a ellos. En este caso crear\u00edamos un atributo DNISupervisor en la entidad Camarero que ser\u00eda clave for\u00e1nea de la entidad Camarero y nos indicar\u00eda quien es el supervisor de cada camarero (los supervisores tendr\u00eda dicho atributo a nulo).</li> <li>Un supervisor supervisar\u00e1 a un conjunto de camareros pero dichos conjuntos se solapan en grupos. En este caso necesitar\u00edamos una entidad intermedia que relacione a los supervisores con los supervisados CamareroSupervisor.</li> </ul> <pre><code>erDiagram\n\nCamarero {\n  string DNIEmpleado pk\n  enum Turno\n  int AnosExperiencia\n  boolean Supervisor\n}C\n\nCamarero ||--o{ Camarero : \"supervisa\"</code></pre> <pre><code>erDiagram\n\nCamarero {\n  string DNIEmpleado pk\n  enum Turno\n  int AnosExperiencia\n  string DNISupervisor fk\n}\n\nCamarero ||--o{ Camarero : \"supervisa\"</code></pre> <p>```mermaid erDiagram</p> <p>Camarero {   string DNIEmpleado pk   enum Turno   int AnosExperiencia }</p> <p>Camarero }|--o{ CamareroSupervisor : \"participa en\"</p> <p>CamareroSupervisor {   string DNICamSupervisor pk, fk   string DNICamSupervidado pk, fk }</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20Diego%20Sebasti%C3%A1n/","title":"Correcci\u00f3n de Diego Sebasti\u00e1n","text":"<ul> <li>Apartado 1</li> <li>Apartado 2</li> <li>Apartado 3</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20Diego%20Sebasti%C3%A1n/#apartado-1","title":"Apartado 1","text":"<ul> <li>Las relaciones de Cliente no est\u00e1n bien. Cliente no tiene que relacionarse con Reparaci\u00f3n si no con Veh\u00edculo y Factura. Un Cliente llevar\u00e1 a reparar uno o m\u00e1s Veh\u00edculos y pagar\u00e1 una o m\u00e1s Facturas. A su vez todo Veh\u00edculo ser\u00e1 de un Cliente y lo mismo para las Facturas.</li> <li>La relaci\u00f3n entre Factura y Reparaci\u00f3n deber\u00eda ser uno a uno. Una Reparaci\u00f3n genera una \u00fanica Factura y una Factura lo es de una \u00fanica Reparaci\u00f3n.</li> <li>En el enunciado se nos dice que una Factura tiene un atributo CodigoCliente que es clave for\u00e1nea de Cliente. Por lo tanto, la relaci\u00f3n entre Factura y Cliente tambi\u00e9n deber\u00eda ser uno a uno.</li> </ul> <p>Hay alg\u00fan otro error de cardinalidad en las relaciones. Es mejor que compares tu soluci\u00f3n con la soluci\u00f3n que publicar\u00e9 en breve.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20Diego%20Sebasti%C3%A1n/#apartado-2","title":"Apartado 2","text":"<p>Tu soluci\u00f3n es:</p> <ul> <li>PEDIDO (NumPedido, FechaPedido, CodProveedor).</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, Direcci\u00f3nProveedor).</li> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto).</li> <li>PRODUCTO_PEDIDO (NumPedido, CodProducto, Cantidad).</li> </ul> <p>Pero en el enunciado se nos dice que:</p> <p>Cada producto lo puede suministrar m\u00e1s de un proveedor. Cada pedido incluye varios productos.</p> <p>Tal como lo tienes, al indicar CodProveedor en la tabla PEDIDO est\u00e1s diciendo que un pedido solo puede ser de un proveedor, y esto no es correcto. Adem\u00e1s, en la tabla PRODUCTO_PEDIDO deber\u00edas incluir el campo CodProveedor para indicar de qu\u00e9 proveedor es cada producto.</p> <p>La soluci\u00f3n correcta ser\u00eda:</p> <ul> <li>PEDIDO (NumPedido, FechaPedido): Representa el pedido.</li> <li>L\u00cdNEA_PEDIDO (NumPedido, CodProducto, CodProveedor, Cantidad): Relaciona los productos con los pedidos y los proveedores y la cantidad solicitada.</li> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto): Almacena la informaci\u00f3n de cada producto.</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, Direcci\u00f3nProveedor): Almacena la informaci\u00f3n de cada proveedor.</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20Diego%20Sebasti%C3%A1n/#apartado-3","title":"Apartado 3","text":"<ul> <li>La relaci\u00f3n entre Plato y Producto es incorrecta ya que dices que un producto s\u00f3lo puede aparecer en un plato. La cardinalidad correcta ser\u00eda muchos a muchos.</li> </ul> <p>No sigo corrigiendo este apartado porque el gr\u00e1fico est\u00e1 cortado.</p> <p>Si tienes dudas, crees que no he entendido bien algo o que me he equivocado en alguna correcci\u00f3n, no dudes en dec\u00edrmelo.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20Jes%C3%BAs%20Rozas/","title":"Correcci\u00f3n Jes\u00fas Rozas","text":"<ul> <li>Apartado 1</li> <li>Apartado 2</li> <li>Apartado 3</li> </ul> <p>Hola Jes\u00fas.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20Jes%C3%BAs%20Rozas/#apartado-1","title":"Apartado 1","text":"<ul> <li>La relaci\u00f3n entre Clientes y Veh\u00edculos y Facturas est\u00e1n invertidas. Tal como lo tienes escrito est\u00e1s diciendo que N clientes tienen un veh\u00edculo y lo mismo con las facturas. Tienes que indicar el n\u00famero en el lado opuesto.</li> <li>La relaci\u00f3n entre Reparaciones y Veh\u00edculos no est\u00e1 bien. Una reparaci\u00f3n se realiza sobre un \u00fanico veh\u00edculo aunque un veh\u00edculo puede tener varias reparaciones.</li> <li>La relaci\u00f3n entre Reparaciones y Facturas no est\u00e1 bien. Una Reparaci\u00f3n genera una \u00fanica Factura y una Factura lo es de una \u00fanica Reparaci\u00f3n.</li> </ul> <p>Hay varios errores del mismo tipo, cardinalidades de las relaciones.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20Jes%C3%BAs%20Rozas/#apartado-2","title":"Apartado 2","text":"<p>Este apartado no est\u00e1 bien. La idea es aplicar sucesivamente las transformaciones a 1FN, 2FN y 3FN a\u00f1adiendo las tablas que hagan falta. Mostrar\u00e9 el proceso en detalle en la soluci\u00f3n que publicar\u00e9. El resultado ha de ser:</p> <ul> <li>PROVEEDOR (CodProveedor, NombreProveedor, Direcci\u00f3nProveedor).</li> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto).</li> <li>PEDIDO (NumPedido, FechaPedido).</li> <li>LINEA PEDIDO (NumPedido, CodProveedor, CodProducto, Cantidad).</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20Jes%C3%BAs%20Rozas/#apartado-3","title":"Apartado 3","text":"<ul> <li>La relaci\u00f3n entre Reservas y Mesas no est\u00e1 bien. La cardinalidad correcta es muchos a muchos ya que una reserva puede incluir varias mesas pero tambi\u00e9n es cierto que una mesa ir\u00e1 apareciendo en distintas reservas a lo largo del tiempo.</li> <li>La relaci\u00f3n entre Mesas y Camareros deber\u00eda ser de muchos a uno. Ya que se nos dice que una mesa tiene asignado un \u00fanico camarero. La otra opci\u00f3n ser\u00eda indicar que un camarero puede atender distintas mesas en distintos d\u00edas, pero no se nos indica.</li> <li>Tambi\u00e9n dices que una Mesa puede tener varios Comedores y que un comedor puede tener cero o una mesa.</li> </ul> <p>Hay m\u00e1s errores del mismo tipo. Es mejor que compares tu soluci\u00f3n con la soluci\u00f3n que publicar\u00e9 en breve.</p> <p>Si ves que no he interpretado correctamente tus diagramas o que he cometido alg\u00fan error no dudes en dec\u00edrmelo, ponemos y d\u00eda y lo vemos en detalle. Lo mismo si tienes cualquier otra duda sobre esta tarea.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20Roc%C3%ADo/","title":"Correcci\u00f3n Roc\u00edo","text":"<p>Hola Roc\u00edo.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20Roc%C3%ADo/#apartado-1","title":"Apartado 1","text":"<ul> <li>En el enunciado se nos dice que la Factura incluye el atributo C\u00f3digo_Cliente. Esto ya nos indica que ha de haber una relaci\u00f3n entre Factura y Cliente que no reflejas. Podr\u00edas llegar al cliente a trav\u00e9s de Reparaci\u00f3n y Veh\u00edculo pero podr\u00eda dar problemas si un Veh\u00edculo cambiase de propietario a lo largo del tiempo. Es decir, podr\u00edas tener una factura y no saber a qu\u00e9 cliente hace referencia.</li> <li>Recambios no puede tener relaci\u00f3n N:1 con Reparaciones ya que un recambio podr\u00e1 utilizarse en m\u00faltiples reparaciones (Recambios no almacena referencias a recambios reales, si no que indica el stock que hay de un tipo de recambio, por lo que se repetir\u00e1 en distintas reparaciones).</li> <li>Tendr\u00edas que indicar la cardinalidad en todas las relaciones (hay algunas que las representas con flechas que, entiendo, no se contemplan en el Crow's foot).</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20Roc%C3%ADo/#apartado-2","title":"Apartado 2","text":"<p>La soluci\u00f3n ser\u00eda empezar por dividir en tres entidades con los atributos relacionados entre si:</p> <ul> <li>PEDIDO (NumPedido, FechaPedido)</li> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto)</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, Direcci\u00f3nProveedor)</li> </ul> <p>Nos queda sin asinar el atributo Cantidad. Para que tenga sentido tendremos que relacionar PEDIDO con PRODUCTO y as\u00ed a\u00f1adir\u00edamos:</p> <ul> <li>LINEA_PEDIDO (NumPedido, CodProducto, Cantidad)</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20Roc%C3%ADo/#apartado-3","title":"Apartado 3","text":"<ul> <li>La Factura deber\u00eda tener una relaci\u00f3n con Mesas ya que se nos indica en el enunciado que la Factura tiene el atributo N\u00famero Mesa. Esto nos indica que una factura se asocia a una mesa. Hemos de tener en cuenta que N\u00famero Mesa no es la clave primaria de mesa. Se nos indica que la clave primaria est\u00e1 compuesta por Cod. Comedor y N\u00famero Mesa.</li> <li>Una Factura estar\u00e1 asociada a uno o m\u00e1s Platos pero los Platos tambi\u00e9n aparecer\u00e1n en m\u00faltiples facturas. Por tanto, la relaci\u00f3n entre Factura y Plato es N:M. Es decir, un Plato puede estar en m\u00faltiples facturas y una Factura puede tener m\u00faltiples platos.</li> <li>No representas la relaci\u00f3n que hay entre Camarero y Mesa. Se nos dice que una Mesa tiene asignado un \u00fanico Camarero (y un camarero atiende a una o m\u00e1s mesas).</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Alejandro%20Fojo/","title":"Correcci\u00f3n de Alejandro Fojo","text":"<p>Hola Alejandro.</p> <ul> <li>Apartado 1</li> <li>Apartado 2</li> <li>Apartado 3</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Alejandro%20Fojo/#apartado-1","title":"Apartado 1","text":"<ul> <li>Faltan entidades Recambios y Actuaciones y Facturas.</li> </ul> <p>Hay bastantes errores y cosas que mejorar por lo que te recomiendo que la compares con la soluci\u00f3n que publicar\u00e9 en breve.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Alejandro%20Fojo/#apartado-2","title":"Apartado 2","text":"<p>Tu soluci\u00f3n es:</p> <ul> <li>PEDIDO (NumPedido, CodProveedor, FechaPedido)</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, Direcci\u00f3nProveedor)</li> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto)</li> <li>DETALLE_PEDIDO (NumPedido, CodProducto, Cantidad)</li> </ul> <p>Esta soluci\u00f3n no es completamente correcta. En el enunciado se nos indica que cada pedido puede tener varios productos. De este modo, tu soluci\u00f3n obliga a que los productos de un pedido hayan de ser todos de un mismo proveedor (pues incluyes el campo CodProveedor en la tabla PEDIDO).</p> <p>La soluci\u00f3n correcta ser\u00eda:</p> <ul> <li>PEDIDO (NumPedido, FechaPedido)</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, Direcci\u00f3nProveedor)</li> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto)</li> <li>DETALLE_PEDIDO (NumPedido, CodProducto, Cantidad)</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Alejandro%20Fojo/#apartado-3","title":"Apartado 3","text":"<p>De nuevo faltan varias entidades y relaciones. Comp\u00e1rla con la soluci\u00f3n que publicar\u00e9 y si tienes alguna duda, pregunta.</p> <p>Si hay algo que no he entendido de tu tarea, he cometido alg\u00fan error o, simplemente, tienes alguna duda, por favor, h\u00e1zmelo saber.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Alejandro/","title":"Correcci\u00f3n de Alejandro","text":"<p>Hola Alejandro, a continuaci\u00f3n te comento lo que he visto al corregir tu tarea.</p> <ul> <li>Apartado 1</li> <li>Apartado 2</li> <li>Apartado 3</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Alejandro/#apartado-1","title":"Apartado 1","text":"<ul> <li>En tu diagrama muestras que la relaci\u00f3n entre Cliente y Veh\u00edculo es de uno a uno. En realidad la relaci\u00f3n deber\u00eda de ser de uno a muchos, ya que un cliente puede tener varios veh\u00edculos.</li> <li>En la relaci\u00f3n entre Veh\u00edculo y Reparaci\u00f3n pones que cada veh\u00edculo s\u00f3lo puede tener una reparaci\u00f3n, pero que una reparaci\u00f3n lo puede ser de m\u00faltiples veh\u00edculos. Esto es al rev\u00e9s. Un Veh\u00edculo puede ser reparado varias veces (a lo largo de su vida) y una reparaci\u00f3n hace referencia siempre a un \u00fanico veh\u00edculo.</li> <li>Con respecto a las relaciones de Factura, muestras correctamente que ha una relaci\u00f3n uno a uno entre factura y reparaci\u00f3n, pero tambi\u00e9n deber\u00eda aparecer otra relaci\u00f3n  uno a uno entre Factura y Cliente, ya que una factura (se nos dice en el enunciado) tiene un atributo que es clave for\u00e1nea para Cliente CodigoCliente.</li> </ul> <p>Por lo dem\u00e1s lo veo bastante bien. Deber\u00edas, en todo caso, echarle un ojo a la soluci\u00f3n propuesta (que publicar\u00e9 en breve) y compararla con la tuya para ver si hay algo que se te ha pasado.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Alejandro/#apartado-2","title":"Apartado 2","text":"<p>La soluci\u00f3n que propones es:</p> <ol> <li>PEDIDO (NumPedido, FechaPedido, CodProveedor): Representa el pedido y el proveedor asociado.</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, Direcci\u00f3nProveedor): Almacena la informaci\u00f3n de cada proveedor.</li> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto): Almacena la informaci\u00f3n de cada producto.</li> <li>PRODUCTO_PEDIDO (NumPedido, CodProducto, Cantidad): Relaciona los productos con los pedidos y la cantidad solicitada.</li> </ol> <p>Si te fijas se nos dice en el enunciado que:</p> <p>Cada producto lo puede suministrar m\u00e1s de un proveedor. Cada pedido incluye varios productos.</p> <p>En tu tabla PEDIDO incluyes el atributo CodProveedor. Esto es incorrecto ya que un pedido puede tener varios productos y cada producto puede ser suministrado por m\u00e1s de un proveedor.</p> <p>La soluci\u00f3n correcta ser\u00eda:</p> <ul> <li>PEDIDO (NumPedido, FechaPedido): Representa el pedido.</li> <li>PRODUCTO_PEDIDO (NumPedido, CodProducto, CodProveedor, Cantidad): Relaciona los productos con los pedidos y la cantidad solicitada.</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Alejandro/#apartado-3","title":"Apartado 3","text":"<ul> <li>En la relaci\u00f3n entre Reserva y Mesa indicas que una reserva lo ser\u00e1 de un sola mesa, y que una mesa solo puede tener una reserva. Esto es incorrecto ya que se indica espl\u00edcitamente en el enunciado que una reserva puede ser de varias mesas y una mesa aparecer\u00e1 en distintas reservas a lo largo del tiempo. Tal como lo tienes tu estar\u00edas diciendo que si una mesa aparece en una reserva nunca podr\u00eda volver a usarse (en otras).</li> <li>No reflejas la relaci\u00f3n entre Camarero y Mesa (una mesa tendr\u00e1 asignado un \u00fanico camarero).</li> <li>Tampoco muestras la relaci\u00f3n entre Factura y Mesa y Plato y Mesa. En el enunciado se nos dice que una mesa puede tener varias facturas y que un plato puede ser servido en varias mesas.</li> <li>La cardinalidad de la relaci\u00f3n entre Plato y Producto es incorrecta. Un Plato puede estar compuesto por varios productos y un producto podr\u00e1 aparecer en distintos platos. Ser\u00e1 M:N, muchos a muchos.</li> </ul> <p>Te recomendar\u00eda que compruebes la soluci\u00f3n propuesta (que publicar\u00e9 en breve), y que las compares con la tuya. Si tienes dudas, crees que no he entendido bien algo o que me he equivocado en alguna correcci\u00f3n, no dudes en dec\u00edrmelo.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Breixo/","title":"Correcci\u00f3n de Breixo","text":"<p>Hola Breixo.</p> <ul> <li>Apartado 1</li> <li>Apartado 2</li> <li>Apartado 3</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Breixo/#apartado-1","title":"Apartado 1","text":"<ul> <li>La entidad EMPLEADO debe tener una relaci\u00f3n con REPARACI\u00f3N ya que se nos dice que en una REPARACI\u00f3N puede participar varios EMPLEADOS. Tambi\u00e9n se nos dice que las ACTUACIONES ser\u00e1n realizadas por EMPLEADOS, por lo que tambi\u00e9n deber\u00edan de estar relacionados.</li> <li>Una FACTURA lo es de una \u00fanica REPARACI\u00f3N por lo que deber\u00eda relacionarse 1:1.</li> <li>Lo mismo entre FACTURA y CLIENTE.</li> <li>Tampoco se relaciona REPARACI\u00f3N con VEH\u00cdCULO.</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Breixo/#apartado-2","title":"Apartado 2","text":"<p>Est\u00e1 bien.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Breixo/#apartado-3","title":"Apartado 3","text":"<ul> <li>La FACTURA no se relaciona con RESERVAS. Ser\u00eda l\u00f3gico pero en el enunciado se nos dice que la factura se genera a partir de una MESA.</li> <li>Algo parecido sucede entre MESA y PLATO, ya que se indica que una mesa pedir\u00e1 varios platos.</li> <li>La relaci\u00f3n que representas entre PLATO e INGREDIENTE no es correcta ya que, adem\u00e1s de que una plato pueda incluir varios ingredientes, un mismo ingrediente puede estar en diferentes platos.</li> </ul> <p>Por lo dem\u00e1s bastante bien. Comp\u00e1rala con la soluci\u00f3n que publicar\u00e9 y si tienes alguna duda, pregunta.</p> <p>Si hay algo que no he entendido de tu tarea, he cometido alg\u00fan error o, simplemente, tienes alguna duda, por favor, h\u00e1zmelo saber.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Edgar/","title":"Correcci\u00f3n de Edgar","text":"<p>Hola Edgar.</p> <ul> <li>Apartado 1</li> <li>Apartado 2</li> <li>Apartado 3</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Edgar/#apartado-1","title":"Apartado 1","text":"<ul> <li>Facturas deber\u00eda de relacionarse con Reparaci\u00f3n y Clientes ambos siendo relaciones uno a uno.</li> </ul> <p>Por lo dem\u00e1s est\u00e1 bastante bien.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Edgar/#apartado-2","title":"Apartado 2","text":"<p>Le veo un problema, no hay forma de saber el proveedor de un producto. En el texto indicas que tu soluci\u00f3n es:</p> <ul> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto)</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, DireccionProveedor)</li> <li>PEDIDO (NumPedido, FechaPedido)</li> <li>DETALLE_PEDIDO (NumPedido, CodProducto, Cantidad)</li> </ul> <p>En este caso no podemos saber qu\u00e9 proveedor ha suministrado el producto.</p> <p>Luego en el diagrama muestras la siguiente soluci\u00f3n:</p> <ul> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto)</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, DireccionProveedor)</li> <li>PEDIDO (NumPedido, CodProveedor, FechaPedido)</li> <li>DETALLE_PEDIDO (NumPedido, CodProducto, Cantidad)</li> </ul> <p>Esta soluci\u00f3n tampoco es correcta ya que en el enunciado se indica que en un pedido pueden haber productos de diferentes. Y si lo dejas as\u00ed, s\u00f3lo podr\u00edan ser del mismo proveedor.</p> <p>La soluci\u00f3n correcta ser\u00eda:</p> <ul> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto)</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, DireccionProveedor)</li> <li>PEDIDO (NumPedido, FechaPedido)</li> <li>DETALLE_PEDIDO (NumPedido, CodProveedor, CodProducto, Cantidad)</li> </ul> <p>Ahora s\u00f3lo podr\u00edan ser del mismo proveedor.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Edgar/#apartado-3","title":"Apartado 3","text":"<ul> <li>La relaci\u00f3n entre MESAS y COMEDOR no puede ser 1:1, ya que se dice que un comedor tendr\u00e1 varias mesas.</li> <li>La relaci\u00f3n entre Facturas y Mesas tampoco est\u00e1 bien ya que la Factura tiene que ser de una mesa pero una mesa tendr\u00e1 muchas facturas (a lo largo del tiempo).</li> <li>La relaci\u00f3n entre Platos y Productos no puede ser 1:1 ya que esto significar\u00eda que un plato s\u00f3lo podr\u00eda estar compuesto de un producto y que un producto solo se podr\u00eda usar en un plato. La relaci\u00f3n deber\u00eda ser M:N.</li> </ul> <p>Por lo dem\u00e1s bastante bien.</p> <p>Si crees que no entendido bien algo de tu ejercicio, he cometido alg\u00fan error o simplemente tienes alguna duda ponte en contacto conmigo y lo resolvemos.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Laura/","title":"Correcci\u00f3n de Laura","text":"<ul> <li>Apartado 1</li> <li>Apartado 2</li> <li>Apartado 3</li> </ul> <p>Hola Laura.</p> <p>Cuando uses una notaci\u00f3n intenta ce\u00f1irte a la misma. Si eliges la notaci\u00f3n de Chen usa la notaci\u00f3n de Chen y si usas Crow's Foot pues usa Crow's Foot. Pero no me mezcles las dos. Te corrijo esta tarea as\u00ed pero en el examen no lo hagas.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Laura/#apartado-1","title":"Apartado 1","text":"<ul> <li>En el enunciado se nos indica que una reparaci\u00f3n puede ser realizada por m\u00faltiples Empleados. En tu diagrama no se ve claro. No puedes poner la pata de pollo en el lado del rombo/relaci\u00f3n, no tiene sentido. La relaci\u00f3n deber\u00eda ser de n a m.</li> </ul> <pre><code>erDiagram\n\nEmpleado {\n  string codEmpleado pk\n  etc etc\n}\n\nReparacion {\n  string referencia pk\n  etc etc\n}\n\nEmpleado }|--|{ Reparacion : \"Realiza\"</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Laura/#apartado-2","title":"Apartado 2","text":"<p>Todo correcto.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Laura/#apartado-3","title":"Apartado 3","text":"<p>No aparece.</p> <p>Si tienes cualquier duda sobre la correcci\u00f3n no dudes en dec\u00edrmelo, ponemos un d\u00eda y lo vemos en detalle.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Maneiro/","title":"Correcci\u00f3n","text":"<ul> <li>Apartado 1</li> <li>Apartado 2</li> </ul> <p>Hola Roberto.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Maneiro/#apartado-1","title":"Apartado 1","text":"<ul> <li>En el enunciado se indica que la Reparaci\u00f3n se realiza sobre un \u00fanico Veh\u00edculo. Esto puede verse por varios motivos: es l\u00f3gico que lo que se repare en el taller sean los veh\u00edculos y adem\u00e1s se nos indica que matr\u00edcula es una atributo de Reparaci\u00f3n (clave for\u00e1nea de Veh\u00edculo). Tu no lo reflejas.</li> <li>Indicas que los Empleados realizan las Facturas pero no se nos dice esto en el enunciado. A\u00f1ades los atributos (claves for\u00e1neas) cod. empleado, cod reparaci\u00f3n, y cod cliente sin reflejar las relaciones. En la soluci\u00f3n correcta Factura est\u00e1 relacionada con Cliente (un cliente tendr\u00e1 una o m\u00e1s facturas y cada factura lo ser\u00e1 de un \u00fanico cliente) y con Reparaci\u00f3n (toda reparaci\u00f3n generar\u00e1 una \u00fanica factura y toda factura lo ser\u00e1 de una \u00fanica reparaci\u00f3n).</li> <li>En el enunciado se indica que una Reparaci\u00f3n estar\u00e1 compuestas de m\u00faltiples Actuaciones por lo que deber\u00edan estar relacionadas y en tu diagrama no se puede apreciar.</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Maneiro/#apartado-2","title":"Apartado 2","text":"<p>La soluci\u00f3n correcta ser\u00eda la siguiente:</p> <ul> <li>PROVEEDOR (CodProveedor, NombreProveedor, Direcci\u00f3nProveedor).</li> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto).</li> <li>PEDIDO (NumPedido, FechaPedido).</li> <li>LINEA PEDIDO (NumPedido, CodProveedor, CodProducto, Cantidad)</li> </ul> <p>Es \"sencillo\" pero bastante largo de explicar, lo explicar\u00e9 con detalle en la soluci\u00f3n (que publicar\u00e9 en breve). Si quieres que te lo explique antes podemos hacerlo en una tutor\u00eda (dime cuanto de venga bien y lo vemos).</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Maneiro/#apartado-3","title":"Apartado 3","text":"<ul> <li>EMPLEADO se puede especializar en tres tipos: CAMARERO, COCINERO y ADMINISTRATIVO*. En tu diagrama no se refleja este hecho.</li> <li>La relaci\u00f3n entre MESA y FACTURA no es correcta. Una FACTURA lo ser\u00e1 de una \u00fanica MESA y una MESA (a lo largo del tiempo) tendr\u00e1 m\u00faltiples FACTURAS.</li> <li>Algo parecido pasa con RESERVA y MESA. Se nos dice que una reserva puede abarcar varias mesas. Del mismo modo una MESA ir\u00e1 apareciendo en distintas RESERVAS a lo largo del tiempo.</li> </ul> <p>Po lo dem\u00e1s lo veo correcto.</p> <p>Si ves que no he interpretado correctamente tus diagramas o que he cometido alg\u00fan error no dudes en dec\u00edrmelo, ponemos y d\u00eda y lo vemos en detalle. Lo mismo si tienes cualquier otra duda sobre esta tarea.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Manuel/","title":"Correcci\u00f3n de Manuel","text":"<ul> <li>Apartado 1</li> <li>Apartado 2</li> <li>Apartado 3</li> </ul> <p>Hola Manuel.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Manuel/#apartado-1","title":"Apartado 1","text":"<ul> <li>El diagrama no est\u00e1 en notaci\u00f3n de Chen. Las relaciones, en dicha notaci\u00f3n, se representan mediante rombos.</li> <li>Faltan las cardinalidades en muchas de las relaciones.</li> <li>Una entidad no deber\u00eda de aparecer m\u00e1s de una vez, como es el caso de Reparaci\u00f3n.</li> <li>En el enunciado se nos dice que una Reparaci\u00f3n podr\u00e1 ser realizada por mas de un Empleado, por lo que la relaci\u00f3n deber\u00eda ser M:N.</li> </ul> <p>Hay algunos fallos m\u00e1s por lo que te recomiendo que compares tu soluci\u00f3n con la que publicar\u00e9 en breve.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Manuel/#apartado-2","title":"Apartado 2","text":"<p>Perfecto.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Manuel/#apartado-3","title":"Apartado 3","text":"<ul> <li>Si usas la notaci\u00f3n de Chen para crear el diagrama c\u00ed\u00f1ete a ella. Lo mismo si decides usar la notaci\u00f3n de Crow's Foot. Tu las has mezclado.</li> <li>Haces algo que no entiendo con los Atributos adicionales.</li> </ul> <p>Como en el caso anterior hay algunos fallos, te recomiendo que revises tu soluci\u00f3n con la que publicar\u00e9 en breve.</p> <p>Si crees que no he entendido correctamente tu soluci\u00f3n, me he equivocado en algo o simplemente tienes alguna duda sobre la soluci\u00f3n, por favor no dudes en ponerte en contacto conmigo.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Mart%C3%ADn/","title":"Correcci\u00f3n de Mart\u00edn","text":"<p>Hola Mart\u00edn.</p> <ul> <li>Apartado 1</li> <li>Apartado 2</li> <li>Apartado 3</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Mart%C3%ADn/#apartado-1","title":"Apartado 1","text":"<ul> <li>La relaci\u00f3n entre Factura y Reparaci\u00f3n es 1:1. Ya que una Reparaci\u00f3n genera una \u00fanica Factura y una Factura pertenece a una \u00fanica Reparaci\u00f3n.</li> <li>Tambi\u00e9n se deber\u00eda de incluir una relaci\u00f3n 1:1 entre Factura y Cliente ya que en el enunciado se nos dice que Factura incluye el campo (clave for\u00e1nea) C\u00f3digoCliente.</li> </ul> <p>Por lo dem\u00e1s lo veo todo bien.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Mart%C3%ADn/#apartado-2","title":"Apartado 2","text":"<p>Perfecto.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Mart%C3%ADn/#apartado-3","title":"Apartado 3","text":"<p>Parece que no los has incluido en el documento.</p> <p>Si ha habido alg\u00fan error, he entendido mal tu soluci\u00f3n, he cometido alg\u00fan error o, simplemente, tienes alguna duda, por favor ponte en contacto conmigo.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Pilar/","title":"Correcci\u00f3n de Pilar","text":"<p>Hola Pilar.</p> <ul> <li>Apartado 1</li> <li>Apartado 2</li> <li>Apartado 3</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Pilar/#apartado-1","title":"Apartado 1","text":"<ul> <li>La relaci\u00f3n entre EMPLEADOS y REPARACI\u00f3N es incorrecta ya que se dice expl\u00edcitamente que una REPARACI\u00f3N la pueden realizar varios EMPLEADOS. La relaci\u00f3n deber\u00eda ser de M:N.</li> <li>La relaci\u00f3n entre ACTUACI\u00f3N Y REPARACI\u00f3N deber\u00eda de ser tambi\u00e9n M:N ya que se nos dice que las actuaciones est\u00e1n predefinidas por lo que una actuaci\u00f3n podr\u00e1 utilizarse en varias reparaciones.</li> </ul> <p>En principio no veo m\u00e1s errores en este apartado. En cualquier caso, te recomendar\u00eda que compares tu soluci\u00f3n con la propuesta que publicar\u00e9 en breve para ver si hay algo que se te ha pasado.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Pilar/#apartado-2","title":"Apartado 2","text":"<p>No lo has incluido en tu entrega.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Pilar/#apartado-3","title":"Apartado 3","text":"<p>Tampoco lo has incluido en tu entrega.</p> <p>Si has tenido alg\u00fan problema con la entrega, no entiendes algo o tienes dudas, no dudes en escribirme.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Sequeira/","title":"Correcci\u00f3n de Sequeira","text":"<p>Hola Antonio.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Sequeira/#apartado-1","title":"Apartado 1","text":"<ul> <li>En la relaci\u00f3n Reparaci\u00f3n y Empleados pones que un Empleado s\u00f3lo puede realizar una Reparaci\u00f3n. Esto no tiene sentido ya que un empleado puede realizar m\u00faltiples reparaciones. La relaci\u00f3n deber\u00eda ser N:M.</li> <li>En el modelo entidad-relaci\u00f3n indicas que la Factura est\u00e1 asociada a la Reparaci\u00f3n pero en relacional no lo reflejas si no que indicas que la relaci\u00f3n es con Veh\u00edculo*.</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Sequeira/#apartado-2","title":"Apartado 2","text":"<ul> <li>PRODUCTO PEDIDO deber\u00eda ser (CodProducto, NumPedido, Cantidad) ya que el precio del producto se puede almacenar en PRODUCTO.</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Sequeira/#apartado-3","title":"Apartado 3","text":"<ul> <li>Una Reserva puede tener m\u00faltiples Mesas pero una Mesa podr\u00e1 figurar en distintas Reservas (diferentes horas, d\u00edas, etc.). La relaci\u00f3n es N:M.</li> <li>Aunque la idea de asociar Reservas y Facturas con una relaci\u00f3n 1:1 no est\u00e1 mal, en el enunciado se indica que la Factura, en lugar de con Reservas est\u00e1 asociada a cada Mesa. Una Mesa podr\u00e1 tener muchas facturas a lo largo del tiempo y toda factura lo ser\u00e1 de una \u00fanica mesa. Cardinalidad N:1.</li> <li>En el modelo entidad-relaci\u00f3n no indicas la relaci\u00f3n entre Camarero y Mesa pero en el modelo relacional no lo reflejas, no se ve conexi\u00f3n entre Camarero y Mesa.</li> </ul> <p>Si tienes alguna duda, te parece que no he entendido bin tu soluci\u00f3n o me he equivocado, por favor, ponte en contacto conmigo y lo vemos en detalle.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Steven/","title":"Correcci\u00f3n de Steven","text":"<p>Hola Steven.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Steven/#apartado-1","title":"Apartado 1","text":"<p>Est\u00e1 bastante bien. Hay un par de cosas que se pueden mejorar.</p> <ul> <li>Si te fijas en el enunciado se nos dice que Factura incluye entre sus atributos CodioCliente. Esto quiere decir que tambi\u00e9n deber\u00eda tener una relaci\u00f3n (1:1) con Cliente.</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Steven/#apartado-2","title":"Apartado 2","text":"<p>Tu soluci\u00f3n es:</p> <ul> <li>PRODUCTO(CodProducto_, NombreProducto, PrecioProducto).</li> <li>PROVEEDOR(CodProveedor, NombreProveedor, Direcci\u00f3nProveedor).</li> <li>PEDIDO(NumPedido, FechaPedido, CodProveedor).</li> <li>DETALLE_PEDIDO(NumPedido, CodProducto, Cantidad).</li> </ul> <p>Pero en el enunciado se nos indica que:</p> <p>Cada producto lo puede suministrar m\u00e1s de un proveedor. Cada pedido incluye varios productos.</p> <p>No podemos guardar CodProveedor en el PEDIDO porque se nos dice explicitamente que un pedido estar\u00e1 compuesto de varios productos. Tal como lo tienes exiges que todos los productos de un pedido hayan de ser de un \u00fanico proveedor.</p> <p>La soluci\u00f3n correcta podr\u00eda ser:</p> <ul> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProdcuto).</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, Direcci\u00f3nProveedor).</li> <li>PEDIDO (NumPedido, FechaPedido).</li> <li>DETALLE_PEDIDO (NumPedido, CodProducto, CodProveedor, Cantidad)</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correcci%C3%B3n%20de%20Steven/#apartado-3","title":"Apartado 3","text":"<p>No me incluyes el diagrama del apartado 3. Si ha habido alg\u00fan problema al subir la tarea ind\u00edcamelo y miramos de corregirlo.</p> <p>Si crees que no he entendido correctamente tu soluci\u00f3n, me he equivocado en algo o simplemente tienes alguna duda sobre la soluci\u00f3n, por favor no dudes en ponerte en contacto conmigo.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correci%C3%B3n%20de%20Brahim/","title":"Correci\u00f3n de Brahim","text":"<p>Hola Brahim.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correci%C3%B3n%20de%20Brahim/#apartado-1","title":"Apartado 1","text":"<ul> <li>Un Veh\u00edculo podr\u00e1 tener una o m\u00e1s Reparaciones (piensa que a lo largo de tiempo se puede llevar el mismo coche al mismo taller). Por otro lado cada Reparaci\u00f3n se realiza sobre un \u00fanico Veh\u00edculo. La relaci\u00f3n ser\u00e1 1:N.</li> <li>El EstadoFinal no es necesario que se indice como una entidad, puede ser un atributo de la relaci\u00f3n Reparaci\u00f3n. Reparado y No reparado no pueden ser entidades. Piensa que las entidades tienen que tener atributos. Y si algo no tiene atributos (y que lo hagan \u00fanico o distinguible del resto) no puede ser una entidad.</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correci%C3%B3n%20de%20Brahim/#apartado-2","title":"Apartado 2","text":"<p>El apartado 2 est\u00e1 mal ya que no se pide que realices un diagrama si no que se normalice hasta 3FN. La soluci\u00f3n ser\u00eda:</p> <ul> <li>PEDIDO (NumPedido, FechaPedido, CodProveedor)</li> <li>PRODUCTO (CodProducto, NombreProducto, PrecioProducto)</li> <li>PEDIDO_PRODUCTO (NumPedido, CodProducto, Cantidad)</li> <li>PROVEEDOR (CodProveedor, NombreProveedor, Direcci\u00f3nProveedor)</li> </ul>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Ejercicios/Tareas/Correci%C3%B3n%20de%20Brahim/#apartado-3","title":"Apartado 3","text":"<ul> <li>Creaste entidades de las que hay datos asociados: Restaurante, Clientes, Funciones.</li> <li>Restaurante: Como s\u00f3lo hay uno no tiene mucho sentido crear una entidad para guardar la informaci\u00f3n del mismo. Es como si en la base de datos de una biblioteca creas una tabla para guardar los datos de la biblioteca (Nombre, direcci\u00f3n, etc.), no es necesario.</li> <li>Clientes: No se nos indica en ning\u00fan lado que deseemos guardar informaci\u00f3n del cliente, m\u00e1s all\u00e1 del nombre de la persona que ha echo la reserva. Piensa que cuando vas a un restaurante no te piden tus datos y no los guardan.</li> <li>Funciones: No se que atributos tendr\u00eda esta entidad (no los  indicas) pero no creo que sea necesaria. Si hay que crear una especializaci\u00f3n simplemente lo indicas con la sintaxis propia de Chen.</li> <li>Comidas: No le has puesto atributos por lo que no se cual era tu intenci\u00f3n al crearla. Como regla general, si creas una entidad que no tiene atributos claro, lo m\u00e1s probable es que no sea necesaria.</li> <li>No he visto que en el enunciado se indique que un Camarero pueda ser o no supervisor de otros Camareros.</li> </ul> <p>Respecto al diagrama. Si decides hacer un diagrama siguiendo el estilo de Chen no deber\u00edas de poner recuadros con los atributos, si no ponerlos en los famosos globos. Se eliges un estilo procura seguirlo lo m\u00e1s fiel que puedas o, si no te es posible india el por qu\u00e9.</p> <p>Aunque te haya indicado varios fallos quiero que quede claro que, si quitamos las entidades que no son necesarias el resto est\u00e1 bastante bien definido.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Tareas/Tarea%201/","title":"Tarea 1 - Modelo entidad-relaci\u00f3n","text":""},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Tareas/Tarea%201/#apartado-1-entidades-y-atributos","title":"Apartado 1: Entidades y atributos","text":"<p>Representa utilizando el diagrama de entidad-relaci\u00f3n (notaci\u00f3n Crow's Foot) las siguientes entidades y atributos: (Indica las claves primarias, atributos calculados)</p> <p>a) Un instituto de formaci\u00f3n profesional tiene cierto n\u00famero alumnos. Cada alumno, al matricularse en el instituto, se le asigna un n\u00famero de matr\u00edcula. De cada alumno se desea guardar su nombre, apellidos, fecha de nacimiento, direcci\u00f3n y tel\u00e9fono. Adem\u00e1s, se desea guardar la fecha de matriculaci\u00f3n y el ciclo en el que se matricula (c\u00f3digo del ciclo).</p> <p>b) En el instituto trabajan varios profesores. De cada profesor se desea guardar su nombre, apellidos, direcci\u00f3n, tel\u00e9fono, fecha de nacimiento y especialidad. Adem\u00e1s, se desea guardar la fecha de incorporaci\u00f3n al instituto y el n\u00famero de horas semanales que imparte.</p> <p>c) En dicho instituto, como hemos dicho, se imparten distintos ciclos. De cada cicl\u00f3 se ha de conocer su c\u00f3digo, nombre, n\u00famero de horas, duraci\u00f3n en semanas y el n\u00famero de horas semanales. Adem\u00e1s hemos de saber quien es el tutor del ciclo, que es un profesor del instituto.</p> <p>d) Cada ciclo se compone de distintos m\u00f3dulos. De cada m\u00f3dulo se ha de conocer su c\u00f3digo, nombre, n\u00famero de horas y el ciclo al que pertenece. Del mismo modo tendremos que saber el nombre del profesor que imparte el m\u00f3dulo (no tendremos en cuenta el desdoblamiento en grupos de los m\u00f3dulos).</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Tareas/Tarea%201/#apartado-2-relaciones","title":"Apartado 2: Relaciones","text":"<p>a) Representa la relaci\u00f3n entre <code>ALUMNO</code> y <code>CICLO</code>. Un alumno se matricula en un ciclo (ignoraremos la posibilidad de matricularse simult\u00e1neamente de dos ciclos) y un ciclo podr\u00e1 tener matriculados a varios alumnos.</p> <p>b) Representa la relaci\u00f3n entre <code>CICLO</code> y <code>MODULO</code>. Un ciclo se compone de varios m\u00f3dulos y un m\u00f3dulo pertenece a un solo ciclo.</p> <p>c) Representa la relaci\u00f3n entre <code>PROFESOR</code> y <code>MODULO</code>, y la relaci\u00f3n entre <code>PROFESOR</code> y <code>CICLO</code>.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Tareas/Tarea%201/#apartado-3-modelo-final","title":"Apartado 3: Modelo final","text":"<p>Representa el modelo entidad-relaci\u00f3n completo, incluyendo las entidades y relaciones descritas en los apartados anteriores.</p>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Tareas/Tarea%202/","title":"Tarea 2 - Modelo entidad-relaci\u00f3n - Empresa gen\u00e9rica Obt\u00e9n el diagrama entidad-relaci\u00f3n a partir de la siguiente descripci\u00f3n:","text":"<p>Una empresa vende productos a varios clientes. De cada cliente se necesita conocer su nombre y apellidos, direcci\u00f3n y fecha de nacimiento. De cada producto se desea guardar su nombre, descripci\u00f3n, precio de venta y stock. Cada cliente puede comprar varios productos y un mismo producto puede ser comprado por varios clientes.</p> <p>A su vez los productos son suministrados por diferentes proveedores. Un producto s\u00f3lo se puede suministrar por un \u00fanico proveedor, pero un proveedor puede suministrar varios productos. De cada proveedor se desea guardar su nombre, direcci\u00f3n, NIF, tel\u00e9fono y email.</p> <p>Empieza identificando las entidades y atributos, y despu\u00e9s las relaciones. Finalmente las cardinalidades.</p> <pre><code>erDiagram\n    CLIENTE {\n        string DNI PK\n        string nombre\n        string apellidos\n        string direccion\n        date fecha_nacimiento\n    }\n    PRODUCTO {\n        int id PK\n        string nombre\n        string descripcion\n        float precio_venta\n        int stock\n    }\n    PROVEEDOR {\n        string nombre\n        string direccion\n        string NIF PK\n        string telefono\n        string email\n    }\n    COMPRA {\n        int id PK\n        int dni_cliente FK\n        int id_producto FK\n        date fecha_compra\n    }\n    CLIENTE ||--o{ COMPRA : realiza\n    PRODUCTO ||--o{ COMPRA : incluye\n    PROVEEDOR ||--o| PRODUCTO : suministra</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Tareas/Tarea%203/","title":"Tarea 3","text":""},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Tareas/Tarea%203/#tarea-3-modelo-entidad-relacion-biblioteca","title":"Tarea 3 - Modelo entidad-relaci\u00f3n: Biblioteca","text":"<p>Representa utilizando el diagrama de entidad-relaci\u00f3n (notaci\u00f3n Crow's Foot) el siguiente caso:</p> <p>Una biblioteca desea gestionar la informaci\u00f3n de sus libros y socios. De cada libro se desea guardar su t\u00edtulo, autor, editorial, a\u00f1o de edici\u00f3n, n\u00famero de copias y ISBN. De cada socio se desea guardar su nombre, apellidos, direcci\u00f3n, tel\u00e9fono y fecha de alta en la biblioteca. Tambi\u00e9n se le asignar\u00e1 un n\u00famero de socio. Cada socio podr\u00e1 pedir prestados varios libros, y de cada pr\u00e9stamo se desea guardar la fecha de pr\u00e9stamo y la fecha de devoluci\u00f3n.</p> <pre><code>erDiagram\n    SOCIO {\n        int numero_socio\n        string nombre\n        string apellidos\n        string direccion\n        string telefono\n        date fecha_alta\n    }\n    LIBRO {\n        string titulo\n        string autor\n        string editorial\n        int ano_edicion\n        int numero_copias\n        string ISBN\n    }\n    PRESTAMO {\n        int id_prestamo\n        date fecha_prestamo\n        date fecha_devolucion\n    }\n    SOCIO ||--o{ PRESTAMO : realiza\n    LIBRO ||--o{ PRESTAMO : es_prestado</code></pre>"},{"location":"GBD/UD%2002%20-%20Modelo%20entidad-relaci%C3%B3n/Tareas/Tarea%204/","title":"Tarea 3: Modelo entidad-relaci\u00f3n: App de recetas","text":"<p>Representa utilizando el diagrama de entidad-relaci\u00f3n (notaci\u00f3n Crow's Foot) el siguiente caso:</p> <p>Estamos desarrollando una aplicaci\u00f3n de m\u00f3vil que funciona como un libro de recetas. La aplicaci\u00f3n permitir\u00e1, entre otras cosas, filtrar recetas por ingredientes. De cada receta se desea guardar su nombre, una descripci\u00f3n, los ingredientes, el tiempo de preparaci\u00f3n y el tiempo de cocinado. Tambi\u00e9n se desea saber las calor\u00edas de cada receta, para lo que hemos de conocer tambi\u00e9n la cantidad de cada ingrediente. La aplicaci\u00f3n tambi\u00e9n desea guardar la fecha en la que el usuario registre la realizaci\u00f3n de una receta, para que pueda llevar un control de las recetas que ha preparado y cuando. De este modo se podr\u00e1 ver cu\u00e1ntas veces se ha realizado cada receta. Finalmente el usuario podr\u00e1 guardar notas asociadas a las recetas que ha preparado.</p> <p>Crea las entidades y atributos que consideres necesarias y las relaciones entre ellas. No tienen porque aparecer expl\u00edcitamente en el enunciado.</p> <p>```mermaid erDiagram     RECETA {         int id PK         string nombre         string descripcion         int tiempo_preparacion         int tiempo_cocinado     }</p> <pre><code>INGREDIENTE {\n    int id PK\n    string nombre\n    float calorias_gramo\n}\n\nRECETA_INGREDIENTE {\n    int id_receta FK\n    int id_ingrediente FK\n    float cantidad\n}\n\nUSUARIO {\n    int id PK\n    string nombre\n    string email\n}\n\nREGISTRO {\n    int id PK\n    int id_usuario FK\n    int id_receta FK\n    date fecha\n    string notas\n}\n\nRECETA ||--o{ RECETA_INGREDIENTE : contiene\nINGREDIENTE ||--o{ RECETA_INGREDIENTE : es_usado_en\nUSUARIO ||--o{ REGISTRO : realiza\nRECETA ||--o{ REGISTRO : es_registrada\n</code></pre>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Modelo%20relacional/","title":"Modelo Relacional","text":"<ul> <li>Conceptos b\u00e1sicos</li> <li>Relaciones<ul> <li>Cabecera</li> <li>Cuerpo</li> </ul> </li> <li>Restricciones o \"constrains\"</li> <li>Claves<ul> <li>Claves for\u00e1neas</li> </ul> </li> <li>Operaciones relacionales<ul> <li>Join</li> <li>inner join</li> <li>left outer join</li> <li>right outer join</li> <li>full outer join</li> </ul> </li> </ul> <p>El modelo relacional es un modelo te\u00f3rico que fue desarrollado por Edgar F. Codd como un modelo general de los datos. Este nombre volver\u00e1 a aparecer cuando hablemos de normalizaci\u00f3n con la forma normal Boyce-Codd.</p> <p>\u00bfQu\u00e9 co\u00f1o est\u00e1 pasando aqu\u00ed?</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Modelo%20relacional/#conceptos-basicos","title":"Conceptos b\u00e1sicos","text":"<p>A continuaci\u00f3n veremos de una forma no exaustiva los elementos b\u00e1sicos del modelo relacional. Aunque es interesante conocer estos conceptos y c\u00f3mo se traducen a las bases de datos relaciones reales, considero que verlos en profundidad requiere un esfuerzo superior al beneficio que puedan aportar.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Modelo%20relacional/#relaciones","title":"Relaciones","text":"<p>En el modelo relacional los datos se almacenan en estructuras denominadas relaciones (no confundir con el concepto de relaci\u00f3n utilizado en el modelo entidad-relaci\u00f3n). Toda la informaci\u00f3n que contiene una base de datos estar\u00e1 almacenada en un conjunto de una o m\u00e1s relaciones.</p> <p>Nota: Las relaciones ser\u00e1n lo que en las bases de datos pasaremos a llamar tablas.</p> <p>Las relaciones constan de dos elementos o partes: cabecera y cuerpo.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Modelo%20relacional/#cabecera","title":"Cabecera","text":"<p>Toda relaci\u00f3n consta de una cabecera (heading) y un cuerpo. La cabecera define los atributos de la relaci\u00f3n. Cada atributo constar\u00e1 de un nombre y un tipo de dato. El tipo de dato determinar\u00e1 qu\u00e9 valores puede tomar un atributo. As\u00ed, por ejemplo, si un atributo es de tipo entero podr\u00e1 almacenar valores como 1, 2, -5, 100, pero no $1.5$; si es de tipo cadena (string) podr\u00e1 contener valores alfanum\u00e9ricos como \"Manuel\"; si es de tipo fecha u hora (date, time, date-time) contendr\u00e1 valores que representen una fecha, etc.</p> <p>https://github.com/fannheyward/coc-markdownlint</p> <p>Nota: aqu\u00ed el concepto de atributo coincide con el del modelo ER solo que a\u00f1adimos al mismo la restricci\u00f3n de tipo de dato. En las bases de datos se utiliza el nombre columna para referirnos a un atributo.</p> <p>Cada sistema de gesti\u00f3n de base de datos define sus propios tipos de datos. Por ejemplo, MySQL define unos 24 tipos de datos agrupados en tipos num\u00e9ricos (<code>NUMERIC</code>, <code>INT</code>, <code>FLOAT</code>, etc.), cadenas de caracteres (<code>CHAR</code>, <code>VARCHAR</code>, <code>TEXT</code>, etc.), fecha y hora (<code>DATE</code>, <code>TIME</code>, <code>DATETIME</code>, <code>TIMESTAMP</code>), espaciales (OpenGIS), etc. Por su parte la base de datos SQLite tiene 5 tipos de datos: <code>NULL</code>, <code>INTEGER</code>, <code>REAL</code>, <code>TEXT</code> y <code>BLOB</code>.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Modelo%20relacional/#cuerpo","title":"Cuerpo","text":"<p>El cuerpo contiene una serie de tuplas. Cada tupla tendr\u00e1 tantos elementos como atributos se hayan definido en la cabecera. Cada valor de la tupla se corresponder\u00e1 con un \u00fanico atributo. El n\u00famero de tuplas ser\u00e1 la cardinalidad de la relaci\u00f3n.</p> <p>En principio no hay nada que oblige a que todos los atributos tengan valores en todas las tuplas. Es decir, si la cabecera define diez atributos todas las tuplas tendr\u00e1n diez campos pero alguno de dichos campos podr\u00eda estar vac\u00edo o ser nulo.</p> <p>Nota: La tupla representa lo que en el modelo ER ser\u00eda una instancia de una entidad. Cuando almacenamos los datos de un libro en una base de datos, los valores de sus atributos (t\u00edtulo, autor, fecha de publicaci\u00f3n, etc.) formar\u00e1n una tupla. En las bases de datos suele utilizarse el t\u00e9rmino registro o fila en lugar de tupla.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Modelo%20relacional/#restricciones-o-constrains","title":"Restricciones o \"constrains\"","text":"<p>En una base de datos se pueden definir una serie de expresiones l\u00f3gicas (expresiones que se pueden evaluar a verdadero o falso) que se denominar\u00e1n Restricciones. Cuando todas las restricciones se cumplan, es decir, se eval\u00faen a verdadero; diremos que la base de datos es consistente, si esto no se cumple la base de datos ser\u00eda inconsistente. No se debe permitir que una base de datos se vuelva inconsistente.</p> <p>Puesto que no se puede permitir que una base de datos sea inconsistente, si intent\u00e1semos realizar una operaci\u00f3n sobre ella que la volviese inconsistente (que provocase que alguna restricci\u00f3n dejase de cumplirse, pasase a devolver falso) dicha modificaci\u00f3n ser\u00eda ilegal y no se deber\u00eda de permitir.</p> <p>Un ejemplo de restricci\u00f3n ser\u00eda exigir que una clave nunca podr\u00e1 estar en blanco. Por lo que si una operaci\u00f3n fuese a eliminar el atributo clave de una tupla ser\u00eda rechazada. Otra restricci\u00f3n ser\u00eda exigir que las claves no se pueden repetir en una misma relaci\u00f3n. Por lo que intentar insertar una tupla con una clave que ya existe en la relaci\u00f3n (tabla) tampoco ser permitir\u00eda.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Modelo%20relacional/#claves","title":"Claves","text":"<p>Las claves est\u00e1n ligadas a las relaciones. Son una forma de interconectar distintas relaciones.</p> <p>Una clave candidata, o simplemente clave, ser\u00e1 el subconjunto m\u00ednimo de atributos que pueda identificar de manera un\u00edvoca a cada tupla de la relaci\u00f3n. Es decir, cata tupla de la relaci\u00f3n ha de tener una clave distinta del resto de tuplas.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Modelo%20relacional/#claves-foraneas","title":"Claves for\u00e1neas","text":"<p>Una clave for\u00e1nea es un atributo o conjunto de atributos de la relaci\u00f3n A que se corresponde con (es id\u00e9ntica a) la clave de la relaci\u00f3n B. Podemos decir que la clave for\u00e1nea de cada tupla de la relaci\u00f3n A apuntar\u00e1 a una \u00fanica tupla de la relaci\u00f3n B.</p> <p>Una clave for\u00e1nea es la forma de relacionar una o m\u00e1s tuplas de una relaci\u00f3n (la que tiene la clave for\u00e1nea) con una \u00fanica tupla de otra relaci\u00f3n (aquella donde la clave for\u00e1nea es clave).</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Modelo%20relacional/#operaciones-relacionales","title":"Operaciones relacionales","text":"<p>Una operaci\u00f3n relacional involucrar\u00e1 la manipulaci\u00f3n de una o m\u00e1s relaciones para dar como resultado otra relaci\u00f3n. Visto de otra forma, una operaci\u00f3n relacional es una funci\u00f3n de una o m\u00e1s relaciones que dar\u00e1 como resultado una \u00fanica relaci\u00f3n.</p> <p>Existen tres tipos de operaciones relacionales:</p> <ul> <li>Selecci\u00f3n: implicar\u00e1 obtener un subconjunto de tuplas de una relaci\u00f3n que satisfagan una condici\u00f3n. La relaci\u00f3n resultante incluir\u00e1 todos los atributos de las tuplas seleccionadas.</li> <li>Proyecci\u00f3n: implicar\u00e1 filtrar un subconjunto de los atributos de una relaci\u00f3n.</li> <li>Combinaci\u00f3n o join: el join permitir\u00e1 realizar las operaciones de selecci\u00f3n y proyecci\u00f3n sobre varias relaciones a la vez. Es una forma de encadenar varias relaciones.</li> </ul> <p>Podemos interpretar la proyecci\u00f3n como un filtrado de atributos (para coger s\u00f3lo los que nos interesen), la selecci\u00f3n como un filtrado de tuplas (o registros) para seleccionar los que nos interesen y la combinaci\u00f3n como el entrelazado de relaciones que han de estar conectadas mediante claves for\u00e1neas para obtener los datos asociados que nos interesen.</p> <p>En el mundo real los usuarios de una base de datos solicitar\u00e1n informaci\u00f3n de la misma mediante una consulta (query). En respuesta a la consulta, la base de datos responder\u00e1 con conjunto de resultados. Esta consulta podr\u00e1 incluir simult\u00e1neamente las tres operaciones: selecci\u00f3n, proyecci\u00f3n y join.</p> <p>En el lenguaje SQL las consultas se realizar\u00e1n mediante la instrucci\u00f3n <code>SELECT</code>. Un ejemplo de sentencia <code>SELECT</code> es la siguiente:</p> <pre><code>SELECT (lista de atributos de la proyecci\u00f3n) FROM (relaci\u00f3n o relaciones a las que afecta) WHERE (condici\u00f3n o condiciones de selecci\u00f3n de las tuplas);\n</code></pre> <p>Supongamos que tenemos una relaci\u00f3n de libros. Sus atributos ser\u00e1n: t\u00edtulo, autor, n\u00ba de p\u00e1ginas, fecha de publicaci\u00f3n, id_libro (la clave). Si queremos mostrar el t\u00edtulo y el autor (proyecci\u00f3n) de los libros de m\u00e1s de 100 p\u00e1ginas (selecci\u00f3n) escribiremos la siguiente instrucci\u00f3n <code>SELECT</code>:</p> <pre><code>SELECT (t\u00edtulo, autor) FROM libros WHERE (num_pag &gt; 100);\n</code></pre> <p>Un ejemplo de sentencia SQL con join ser\u00eda:</p> <pre><code>SELECT (isbn, t\u00edtulo, nombre, a\u00f1o_nacimiento) FROM Libros INNER JOIN Autores ON Libros.id_autor = Autores.id WHERE a\u00f1o_nacimiento &gt;= 2000;\n</code></pre> <p>Bueno... m\u00e1s o menos.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Modelo%20relacional/#join","title":"Join","text":"<p>El join ser\u00e1 una operaci\u00f3n que se realizar\u00e1 entre dos o m\u00e1s relaciones que compartan uno o m\u00e1s atributos. Generalmente estos atributos ser\u00e1n la clave de una relaci\u00f3n y la clave for\u00e1nea de la otra.</p> <p>Si hablamos de dos relaciones (para simplificar) tendremos una relaci\u00f3n con una clave for\u00e1nea que ser\u00e1 clave de la otra relaci\u00f3n. Si se cumple esto podremos hacer un join entre dichas relaciones.</p> <p>Por ejemplo, si tenemos una tabla de productos (id, nombre, precio) y una tabla de ventas (id_venta, fecha, id_producto, unidades) donde la columna (o atributo) id_producto de la relaci\u00f3n de ventas se corresponde con el atributo id (clave) de productos. Podremos combinarlas mediante la siguiente sentencia <code>SELECT</code>:</p> <pre><code>SELECT (fecha, nombre, unidades, precio) FROM Ventas INNER JOIN ON  Ventas.id_producto == Productos.id;\n</code></pre> <p>Existen varios tipos de join: inner join, left join, right join y outer join. Los veremos m\u00e1s adelante cuando veamos las sentencias en lenguaje SQL.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Modelo%20relacional/#inner-join","title":"inner join","text":"<p>Es el join m\u00e1s com\u00fan. Cuando se aplica este _join la relaci\u00f3n resultante incluir\u00e1 \u00fanicamente los valores de la relaci\u00f3n A y de la relaci\u00f3n B cuyos valores de clave for\u00e1nea y clave coincidan. Hay que tener en cuenta que en la relaci\u00f3n A no hay nada que impida que la clave for\u00e1nea est\u00e9 en blanco.</p> <p>Una sentencia de inner join ser\u00eda la siguiente:</p> <pre><code>SELECT *\nFROM productos AS A\nINNER JOIN precios AS B\nON A.id = B.id_producto;\n</code></pre> <p>Y una representaci\u00f3n gr\u00e1fica de un inner join es la siguiente:</p> <p></p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Modelo%20relacional/#left-outer-join","title":"left outer join","text":"<p>En este caso, la relaci\u00f3n resultante incluir\u00e1 tambi\u00e9n las tuplas de la relaci\u00f3n A cuya clave for\u00e1nea NO COINCIDA con ninguna clave de la relaci\u00f3n B.</p> <p>La sentencia ser\u00eda igual a la del inner join pero substituyendo <code>INNER JOIN</code> por <code>LEFT OUTER JOIN</code> o simplemente <code>LEFT JOIN</code>.</p> <p>La sentencia SQL para el left outer join ser\u00eda algo similar a:</p> <pre><code>SELECT col1, col2, ...\nFROM tabla1\nLEFT JOIN tabla2\nON tabla1.id = tabla2.t1_id;\n</code></pre> <p>Un representaci\u00f3n gr\u00e1fica de este join ser\u00eda:</p> <p></p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Modelo%20relacional/#right-outer-join","title":"right outer join","text":"<p>An\u00e1logo al anterior pero ahora saldr\u00edan todas las tuplas de la relaci\u00f3n B, aunque su clave no coincida con ninguna tupla de la relaci\u00f3n A pero s\u00f3lo las tuplas de A que tengan match con las claves de B.</p> <p>La sentencia SQL que describe el right outer join es an\u00e1loga a la anterior:</p> <pre><code>SELECT usuarios.nombre, ventas.valor\nFROM usuarios as U\nRIGHT OUTER JOIN ventas AS V\nON U.id = V.user_id;\n</code></pre> <p>Y su representaci\u00f3n gr\u00e1fica:</p> <p></p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Modelo%20relacional/#full-outer-join","title":"full outer join","text":"<p>Finalmente, en este join saldr\u00e1n TODAS LAS TUPLAS DE A Y DE B, haya o no match entre los atributos clave for\u00e1nea y clave. Obviamente, cuando haya coincidencia (match) se mostrar\u00e1n los datos combinados pero cuando no la haya se mostrar\u00e1n los atributos de A o los de B dejando el resto en blanco.</p> <p>La sentencia SQL que genera este join ser\u00eda:</p> <pre><code>SELECT columnas\nFROM tabla_a\nLEFT OUTER JOIN tabla_b\nON tabla_a.atributo = tabla_b.atributo;\n</code></pre> <p>Una imagen que ilustre este join ser\u00eda:</p> <p></p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Normalizaci%C3%B3n/","title":"Normalizaci\u00f3n en el modelo relacional","text":"<ul> <li>Formas normales</li> <li>Primera forma normal (1FN)</li> <li>Segunda forma normal (2FN)</li> <li>Tercera forma normal (3FN)</li> </ul> <p>El objetivo de la normalizaci\u00f3n es simple y claro: reducir la redundancia de datos. Es decir, evitar que existan datos repetidos en distintas relaciones (tablas) de la base de datos. Esto tiene tres efectos:</p> <ul> <li>Reducir la redundancia de datos.</li> <li>Facilitar las operaciones de actualizaci\u00f3n de datos: si un dato est\u00e1 repetido en varios sitios y lo cambiamos en uno habr\u00e1 que asegurarse de que se cambia en todos lados.</li> <li>Proteger la integridad de los datos: que se producir\u00edan si en el punto anterior no se actualizasen correctamente todas las copias del valor.</li> </ul> <p>Para lograr esto se aplican una serie de reglas a las relaciones obtenidas del paso del modelo ER al relacional.</p> <p>Nota: En la actualidad evitar la redundancia de datos no es tan importante e incluso puede verse como una ventaja. Por ejemplo, en las bases de datos No SQL se puede sacrificar la integridad de los datos en favor de la velocidad de acceso o la disponibilidad de los mismos.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Normalizaci%C3%B3n/#formas-normales","title":"Formas normales","text":"<p>Una forma normal indica una serie de restricciones. Decimos que una relaci\u00f3n (tabla) cumple una forma normal cuando cumple las restricciones especificadas en dicha forma. Una base de datos estar\u00e1 en la forma normal X si todas sus relaciones lo est\u00e1n.</p> <p>En general todas las bases de datos (relacionales) deben cumplir las tres primeras formas normales (1\u00aa formal normal, 2\u00aa FN y 3\u00aa FN).</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Normalizaci%C3%B3n/#primera-forma-normal-1fn","title":"Primera forma normal (1FN)","text":"<p>Una tabla estar\u00e1 en 1FN si:</p> <ul> <li>Todos los atributos son at\u00f3micos: Los elementos del dominio (tipo de dato) son simples e indivisibles.</li> <li>No debe existir variaci\u00f3n en el n\u00famero de columnas: todas las tuplas de una relaci\u00f3n tendr\u00e1n el mismo n\u00famero de atributos.</li> <li>Los atributos que no sean clave han de poder identificarse mediante la clave: dependencia funcional que veremos en un momento.</li> <li>Debe existir una independencia entre el orden y el significado de los datos: Si cambiamos la organizaci\u00f3n de las columnas o el orden de las tuplas, la informaci\u00f3n contenida en la tabla no cambia.</li> </ul> <p>Dependencia funcional de los atributos respecto a la clave quiere decir (de manera simplificada) que, dada una clave, se podr\u00e1n obtener el resto de atributos a partir de ella.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Normalizaci%C3%B3n/#segunda-forma-normal-2fn","title":"Segunda forma normal (2FN)","text":"<p>Una tabla estar\u00e1 en 2FN si est\u00e1 en 1FN y adem\u00e1s:</p> <ul> <li>Los atributos que no forman parte de ninguna clave depende de forma completa de la clave primaria.</li> </ul> <p>La mejor forma de entender esta restricci\u00f3n es con un ejemplo.</p> <p>Supongamos que tenemos una relaci\u00f3n: DNI, Nombre, Apellidos, Id proyecto, Horas de trabajo. La clave primaria de esta relaci\u00f3n ser\u00eda <code>{DNI, Id proyecto}</code>. Esta relaci\u00f3n NO ESTAR\u00edA EN 2FN. Pues los atributos <code>Nombre</code> y <code>Apellidos</code> NO DEPENDEN de la combinaci\u00f3n <code>{DNI, Id proyecto}</code> si no que dependen \u00fanicamente de <code>DNI</code>. Para que se cumpliese la 2FN tendr\u00edamos que dividir la relaci\u00f3n anterior en dos relaciones:</p> <ul> <li>Relaci\u00f3n A: <code>DNI</code>, <code>Nombre</code>, <code>Apellidos</code>. Donde la clave primaria ser\u00eda <code>DNI</code>.</li> <li>Relaci\u00f3n B: <code>DNI</code>, <code>Id proyecto</code>, <code>Horas de trabajo</code>. Donde la clave primaria ser\u00eda <code>{DNI, Id proyecto}</code> (<code>DNI</code> tambi\u00e9n ser\u00eda a su vez clave for\u00e1nea).</li> </ul>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Normalizaci%C3%B3n/#tercera-forma-normal-3fn","title":"Tercera forma normal (3FN)","text":"<p>Una tabla estar\u00e1 en 3FN cuando est\u00e9 en 2FN y adem\u00e1s no exista ninguna dependencia funcional transitiva en los atributos que no son clave.</p> <p>De nuevo, intentemos verlo con un ejemplo en lugar de profundizar en el concepto de dependencia funcional.</p> <p>Supongamos que tenemos la relaci\u00f3n <code>Estudiantes</code> con los atributos <code>Id estudiante</code>, <code>nombre</code>, <code>apellidos</code>, <code>regi\u00f3n</code>, <code>pa\u00eds</code>, <code>fecha de nacimiento</code>. Las dependencias entre los atributos se podr\u00e1n expresar de la siguiente manera:</p> <ul> <li><code>Id estudiante</code> \u2192 <code>nombre</code>.</li> <li><code>Id estudiante</code> \u2192 <code>apellidos</code>.</li> <li><code>Id estudiante</code> \u2192 <code>regi\u00f3n</code>.</li> <li><code>Id estudiante</code> \u2192 <code>fecha de nacimiento</code>.</li> <li>~~<code>Id estudiante</code> \u2192 <code>pa\u00eds</code>.~~</li> <li><code>regi\u00f3n</code> \u2192 <code>pa\u00eds</code>.</li> </ul> <p>No todos los atributos dependen directamente de la clave primaria <code>Id estudiante</code> ya que <code>pa\u00eds</code> depende de <code>regi\u00f3n</code>, que a su vez s\u00ed depende de <code>Id estudiante</code>. Por eso podr\u00edamos decir que <code>pa\u00eds</code> depende transitivamente de <code>Id estudiante</code> a trav\u00e9s de la dependencia <code>regi\u00f3n</code> \u2192 <code>pa\u00eds</code>. Que es lo que queremos evitar. Para ello hemos de dividir la relaci\u00f3n en otras dos:</p> <ul> <li>Relaci\u00f3n A: <code>Id estudiante</code>, <code>nombre</code>, <code>apellidos</code>, <code>fecha de nacimiento</code>, <code>regi\u00f3n</code>. Con clave primaria <code>Id estudiante</code></li> <li>Relaci\u00f3n B: <code>regi\u00f3n</code>, <code>pa\u00eds</code>. Con clave primaria = <code>reg\u00edon</code>.</li> </ul> <p>Y aqu\u00ed lo vamos a dejar aunque existan otras tres formas normales: Forma normal Boyce-Codd, 4FN y 5FN.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Transformaci%C3%B3n%20M%20ER%20-%20M%20relacional/","title":"Transformaci\u00f3n de un modelo entidad-relaci\u00f3n a un modelo relacional","text":"<ul> <li>Introducci\u00f3n</li> <li>Entidades</li> <li>Atributos</li> <li>Atributos multivaluados</li> <li>Relaciones</li> <li>Relaci\u00f3n binaria con cardinalidad 1:1<ul> <li>1 : 1 en ambas direcciones</li> <li>1 : 1 en una direcci\u00f3n y 0 : 1 en la otra</li> <li>0 : 1 en ambas direcciones</li> </ul> </li> <li>Relaci\u00f3n binaria con cardinalidad uno a muchos</li> </ul>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Transformaci%C3%B3n%20M%20ER%20-%20M%20relacional/#introduccion","title":"Introducci\u00f3n","text":"<p>La conversi\u00f3n del modelo entidad-relaci\u00f3n (MER) a un modelo relacional (MR) es una fase fundamental en el dise\u00f1o de una base de datos. Mientras que el MER nos da una representaci\u00f3n conceptual de los datos (plasmado en forma de diagrama ER), el MR nos dar\u00e1 una representaci\u00f3n f\u00edsica de los mismos (en forma de descripci\u00f3n de relaciones o tablas) que podremos implementar en un sistema de gesti\u00f3n de bases de datos relacionales (SGBDR) real. Para poder llevar a cabo esta transformaci\u00f3n, es necesario seguir una serie de pasos que se describen a continuaci\u00f3n.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Transformaci%C3%B3n%20M%20ER%20-%20M%20relacional/#entidades","title":"Entidades","text":"<p>El primer paso consistir\u00e1 en transformar las entidades del MER en tablas del MR. Cada entidad se transformar\u00e1 en una tabla y cada atributo de la entidad se transformar\u00e1 en un campo (o columna) de la tabla. La clave primaria de la tabla ser\u00e1 la clave primaria de la entidad.</p> <p>Nota: En el modelo relacional lo \u00fanico que existir\u00e1 son tablas y atributos. Las relaciones entre las entidades se representar\u00e1n mediante la inclusi\u00f3n de claves for\u00e1neas en las tablas correspondientes o mediante la creaci\u00f3n de tablas que representen la relaci\u00f3n (dependiendo de las cardinalidad de la relaci\u00f3n).</p> <p>Cuando tenemos una entidad d\u00e9bil (una entidad cuya existencia depende de otra entidad) la transformaci\u00f3n es sencilla. La clave primaria de la entidad fuerte pasar\u00e1 a ser una clave for\u00e1nea en la entidad d\u00e9bil. Cuando tenemos una relaci\u00f3n entre una entidad d\u00e9bil y un fuerte siempre tendremos una relaci\u00f3n del 1:1 o 1:N, nunca una relaci\u00f3n N:M.</p> <pre><code>erDiagram\n\nCliente ||--o{ Factura : tiene\n\nUsuario ||--|| Direccion : \"vive en\"\n\nCliente {\n  int id pk\n  string nombre\n}\n\nUsuario {\n  int id pk\n  string nombre\n}\n\nFactura {\n  int id pk\n  int id_cliente fk\n}\n\nDireccion {\n  int id pk\n  int id_usuario fk\n}</code></pre>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Transformaci%C3%B3n%20M%20ER%20-%20M%20relacional/#atributos","title":"Atributos","text":"<p>Los atributos pasar\u00e1n a ser campos o columnas de las tablas creadas. Habr\u00e1 que tener en cuenta los posibles valores de los atributos para asignarles los tipos de datos que correspondan. Habr\u00e1 que tener tambi\u00e9n en cuenta cuando un atributo es opcional u obligatorio para definir si el campo correspondiente puede ser <code>NULL</code> o no (mediante una restricci\u00f3n).</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Transformaci%C3%B3n%20M%20ER%20-%20M%20relacional/#atributos-multivaluados","title":"Atributos multivaluados","text":"<p>Cuando una entidad tenga atributos multivaluados, estos se transformar\u00e1n o no en una tabla nueva (como cualquier otra entidad) dependiendo de las siguientes consideraciones.</p> <p>Si el n\u00famero de valores que puede tener el atributo multivaluado es fijo, se puede representar como un conjunto de campos en la tabla de la entidad a la que pertenece. Por ejemplo, si tenemos una entidad <code>Persona</code> con un atributo <code>tel\u00e9fonos</code> que puede tener hasta 3 valores, se puede representar como <code>telefono1</code>, <code>telefono2</code> y <code>telefono3</code> (o <code>t_fijo</code>, <code>t_movil</code>, etc.) en la tabla <code>Persona</code>.</p> <p>Si el n\u00famero de valores que puede tener el atributo multivaluado es variable, se crear\u00e1 una tabla nueva para representar este atributo que pasar\u00e1 a comportarse como una entidad.</p> <p>En esta tabla se incluir\u00e1n los atributos multivaluados junto con la clave primaria de la entidad a la que pertenecen.</p> <p>Supongamos que decimos que un cliente puede tener multiples direcciones:</p> <pre><code>erDiagram\n\nCliente ||--|{ Direccion : \"tiene\"\n\nCliente {\n  int id pk\n  string nombre\n}\n\nDireccion {\n  int id pk\n  int id_cliente fk\n  string calle\n  string numero\n}</code></pre>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Transformaci%C3%B3n%20M%20ER%20-%20M%20relacional/#relaciones","title":"Relaciones","text":"<p>Lo que determinar\u00e1 la forma de representar las relaciones (en el MR no se contemplan) depender\u00e1 de la cardinalidad de las mismas. A continuaci\u00f3n se describen los casos m\u00e1s comunes.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Transformaci%C3%B3n%20M%20ER%20-%20M%20relacional/#relacion-binaria-con-cardinalidad-11","title":"Relaci\u00f3n binaria con cardinalidad 1:1","text":"<p>El paso as seguir depender\u00e1 de la cardinalidad m\u00ednima.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Transformaci%C3%B3n%20M%20ER%20-%20M%20relacional/#1-1-en-ambas-direcciones","title":"1 : 1 en ambas direcciones","text":"<p>Se elegir\u00e1 arbitrariamente una de las dos tablas para que contenga la clave for\u00e1nea de la otra tabla. En este caso, la tabla <code>Entidad_A</code> tendr\u00e1 un campo <code>id_b</code> que ser\u00e1 clave for\u00e1nea de la tabla <code>Entidad_B</code>.</p> <pre><code>erDiagram\n\nEntidad_A ||--|| Entidad_B : \"relacionada con\"\n\nEntidad_A {\n  int id pk\n  int id_b fk\n}\n\nEntidad_B {\n  int id pk\n}</code></pre>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Transformaci%C3%B3n%20M%20ER%20-%20M%20relacional/#1-1-en-una-direccion-y-0-1-en-la-otra","title":"1 : 1 en una direcci\u00f3n y 0 : 1 en la otra","text":"<p>En este caso, para preservar la relaci\u00f3n bastar\u00e1 con incluir como clave for\u00e1nea de la tabla que tiene la cardinalidad 1 : 1 la clave primaria de la otra tabla. En este caso, la tabla <code>Entidad_A</code> tendr\u00e1 un campo <code>id_b</code> que ser\u00e1 clave for\u00e1nea de la tabla <code>Entidad_B</code>. De esta forma evitamos tener campos con valores nulos.</p> <p>Si pasamos la clave primara de la <code>Entidad_A</code> a la tabla <code>Entidad_B</code>, y no todas las instancias de <code>Entidad_B</code> se corresponden con una instancia de <code>Entidad_A</code> tendr\u00edamos que tener campos con valores nulos de la clave for\u00e1nea <code>id_a</code> en la tabla <code>Entidad_B</code>.</p> <pre><code>erDiagram\n\nEntidad_A |o--|| Entidad_B : \"relacionada con\"\n\nEntidad_A {\nint id pk\nint id_b fk\n}\n\nEntidad_B {\nint id pk\n}</code></pre>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Transformaci%C3%B3n%20M%20ER%20-%20M%20relacional/#0-1-en-ambas-direcciones","title":"0 : 1 en ambas direcciones","text":"<p>En este caso, adem\u00e1s de crear una tabla para cada entidad, habr\u00e1 que crear una tabla para la relaci\u00f3n. En esta tabla se incluir\u00e1n las claves primarias de las instancias de las entidades que participen de la relaci\u00f3n.</p> <pre><code>erDiagram\n\nEntidad_A {\n  int id pk\n}\n\nEntidad_B {\n  int id pk\n}\n\n\"Relaci\u00f3n\" {\n  int id_a pk\n  int id_b pk\n}\n\nEntidad_A ||--o| \"Relaci\u00f3n\": \"participa en\"\nEntidad_B |o--|| \"Relaci\u00f3n\": \"participa en\"</code></pre>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Transformaci%C3%B3n%20M%20ER%20-%20M%20relacional/#relacion-binaria-con-cardinalidad-uno-a-muchos","title":"Relaci\u00f3n binaria con cardinalidad uno a muchos","text":"<p>En este caso vuelve a ser relevante si la es 1:N en ambas direcciones o en una sola. En el caso de que sea 1:N en una sola direcci\u00f3n, la clave for\u00e1nea se incluir\u00e1 en la tabla de la entidad que tiene la cardinalidad 1 (\u00f3 0:1).</p> <pre><code>erDiagram\n\nEntidad_A |o--o{ Entidad_B : \"relacionada con\"\n\nEntidad_A {\n  int id pk\n}\n\nEntidad_B {\n  int id pk\n  int id_a fk\n}</code></pre> <p>En el caso de que fuese 1:N en ambas direcciones, habr\u00eda que crear una tabla para la relaci\u00f3n.</p> <pre><code>erDiagram\n\nEntidad_A ||--|{ \"Relaci\u00f3n\" : \"participa en\"\n\nEntidad_A {\n  int id pk\n}\n\nEntidad_B {\n  int id pk\n}\n\n\"Relaci\u00f3n\" {\n  int id_a pk\n  int id_b pk\n}\n\nEntidad_B ||--|{ \"Relaci\u00f3n\" : \"participa en\"</code></pre>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Workbench%20-%20reverse%20engeneer/","title":"Comprobar correspondencia script y modelo","text":"<ul> <li>Pasos para realizar la ingenier\u00eda inversa</li> <li>Ingenier\u00eda inversa BD live</li> <li>Ingenier\u00eda inversa BD script</li> </ul> <p>MySQL Workbench es una aplicaci\u00f3n de Oracle que permite conectarse a un servidor SQL para realizar toda una serie de tareas de gesti\u00f3n y configuraci\u00f3n.</p> <p>Una de las funcionalidades de Workbench es la capacidad de generar una diagrama entidad-relaci\u00f3n (ER) a partir de un esquema de base de datos existente. Este proceso se conoce como reverse engineering o ingenier\u00eda inversa.</p> <p>Esta funcionalidad nos puede resultar \u00fatil para, adem\u00e1s de ver el diagrama que se corresponde con una base de datos real, comprobar que el esquema de base de datos que hemos dise\u00f1ado en un script SQL se corresponde con el modelo relacional que hemos planteado.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Workbench%20-%20reverse%20engeneer/#pasos-para-realizar-la-ingenieria-inversa","title":"Pasos para realizar la ingenier\u00eda inversa","text":"<p>Antes de ver como se puede realizar la ingenier\u00eda inversa veremos c\u00f3mo ejecutar un script para crear una base de datos (en este caso de prueba) tanto con MySQL Workbench como con la consola de MySQL Shell.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Workbench%20-%20reverse%20engeneer/#ingenieria-inversa-bd-live","title":"Ingenier\u00eda inversa BD live","text":""},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Workbench%20-%20reverse%20engeneer/#ingenieria-inversa-bd-script","title":"Ingenier\u00eda inversa BD script","text":""},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%201/","title":"Ejercicio 1","text":"<ul> <li>Enunciado</li> <li>Entidades</li> <li>Relaciones</li> <li>Diagrama ER notaci\u00f3n de pata de gallo (crow's foot)</li> <li>Diagrama ER notaci\u00f3n de Peter Chen</li> <li>Modelo Relacional / tablas</li> </ul>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%201/#enunciado","title":"Enunciado","text":"<p>Una empresa vende productos a varios clientes. Se necesita conocer los datos personales de los clientes (nombre, apellidos, dni, direcci\u00f3n y fecha de nacimiento). Cada producto tiene un nombre y un c\u00f3digo, as\u00ed como un precio unitario. Un cliente puede comprar varios productos a la empresa, y un mismo producto puede ser comprado por varios clientes. Los productos son suministrados por diferentes proveedores. Se debe tener en cuenta que un producto s\u00f3lo puede ser suministrado por un proveedor, y que un proveedor puede suministrar diferentes productos. De cada proveedor se desea conocer eI NIF, nombre y direcci\u00f3n.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%201/#entidades","title":"Entidades","text":"<ul> <li>Productos: nombre, c\u00f3digo y precio unitario.</li> <li>Clientes: nombre, apellidos, dni, direcci\u00f3n, y fecha de nacimiento.</li> <li>Proveedores: NIF, nombre, direcci\u00f3n.</li> </ul>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%201/#relaciones","title":"Relaciones","text":"<ul> <li>Comprar: entre clientes y productos. Un producto puede ser comprado por varios clientes. Un cliente puede comprar varios productos.</li> <li>Suministrar: Los proveedores pueden suministrar varios productos, pero un producto s\u00f3lo puede ser suministrado por un proveedor.</li> </ul>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%201/#diagrama-er-notacion-de-pata-de-gallo-crows-foot","title":"Diagrama ER notaci\u00f3n de pata de gallo (crow's foot)","text":"<pre><code>erDiagram\nProductos {\n   int codigo pk\n   string nif fk\n   string nombre\n   float precio_unitario\n}\n\nClientes {\n   string dni pk\n   string nombre\n   string apellidos\n   string direccion\n   date fecha_nacimiento\n}\n\nProveedores {\n   string nif pk\n   string nombre\n   string direccion\n}\n\nCompras {\n  string cod_producto fk,pk\n  string dni_cliente fk,pk\n  int unidades\n  float cuantia\n  datatime fecha_compra\n}\n\nProveedores ||--|{ Productos: suministrar\nClientes ||--o{ Compras : tiene\nProductos ||--o{ Compras : tiene</code></pre>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%201/#diagrama-er-notacion-de-peter-chen","title":"Diagrama ER notaci\u00f3n de Peter Chen","text":""},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%201/#modelo-relacional-tablas","title":"Modelo Relacional / tablas","text":"<p>Relaciones / tablas</p> <ul> <li>Productos:</li> <li><code>codigo</code>: clave primaria.</li> <li><code>nif</code>: clave for\u00e1nea.</li> <li><code>nombre</code>.</li> <li><code>precio_unitario</code>.</li> <li>Clientes:</li> <li><code>dni</code>: clave primaria.</li> <li><code>nombre</code>.</li> <li><code>apellidos</code>.</li> <li><code>direccion</code>.</li> <li><code>fecha_nacimiento</code>.</li> <li>Compras:</li> <li><code>cod_producto</code>: clave primaria y for\u00e1nea.</li> <li><code>dni_cliente</code>: clave primaria y for\u00e1nea.</li> <li><code>unidades</code>.</li> <li><code>cuantia</code>.</li> <li><code>fecha_compra</code>.</li> <li>Proveedores:</li> <li><code>nif</code>: clave primaria.</li> <li><code>nombre</code>.</li> <li><code>direccion</code>.</li> </ul>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%202/","title":"Ejercicio 2","text":"<ul> <li>Enunciado</li> <li>Entidades</li> <li>Relaciones</li> <li>Diagrama ER notaci\u00f3n pata de gallo</li> <li>Diagrama ER notaci\u00f3n de Chen</li> <li>Modelo Relacional / tablas</li> </ul>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%202/#enunciado","title":"Enunciado","text":"<p>Se desea informatizar la gesti\u00f3n de una empresa de transportes que reparte paquetes por toda Espa\u00f1a. Los encargados de llevar los paquetes son los camioneros de los que se quiere guardar el dni, nombre, tel\u00e9fono, direcci\u00f3n, salario y poblaci\u00f3n en la que vive. De los paquetes transportados interesa conocer el c\u00f3digo de paquete, descripci\u00f3n, destinatario y direcci\u00f3n del destinatario. Un camionero distribuye muchos paquetes, y un paquete s\u00f3lo puede ser distribuido por un camionero. De las provincias a las que llegan los paquetes interesa guardar el c\u00f3digo de provincia y el nombre. Un paquete s\u00f3lo se puede llevar a una provincia. Sin embargo, a una provincia pueden llegar varios paquetes. De los camiones que llevan los camioneros, interesa conocer la matr\u00edcula, modelo, tipo y potencia. Un camionero puede conducir diferentes camiones en fechas diferentes, y un cami\u00f3n puede ser conducido por varios camioneros.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%202/#entidades","title":"Entidades","text":"<ul> <li>Camionero: dni, nombre, tel\u00e9fono, direcci\u00f3n, salario, poblaci\u00f3n.</li> <li>Cami\u00f3n: matr\u00edcula, modelo, tipo, potencia.</li> <li>Paquete: c\u00f3digo, descripci\u00f3n, destinatario, direcci\u00f3n.</li> <li>Provincia: c\u00f3digo, nombre.</li> </ul> <p>Podr\u00eda ser interesante a\u00f1adir una entidad destinatario en caso de que se repita muchas veces. Lo mismo con la entidad que env\u00eda los paquetes (que podr\u00eda ser Cliente). Destinatario: direcci\u00f3n.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%202/#relaciones","title":"Relaciones","text":"<ul> <li>Llevar: Un camionero lleva paquetes. Un paquete est\u00e1 asignado a un camionero y cada camionero transporta varios paquetes.</li> <li>Conducir: Un camionero conduce varios camiones (distintas fechas) y un cami\u00f3n ser\u00e1 conducido por varios camioneros.</li> </ul> <p>Para la relaci\u00f3n del camionero que conduce varios camiones, en distintas fechas, y un cami\u00f3n es conducido a lo largo del tiempo por distintos camioneros (relaci\u00f3n M:N) crear\u00e9 la tabla viaje que los relacionar\u00e1 a ambos.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%202/#diagrama-er-notacion-pata-de-gallo","title":"Diagrama ER notaci\u00f3n pata de gallo","text":"<pre><code>erDiagram\n\nCamionero {\n   string dni pk\n   string nombre\n   int telefono\n   string direccion\n   int salario\n   string poblacion\n}\n\nCamion {\n   string matricula pk\n}\n\nPaquete {\n   int codigo pk\n   string destinatario\n   string direccion\n   int cod_provincia fk\n}\n\nProvincia {\n   int codigo pk\n   string nombre\n}\n\nViaje {\n   string dni_camionero pk, fk\n   string matricula_camion pk, fk\n   datetime fecha\n}\n\nCamion ||--o{ Viaje: hace\nCamionero ||--o{ Viaje: hace\nCamionero ||--o{ Paquete: tranportar\n\nPaquete ||--o{ Provincia: llega</code></pre> <p>La entidad <code>Viaje</code> que sirve de enlace entre <code>Camionero</code> y <code>Camion</code> ha de tener como clave primaria la combinaci\u00f3n de: <code>dni_camionero</code>, <code>matricula_camion</code> y <code>fecha</code>, ya que un mismo par <code>Camionero</code>, <code>Cami\u00f3n</code> podr\u00e1 darse m\u00faltiples veces en diferentes fechas.</p> <p>Otra opci\u00f3n, para evitar tener una clave primaria compuesta por tres campos, ser\u00eda darle su propio atributo clave primaria <code>id</code> a <code>Viaje</code>.</p> <p>Debido a la forma en que funcionan las claves en el tipo de tablas que crea MySQL (InnoDB) el hecho de que la clave primaria sea compuesta no deber\u00eda suponer un problema de rendimiento. Por otro lado, si esta clave primaria compuesta se utiliza como clave for\u00e1nea en otras tablas deber\u00e1 de ser incluida en estas tablas como tal pudiendo causar problemas dependiendo del tama\u00f1o de la calve. En el caso que nos ocupa no deber\u00eda de ser un problema.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%202/#diagrama-er-notacion-de-chen","title":"Diagrama ER notaci\u00f3n de Chen","text":""},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%202/#modelo-relacional-tablas","title":"Modelo Relacional / tablas","text":"<p>Tablas, claves primarias y for\u00e1neas:</p> <ul> <li>Camionero:</li> <li><code>dni</code>: clave primaria.</li> <li><code>nombre</code>.</li> <li><code>telefono</code>.</li> <li><code>direccion</code>.</li> <li><code>salario</code>.</li> <li><code>poblacion</code>.</li> <li>Camion:</li> <li><code>matricula</code>: clave primaria.</li> <li>Paquete:</li> <li><code>codigo</code>: clave primaria.</li> <li><code>destinatario</code>.</li> <li><code>direccion</code>.</li> <li><code>cod_poblacion</code>: clave for\u00e1nea.</li> <li>Provincia:</li> <li><code>codigo</code>: clave primaria.</li> <li><code>nombre</code>.</li> <li>Poblacion:</li> <li><code>codigo</code>: clave primaria.</li> <li><code>cod_provincia</code>: clave for\u00e1nea.</li> <li><code>nombre</code>.</li> <li>Viaje:</li> <li><code>dni_camionero</code>: clave primaria y for\u00e1nea.</li> <li><code>matricula_camion</code>: clave primaria y for\u00e1nea.</li> <li><code>fecha</code>.</li> </ul>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%203/","title":"Ejercicio 3","text":"<ul> <li>Enunciado</li> <li>Entidades y atributos</li> <li>Diagrama entidad-relaci\u00f3n</li> <li>Modelo relacional / tablas</li> <li>Explicaci\u00f3n relaci\u00f3n de pertenencia entre <code>Alumno</code> y <code>Grupo</code></li> <li>Explicaci\u00f3n relaci\u00f3n <code>delegado</code></li> </ul>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%203/#enunciado","title":"Enunciado","text":"<p>Se desea dise\u00f1ar la base de datos de un Instituto. En la base de datos se desea guardar los datos de los profesores del Instituto (DNI, nombre, direcci\u00f3n y tel\u00e9fono). Los profesores imparten m\u00f3dulos, y cada m\u00f3dulo tiene un c\u00f3digo y un nombre. Cada alumno est\u00e1 matriculado en uno o varios m\u00f3dulos. De cada alumno se desea guardar el n\u00ba de expediente, nombre, apellidos y fecha de nacimiento. Los profesores pueden impartir varios m\u00f3dulos, pero un m\u00f3dulo s\u00f3lo puede ser impartido por un profesor. Un curso tiene varios m\u00f3dulos y cada curso (c\u00f3digo de curso) se organiza en uno o m\u00e1s grupo de alumnos, uno de los cuales es el delegado del grupo.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%203/#entidades-y-atributos","title":"Entidades y atributos","text":"<p>Lista de entidades y sus atributos:</p> <ul> <li>Profesor</li> <li>DNI</li> <li>Nombre</li> <li>Direcci\u00f3n</li> <li>tel\u00e9fono</li> <li>M\u00f3dulo</li> <li>C\u00f3digo</li> <li>Nombre</li> <li>Alumno</li> <li>N\u00ba de expediente</li> <li>Nombre</li> <li>Apellidos</li> <li>Fecha de nacimiento</li> <li>Curso</li> <li>C\u00f3digo de curso</li> <li>Grupo</li> <li>Letra</li> </ul>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%203/#diagrama-entidad-relacion-notacion-pata-de-gallo","title":"Diagrama entidad-relaci\u00f3n notaci\u00f3n pata de gallo","text":"<pre><code>erDiagram\n\nProfesor {\n  string DNI pk\n  string Nombre\n  string Direccion\n  int Telefono\n }\n\nModulo {\n  string Codigo pk\n  string Nombre\n}\n\nAlumno {\n  int NExpediente pk\n  string Nombre\n  string Apellidos\n  date FechaDeNacimiento\n}\n\nProfesor ||--o{ Modulo : Imparte\n\nAlumno }|--|{ Modulo : Matriculado\n\nModulo }|--|| Curso : Organiza\n\nCurso ||--o{ Grupo : Organiza\n\nCurso {\n  string CodigoCurso pk\n}\n\nGrupo {\n  string Letra pk\n  string CodigoCurso pk,fk\n  int NExpedienteDelegado fk\n}\n\nAlumno ||--o| Grupo : Delegado\n\nAlumno }|--|{ Grupo : Pertenece</code></pre>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%203/#diagrama-entidad-relacion-notacion-de-chen","title":"Diagrama entidad-relaci\u00f3n notaci\u00f3n de Chen","text":""},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%203/#modelo-relacional-tablas","title":"Modelo relacional / tablas","text":"<p>Lista de tablas (relaciones) y sus atributos (claves primarias subrayadas y for\u00e1neas en cursiva):</p> <ul> <li>Profesor con atributos DNI (clave primaria), Nombre, Direcci\u00f3n, Tel\u00e9fono</li> <li> <p>Modulo C\u00f3digo (clave primaria), Nombre, DNI Profesor (clave for\u00e1nea), C\u00f3digo de curso (clave for\u00e1nea).</p> </li> <li> <p>Profesor (DNI, Nombre, Direcci\u00f3n, Tel\u00e9fono)</p> </li> <li>Modulo (C\u00f3digo, Nombre, DNI Profesor, C\u00f3digo de curso)</li> <li>Alumno (N\u00ba de expediente, Nombre, Apellidos, Fecha de nacimiento)</li> <li>Curso (C\u00f3digo de curso)</li> <li> <p>Grupo (Letra, C\u00f3digo de curso, N\u00ba de expediente delegado)</p> </li> <li> <p>Matricula (N\u00ba de expediente, C\u00f3digo)</p> </li> <li>Pertenece a grupo (N\u00ba de expediente, Letra, C\u00f3digo de curso)</li> </ul> <pre><code>erDiagram\n\nProfesor {\n  string DNI pk\n  string Nombre\n  string Direccion\n  int Telefono\n }\n\nModulo {\n  string Codigo pk\n  string Nombre\n  string DNIProfesor fk\n  string CodCurso fk\n }\n\nAlumno {\n  int NExpediente pk\n  string Nombre\n  string Apellidos\n  date FechaDeNacimiento\n}\n\nProfesor ||--o{ Modulo : Imparte\n\nAlumno ||--|{ Matricula : Tiene\n\nMatricula }|--|| Modulo : Tiene\n\nModulo }|--|| Curso : Organiza\n\nCurso ||--o{ Grupo : Organiza\n\nCurso {\n  string CodigoCurso pk\n}\n\nGrupo {\n  string Letra pk\n  string CodigoCurso pk,fk\n  int NExpedienteDelegado fk\n}\n\nAlumno ||--o| Grupo : Delegado\n\nAlumno ||--|{ PerteneceAGrupo: Esta\n\nGrupo ||--|{ PerteneceAGrupo: Contiene\n\nMatricula {\n  int NExpediente pk, fk\n  string CodModulo pk, fk \n}\n\nPerteneceAGrupo {\n  int NExpediente pk, fk\n  string Letra pk, fk\n  string CodCurso pk, fk\n}</code></pre>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%203/#explicacion-relacion-de-pertenencia-entre-alumno-y-grupo","title":"Explicaci\u00f3n relaci\u00f3n de pertenencia entre <code>Alumno</code> y <code>Grupo</code>","text":"<p>En el diagrama se muestra que hay una relaci\u00f3n entre <code>Alumno</code> y <code>Grupo</code> de varios a varios (respecto a su pertenencia). Esto se leer\u00eda como \"un grupo contiene uno o m\u00e1s alumnos y una alumno puede pertenecer a uno o m\u00e1s grupos\". Esto se deduce si aceptamos que un alumno puede estar matriculado en m\u00f3dulos de diferentes cursos como es el caso de FP modular (si no hay conflicto un alumno podr\u00eda matricularse de hasta dos ciclos).</p> <p>Para representar esta relaci\u00f3n se ha creado una tabla intermedia <code>PerteneceAGrupo</code> que contiene las claves for\u00e1neas de <code>Alumno</code> y <code>Grupo</code> y la clave primaria de la tabla.</p> <pre><code>erDiagram\n\nAlumno {\n  int NExpediente pk\n  string Nombre\n  string Apellidos\n  date FechaDeNacimiento\n}\n\nGrupo {\n  string Letra pk\n  string CodigoCurso pk,fk\n  int NExpedienteDelegado fk\n}\n\nAlumno }|--|{ Grupo : Pertenece</code></pre> <p>Cuando se pasa al modelo relacional se crea una tabla <code>PerteneceAGrupo</code> que contiene las claves for\u00e1neas de <code>Alumno</code> y <code>Grupo</code> y la clave primaria de la tabla.</p> <pre><code>erDiagram\n\nAlumno {\n  int NExpediente pk\n  string Nombre\n  string Apellidos\n  date FechaDeNacimiento\n}\n\nGrupo {\n  string Letra pk\n  string CodigoCurso pk,fk\n  int NExpedienteDelegado fk\n}\n\nPerteneceAGrupo {\n  int NExpediente pk, fk\n  string Letra pk, fk\n  string CodCurso pk, fk\n}\n\nAlumno ||--|{ PerteneceAGrupo: Esta\nGrupo ||--|{ PerteneceAGrupo: Esta</code></pre>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%203/#explicacion-relacion-delegado","title":"Explicaci\u00f3n relaci\u00f3n <code>delegado</code>","text":"<p>Un alumno puede ser delegado de un grupo, pero no es obligatorio que lo sea. Por otro lado todo grupo tendr\u00e1 un \u00fanico delegado. Con el texto del enunciado en la mano tenemos que un alumno podr\u00eda estar matriculado en m\u00e1s de un grupo (caso de que un alumno de FP modular se matricule en m\u00f3dulos de dos ciclos/cursos diferentes) por lo que esto implicar\u00eda que tendr\u00eda que estar en dos grupos distintos.</p> <p>Si se cumpliese que un alumno est\u00e1 matriculado en dos m\u00f3dulos de dos cursos y, por lo tanto, en dos grupos; nada se dice en el enunciado que no pueda ser elegido delegado de ambos grupos. Por lo tanto la relaci\u00f3n <code>delegado</code> entre alumno y grupo se podr\u00eda poner como:</p> <pre><code>erDiagram\n\nAlumno {\n  int NExpediente pk\n  string Nombre\n  string Apellidos\n  date FechaDeNacimiento\n}\n\nGrupo {\n  string Letra pk\n  string CodigoCurso pk,fk\n  int NExpedienteDelegado fk\n}\n\nAlumno ||--o| Grupo : Delegado</code></pre>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%204/","title":"Ejercicio 4 - Modelo Relacional","text":"<ul> <li>Enunciado</li> <li>Entidades y Atributos</li> <li>Relaciones y Cardinalidades</li> <li>Diagrama ER</li> <li>Tablas (Relaciones del Modelo Relacional)</li> <li>Restricciones</li> </ul>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%204/#enunciado","title":"Enunciado","text":"<p>Una base de datos para una peque\u00f1a empresa debe contener informaci\u00f3n acerca de clientes, art\u00edculos y pedidos. Hasta el momento se registran los siguientes datos en documentos varios:</p> <ul> <li>Para cada cliente: N\u00famero de cliente (\u00fanico), Direcciones de env\u00edo (varias por cliente), Saldo, L\u00edmite de cr\u00e9dito (depende del cliente, pero en ning\u00fan caso debe superar los 3.000.000 pts), Descuento.</li> <li>Para cada art\u00edculo: N\u00famero de art\u00edculo (\u00fanico), F\u00e1bricas que lo distribuyen, Existencias de ese art\u00edculo en cada f\u00e1brica, Descripci\u00f3n del art\u00edculo.</li> <li>Para cada pedido: Cada pedido tiene una cabecera y el cuerpo del pedido. La cabecera est\u00e1 formada por el n\u00famero de cliente, direcci\u00f3n de env\u00edo y fecha del pedido. El cuerpo del pedido son varias l\u00edneas, en cada l\u00ednea se especifican el n\u00famero del art\u00edculo pedido y la cantidad.</li> </ul> <p>Adem\u00e1s, se ha determinado que se debe almacenar la informaci\u00f3n de las f\u00e1bricas. Sin embargo, dado el uso de distribuidores, se usar\u00e1: N\u00famero de la f\u00e1brica (\u00fanico) y Tel\u00e9fono de contacto. Y se desean ver cu\u00e1ntos art\u00edculos (en total) provee la f\u00e1brica. Tambi\u00e9n, por informaci\u00f3n estrat\u00e9gica, se podr\u00eda incluir informaci\u00f3n de f\u00e1bricas alternativas respecto de las que ya fabrican art\u00edculos para esta empresa. Nota: Una direcci\u00f3n se entender\u00e1 como N\u00ba, Calle, Comunidad y Ciudad. Una fecha incluye hora. Se pide hacer el diagrama ER para la base de datos que represente esta informaci\u00f3n.</p>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%204/#entidades-y-atributos","title":"Entidades y Atributos","text":"<p>Entidades y sus atributos:</p> <ul> <li>Cliente: N\u00famero de cliente, Direcciones (varias por cliente), Saldo, L\u00edmite de cr\u00e9dito, Descuento.</li> <li>Art\u00edculo: N\u00famero de art\u00edculo, F\u00e1bricas que lo distribuyen, Existencias, Descripci\u00f3n.</li> <li>Pedido compuesta de dos entidades:</li> <li>Cabecera del Pedido: N\u00famero de cliente, Direcci\u00f3n de env\u00edo, Fecha del pedido. Lo llamaremos Pedido.</li> <li>Cuerpo del Pedido: N\u00famero del art\u00edculo, Cantidad. La llamaremos L\u00ednea de Pedido.</li> <li>F\u00e1brica: N\u00famero de f\u00e1brica, Tel\u00e9fono de contacto.</li> <li>Direcci\u00f3n: N\u00famero, Calle, Comunidad, Ciudad.</li> </ul>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%204/#relaciones-y-cardinalidades","title":"Relaciones y Cardinalidades","text":"<p>Relaciones y sus cardinalidades:</p> <ul> <li>Cliente (N\u00famero de cliente) \u2192 Pedido (N\u00famero de cliente): 1:N (Un cliente puede hacer varios pedidos).</li> <li>Art\u00edculo (N\u00famero de art\u00edculo) \u2192 L\u00ednea de Pedido (N\u00famero del art\u00edculo): 1:N (Un art\u00edculo puede estar en varias l\u00edneas de pedido).</li> <li>F\u00e1brica (N\u00famero de f\u00e1brica) \u2192 Art\u00edculo (F\u00e1bricas que lo distribuyen): 1:N (Una f\u00e1brica puede distribuir varios art\u00edculos).</li> <li>Art\u00edculo (N\u00ba de art\u00edculo) \u2192 F\u00e1brica (N\u00ba de f\u00e1brica): N:M (Un art\u00edculo puede ser distribuido por varias f\u00e1bricas y una f\u00e1brica puede distribuir varios art\u00edculos).</li> <li>Pedido (N\u00famero de pedido) \u2192 L\u00ednea de Pedido (N\u00famero de pedido, N\u00famero de art\u00edculo): 1:N (Un pedido puede tener varias l\u00edneas de pedido).</li> <li>Direcci\u00f3n (N\u00famero de cliente) \u2192 Cliente (Direcciones): 1:N (Un cliente puede tener varias direcciones).</li> </ul>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%204/#diagrama-er-notacion-pata-de-gallo","title":"Diagrama ER notaci\u00f3n pata de gallo","text":"<pre><code>erDiagram\n\nCliente {\n  int NCliente pk\n  real Saldo\n  real Credito\n  real Descuento\n}\n\nDireccion {\n  int NDireccion pk\n  int NCliente fk\n  int Numero\n  string Calle\n  string Comunidad\n  string Ciudad\n}\n\nPedido {\n  int NPedido pk\n  int NCliente fk\n  int NDireccion fk\n  datetime Fecha\n}\n\nLineaPedido {\n  int NPedido pk, fk\n  int NArticulo pk, fk\n  int Cantidad\n}\n\nFabrica {\n  int NFabrica pk\n  string Telefono\n  bool Alternativa\n}\n\nArticulo {\n  int NArticulo pk\n  string Descripcion\n}\n\nCliente ||--|{ Direccion : Tiene\n\nCliente ||--|{ Pedido : Realiza\n\nPedido }|--|| Direccion : Tiene\n\nPedido ||--|{ LineaPedido : Contiene\n\nArticulo ||--|{ LineaPedido : Contiene\n\n\nFabricante {\n  int NFabrica pk, fk\n  int NArticulo pk, fk\n  int Existencias\n}\n\nFabrica ||--|{ Fabricante : Distribuye\n\nFabricante }|--|| Articulo : Provee</code></pre>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%204/#diagrama-er-notacion-de-chen","title":"Diagrama ER notaci\u00f3n de Chen","text":""},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%204/#tablas-relaciones-del-modelo-relacional","title":"Tablas (Relaciones del Modelo Relacional)","text":"<p>Relaci\u00f3n de tablas, atributos (columnas) y sus tipos:</p> <ul> <li>Cliente:</li> <li>NCliente: Clave primaria (int)</li> <li>Saldo (real)</li> <li>Credito (real)   E* Descuento (real)</li> <li>Direccion:</li> <li>NDireccion: Clave primaria (int)</li> <li>NCliente: Clave for\u00e1nea (int)</li> <li>Numero (int)A</li> <li>Calle (string)</li> <li>Comunidad (string)</li> <li>Ciudad (string)</li> <li>Pedido:</li> <li>NPedido: Clave primaria (int)</li> <li>NCliente: Clave for\u00e1nea (int)</li> <li>NDireccion: Clave for\u00e1nea (int)</li> <li>Fecha (datetime)</li> <li>LineaPedido:</li> <li>NPedido: Clave primaria y for\u00e1nea (int) \u2192 Pedido</li> <li>NArticulo: Clave primaria y for\u00e1nea (int) \u2192 Articulo</li> <li>Cantidad (int)</li> <li>Articulo:</li> <li>NArticulo: Clave primaria (int)</li> <li>Descripcion (string)</li> <li>Fabrica:</li> <li>NFabrica: Clave primaria (int)</li> <li>Telefono (string)</li> <li>Alternativa (bool)</li> <li>Fabricante:</li> <li>NFabrica: Clave primaria y for\u00e1nea (int) \u2192 Fabrica</li> <li>NArticulo: Clave primaria y for\u00e1nea (int) \u2192 Articulo</li> <li>Existencias (int)</li> </ul>"},{"location":"GBD/UD%2003%20-%20Modelo%20relacional/Ejercicios/Ejercicio%204/#restricciones","title":"Restricciones","text":"<ul> <li>La direcci\u00f3n de env\u00edo de un pedido debe ser una de las direcciones del cliente.</li> <li>El l\u00edmite de cr\u00e9dito no debe superar los 3.000.000 pts.</li> </ul>"},{"location":"GBD/UD%2004%20-%20Dise%C3%B1o%20f%C3%ADsico%20de%20la%20base%20de%20datos%20%28DDL%29/Introducci%C3%B3n/","title":"Instalaci\u00f3n de un SGBDR","text":"<ul> <li>Instalaci\u00f3n de MySQL</li> <li>Intalaci\u00f3n de SQLite</li> </ul> <p>Instalaremos dos gestores de bases de datos: MySQL y SQLite.</p>"},{"location":"GBD/UD%2004%20-%20Dise%C3%B1o%20f%C3%ADsico%20de%20la%20base%20de%20datos%20%28DDL%29/Introducci%C3%B3n/#instalacion-de-mysql","title":"Instalaci\u00f3n de MySQL","text":""},{"location":"GBD/UD%2004%20-%20Dise%C3%B1o%20f%C3%ADsico%20de%20la%20base%20de%20datos%20%28DDL%29/Introducci%C3%B3n/#intalacion-de-sqlite","title":"Intalaci\u00f3n de SQLite","text":""},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/","title":"Enunciado tareas unidad did\u00e1ctica 4 - Consultas","text":"<p>La Asociaci\u00f3n Andaluza de V\u00eddeo Juegos y E-Sports gestiona diferentes campeonatos de juegos online mediante una base de datos denominada <code>campeonatos</code> que almacena informaci\u00f3n sobre los <code>concursante</code>, sus <code>equipo</code> y los diferentes <code>juego</code> en los que <code>participa</code>n los <code>concursante</code>s.</p> <p>A partir de la base de datos CAMPEONATO formada por las tablas CONCURSANTE, JUEGO, EQUIPO  y PARTICIPA, relacionadas tal y como muestra el esquema relacional de la imagen, debes realizar las siguientes consultas indicadas m\u00e1s abajo.</p>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/#esquema-relacional","title":"Esquema relacional","text":"<p>El esquema relacional de la base de datos <code>campeonatos</code> es el siguiente:</p> <pre><code>erDiagram\n    CONCURSANTE {\n       char(3) cdconcur pk\n       varchar(30) nombre\n       date fecha_inscri\n       float cuota_inscri\n       enum sexo\n       char(3) cdidolo fk\n       char(2) cdequipo fk\n    }\n\n    EQUIPO {\n       char(3) cdequipo pk\n       varchar(50) nombre\n       varchar(20) comunidad\n       year(4) anio_funda\n    }\n\n    JUEGO {\n       char(3) cdjuego pk\n       varchar(40) nombre\n       enum dificultad\n       smallint megusta \n       char(3) cdequipo fk\n    }\n\n    PARTICIPA {\n       char(3) cdconcur pk, fk\n       char(3) cdjuego pk, fk\n       date fecha_inicio\n       smallint(5) puntos\n    }\n\n    CONCURSANTE }o..o| EQUIPO : \"\" \n    CONCURSANTE ||--o{ PARTICIPA : \"\"\n    JUEGO ||--o{ PARTICIPA : \"\"\n    EQUIPO ||..o{ JUEGO : \"\"</code></pre> <ul> <li>CONCURSANTE: almacena informaci\u00f3n de los concursantes que participan en juegos.</li> <li>EQUIPO: almacena informaci\u00f3n sobre los equipos de los concursantes y que adem\u00e1s organizan juegos.</li> <li>JUEGO: almacena informaci\u00f3n sobre diferentes juegos online y su nivel de dificultad: alta, media, baja.</li> <li>PARTICIPA: almacena informaci\u00f3n sobre los puntos obtenidos por los concursantes en los juegos en los que participan y la fecha de inicio del juego.</li> </ul>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/#restricciones","title":"restricciones","text":"<ul> <li>Los concursantes pueden catalogar a uno de ellos como su \u00eddolo, pero no es obligatorio. Un mismo concursante puede ser \u00eddolo de varios concursantes.</li> <li>Los concursantes pueden pertenecer a un \u00fanico equipo, aunque hay concursantes sin equipo que van por libre.</li> <li>En el campeonato, cada equipo puede organizar varios juegos o ninguno, y cada juego estar\u00e1 organizado por un \u00fanico equipo.</li> <li>Los concursantes pueden participar en varios juegos, que pueden ser los organizados por su equipo o por otros equipos.</li> <li>En un mismo juego pueden participar concursantes de varios equipos.</li> </ul>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/#consultas","title":"Consultas","text":"<p>Realiza las siguientes consultas y responde indicando el c\u00f3digo SQL que genera cada una.</p>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/#consulta-1","title":"Consulta 1","text":"<p>Devuelve el c\u00f3digo, nombre, fecha de inscripci\u00f3n y cuota de los concursantes masculinos cuya cuota de inscrici\u00f3n se encuentre entre 50 y 100 \u20ac (ambos inclusive), su a\u00f1o de inscripci\u00f3n seal 2019 y el mes entre marzo y septiembre (ambos inclusive). Los resultados deben de estar ordenados por cuota de mayor a menor (<code>desc</code>).</p> <p>El encabezado de la tabla debe ser <code>C\u00f3digo, Jugador, Fecha, Cuota</code>.</p> <p>Han de realizarse dos versiones. La primera sin utilizar el operador <code>BETWEEN</code> y la segunda con \u00e9l.</p>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/#pistas-consulta-1","title":"Pistas consulta 1","text":"<ul> <li>Utilizar las funciones <code>year()</code> y <code>month()</code> para filtrar por el a\u00f1o y el mes.</li> </ul>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/#consulta-2","title":"Consulta 2","text":"<p>Devuelve un listado con el c\u00f3digo, nombre, comunidad y a\u00f1o de fundaci\u00f3n de los equipos de concursantes que son de Andaluc\u00eda, Murcia o Galicia y su a\u00f1o de fundaci\u00f3n es el 2019. Ordena por comunidad alfab\u00e9ticamente.</p> <p>Redacta dos versiones:</p> <ul> <li>Usando el operador \"IN()\" donde sea posible.</li> <li>Sin usa \"IN()\".</li> </ul>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/#consulta-3","title":"Consulta 3","text":"<p>Obt\u00e9n un listado con c\u00f3digo, nombre, dificultad y megusta de los juegos con m\u00e1s <code>megusta</code>.</p>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/#pista-consulta-3","title":"Pista consulta 3","text":"<p>Han de utilizarse subconsultas.</p>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/#consulta-4","title":"Consulta 4","text":"<p>Muestra todos los juegos que **no tengan un valor nulo en <code>megusta</code></p>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/#consulta-5","title":"Consulta 5","text":"<p>Mostrar los nombres, dificultad, megusta y c\u00f3digo de equipo de los juegos organizados por el equipo que ha organizado el juego de nombre <code>Elvenar</code>.</p>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/#consulta-6","title":"Consulta 6","text":"<p>Haz que la consulta anterior muestre tambi\u00e9n el nombre del equipo y la comunidad a la que pertenece.</p>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/#consulta-7","title":"Consulta 7","text":"<p>Mostrar el c\u00f3digo, nombre del concursante, c\u00f3digo de juego, fecha de inicio y puntos. Ordenar por c\u00f3digo de concursante.</p>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/#consulta-8","title":"Consulta 8","text":"<p>Muestra el c\u00f3digo y nombre del concursante, el nombre de su equipos y nombre de los juegos en los que participa y sus puntos. Los concursantes que no participan tambi\u00e9n aparecer\u00e1n mostrando \"sin juego\" y en puntos un cero.</p>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Enunciado%20corregido%20tarea/#consulta-9","title":"Consulta 9","text":"<p>Mostrar el c\u00f3digo de concursante, nombre y la media de puntos (en los juegos en los que ha participado). Se ha de redondear la media mostrando dos decimales y ordenar de mayor a menor n\u00famero de puntos.</p>"},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Introducci%C3%B3n/","title":"Hola","text":""},{"location":"GBD/UD%2005%20-%20Recuperar%20informacion%20de%20la%20base%20de%20datos/Introducci%C3%B3n/#adios","title":"Adios","text":""}]}